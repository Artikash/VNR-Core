// Created by Microsoft (R) C/C++ Compiler Version 10.00.30319.01 (a360c784).
//
// c:\tmp\build-sakura-desktop-release\cpp\tests\wmptest\release\wmp.tlh
//
// C++ source equivalent of Win32 type library wmp.dll
// compiler-generated file created 10/05/14 at 21:40:06 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("6bf52a50-394a-11d3-b153-00c04f79faa6"))
/* LIBID */ __WMPLib;
struct __declspec(uuid("19a6627b-da9e-47c1-bb23-00b5e668236a"))
/* interface */ IWMPEvents;
enum WMPPlaylistChangeEventType;
struct __declspec(uuid("1e7601fa-47ea-4107-9ea9-9004ed9684ff"))
/* interface */ IWMPEvents2;
struct __declspec(uuid("82a2986c-0293-4fd0-b279-b21b86c058be"))
/* interface */ IWMPSyncDevice;
enum WMPDeviceStatus;
enum WMPSyncState;
struct __declspec(uuid("1f504270-a66b-4223-8e96-26a06c63d69f"))
/* interface */ IWMPEvents3;
struct __declspec(uuid("56e2294f-69ed-4629-a869-aea72c0dcc2c"))
/* interface */ IWMPCdromRip;
enum WMPRipState;
struct __declspec(uuid("bd94dbeb-417f-4928-aa06-087d56ed9b59"))
/* interface */ IWMPCdromBurn;
enum WMPBurnFormat;
struct __declspec(uuid("d5f0f4f1-130c-11d3-b14e-00c04f79faa6"))
/* dual interface */ IWMPPlaylist;
struct __declspec(uuid("94d55e95-3fac-11d3-b155-00c04f79faa6"))
/* dual interface */ IWMPMedia;
enum WMPBurnState;
struct __declspec(uuid("3df47861-7df1-4c1f-a81b-4c26f0f7a7c6"))
/* interface */ IWMPLibrary;
enum WMPLibraryType;
struct __declspec(uuid("8363bc22-b4b4-4b19-989d-1cd765749dd1"))
/* dual interface */ IWMPMediaCollection;
struct __declspec(uuid("4a976298-8c0d-11d3-b389-00c04f68574b"))
/* dual interface */ IWMPStringCollection;
enum WMPFolderScanState;
enum WMPStringCollectionChangeEventType;
struct __declspec(uuid("26dabcfa-306b-404d-9a6f-630a8405048d"))
/* interface */ IWMPEvents4;
struct __declspec(uuid("6bf52a51-394a-11d3-b153-00c04f79faa6"))
/* dispinterface */ _WMPOCXEvents;
struct /* coclass */ WindowsMediaPlayer;
struct __declspec(uuid("6c497d62-8919-413c-82db-e935fb3ec584"))
/* dual interface */ IWMPPlayer4;
struct __declspec(uuid("7587c667-628f-499f-88e7-6a6f4e888464"))
/* dual interface */ IWMPCore3;
struct __declspec(uuid("bc17e5b7-7561-4c18-bb90-17d485775659"))
/* dual interface */ IWMPCore2;
struct __declspec(uuid("d84cca99-cce2-11d2-9ecc-0000f8085981"))
/* dual interface */ IWMPCore;
enum WMPOpenState;
enum WMPPlayState;
struct __declspec(uuid("74c09e02-f828-11d2-a74b-00a0c905f36e"))
/* dual interface */ IWMPControls;
struct __declspec(uuid("9104d1ab-80c9-4fed-abf0-2e6417a6df14"))
/* dual interface */ IWMPSettings;
struct __declspec(uuid("10a13217-23a7-439b-b1c0-d847c79b7774"))
/* dual interface */ IWMPPlaylistCollection;
struct __declspec(uuid("679409c0-99f7-11d3-9fb7-00105aa620bb"))
/* dual interface */ IWMPPlaylistArray;
struct __declspec(uuid("ec21b779-edef-462d-bba4-ad9dde2b29a7"))
/* dual interface */ IWMPNetwork;
struct __declspec(uuid("ee4c8fe2-34b2-11d3-a3bf-006097c9b344"))
/* dual interface */ IWMPCdromCollection;
struct __declspec(uuid("cfab6e98-8730-11d3-b388-00c04f68574b"))
/* dual interface */ IWMPCdrom;
struct __declspec(uuid("4f2df574-c588-11d3-9ed0-00c04fb6e937"))
/* dual interface */ IWMPClosedCaption;
struct __declspec(uuid("a12dcf7d-14ab-4c1b-a8cd-63909f06025b"))
/* dual interface */ IWMPError;
struct __declspec(uuid("3614c646-3b3b-4de7-a81e-930e3f2127b3"))
/* dual interface */ IWMPErrorItem;
struct __declspec(uuid("8da61686-4668-4a5c-ae5d-803193293dbe"))
/* dual interface */ IWMPDVD;
struct __declspec(uuid("40897764-ceab-47be-ad4a-8e28537f9bbf"))
/* dual interface */ IWMPPlayerApplication;
struct __declspec(uuid("54062b68-052a-4c25-a39f-8b63346511d4"))
/* dual interface */ IWMPPlayer3;
struct __declspec(uuid("0e6b01d1-d407-4c85-bf5f-1c01f6150280"))
/* dual interface */ IWMPPlayer2;
struct __declspec(uuid("6bf52a4f-394a-11d3-b153-00c04f79faa6"))
/* dual interface */ IWMPPlayer;
struct __declspec(uuid("f75ccec0-c67c-475c-931e-8719870bee7d"))
/* dual interface */ IWMPErrorItem2;
struct __declspec(uuid("6f030d25-0890-480f-9775-1f7e40ab5b8e"))
/* dual interface */ IWMPControls2;
struct __declspec(uuid("ab7c88bb-143e-4ea4-acc3-e4350b2106c3"))
/* dual interface */ IWMPMedia2;
struct __declspec(uuid("f118efc7-f03a-4fb4-99c9-1c02a5c1065b"))
/* dual interface */ IWMPMedia3;
struct __declspec(uuid("5c29bbe0-f87d-4c45-aa28-a70f0230ffa9"))
/* dual interface */ IWMPMetadataPicture;
struct __declspec(uuid("769a72db-13d2-45e2-9c48-53ca9d5b7450"))
/* dual interface */ IWMPMetadataText;
struct __declspec(uuid("fda937a4-eece-4da5-a0b6-39bf89ade2c2"))
/* dual interface */ IWMPSettings2;
struct __declspec(uuid("a1d1110e-d545-476a-9a78-ac3e4cb1e6bd"))
/* dual interface */ IWMPControls3;
struct __declspec(uuid("350ba78b-6bc8-4113-a5f5-312056934eb6"))
/* dual interface */ IWMPClosedCaption2;
struct __declspec(uuid("8ba957f5-fd8c-4791-b82d-f840401ee474"))
/* dual interface */ IWMPMediaCollection2;
struct __declspec(uuid("a00918f3-a6b0-4bfb-9189-fd834c7bc5a5"))
/* dual interface */ IWMPQuery;
struct __declspec(uuid("46ad648d-53f1-4a74-92e2-2a1b68d63fd4"))
/* dual interface */ IWMPStringCollection2;
struct __declspec(uuid("1d01fbdb-ade2-4c8d-9842-c190b95c3306"))
/* interface */ IWMPPlayerServices;
struct __declspec(uuid("1bb1592f-f040-418a-9f71-17c7512b4d70"))
/* interface */ IWMPPlayerServices2;
struct __declspec(uuid("cbb92747-741f-44fe-ab5b-f1a48f3b2a59"))
/* interface */ IWMPRemoteMediaServices;
struct __declspec(uuid("8b5050ff-e0a4-4808-b3a8-893a9e1ed894"))
/* interface */ IWMPSyncServices;
struct __declspec(uuid("39c2f8d5-1cf2-4d5e-ae09-d73492cf9eaa"))
/* interface */ IWMPLibraryServices;
struct __declspec(uuid("82cba86b-9f04-474b-a365-d6dd1466e541"))
/* interface */ IWMPLibrarySharingServices;
struct __declspec(uuid("dd578a4e-79b1-426c-bf8f-3add9072500b"))
/* interface */ IWMPLibrary2;
struct __declspec(uuid("788c8743-e57f-439d-a468-5bc77f2e59c6"))
/* interface */ IWMPFolderMonitorServices;
struct __declspec(uuid("88afb4b2-140a-44d2-91e6-4543da467cd1"))
/* interface */ IWMPSyncDevice2;
struct __declspec(uuid("b22c85f9-263c-4372-a0da-b518db9b4098"))
/* interface */ IWMPSyncDevice3;
struct __declspec(uuid("5f9cfd92-8cad-11d3-9a7e-00c04f8efb70"))
/* dual interface */ IWMPPlaylistCtrl;
struct __declspec(uuid("e41c88dd-2364-4ff7-a0f5-ca9859af783f"))
/* dual interface */ IAppDispatch;
struct __declspec(uuid("ef870383-83ab-4ea9-be48-56fa4251af10"))
/* dual interface */ IWMPSafeBrowser;
struct __declspec(uuid("21d077c1-4baa-11d3-bd45-00c04f6ea5ae"))
/* dual interface */ IWMPObjectExtendedProps;
struct __declspec(uuid("72f486b1-0d43-11d3-bd3f-00c04f6ea5ae"))
/* dual interface */ IWMPLayoutSubView;
struct __declspec(uuid("172e905d-80d9-4c2f-b7ce-2ccb771787a2"))
/* dual interface */ IWMPLayoutView;
struct __declspec(uuid("5af0bec1-46aa-11d3-bd45-00c04f6ea5ae"))
/* dual interface */ IWMPEventObject;
struct __declspec(uuid("6fcae13d-e492-4584-9c21-d2c052a2a33a"))
/* dual interface */ IWMPTheme;
struct __declspec(uuid("b2c2d18e-97af-4b6a-a56b-2ffff470fb81"))
/* dual interface */ IWMPLayoutSettingsDispatch;
struct __declspec(uuid("43d5ae92-4332-477c-8883-e0b3b063c5d2"))
/* dual interface */ IWMPWindow;
struct __declspec(uuid("98bb02d4-ed74-43cc-ad6a-45888f2e0dcc"))
/* dual interface */ IWMPBrandDispatch;
struct __declspec(uuid("504f112e-77cc-4e3c-a073-5371b31d9b36"))
/* dual interface */ IWMPNowPlayingHelperDispatch;
struct __declspec(uuid("2a2e0da3-19fa-4f82-be18-cd7d7a3b977f"))
/* dual interface */ IWMPNowDoingDispatch;
struct __declspec(uuid("946b023e-044c-4473-8018-74954f09dc7e"))
/* dual interface */ IWMPHoverPreviewDispatch;
struct __declspec(uuid("bb17fff7-1692-4555-918a-6af7bfacedd2"))
/* dispinterface */ IWMPButtonCtrlEvents;
struct /* coclass */ WMPButtonCtrl;
struct __declspec(uuid("87291b50-0c8e-11d3-bb2a-00a0c93ca73a"))
/* dual interface */ IWMPButtonCtrl;
struct /* coclass */ WMPListBoxCtrl;
struct __declspec(uuid("fc1880ce-83b9-43a7-a066-c44ce8c82583"))
/* dual interface */ IWMPListBoxCtrl;
struct __declspec(uuid("d255dfb8-c22a-42cf-b8b7-f15d7bcf65d6"))
/* dual interface */ IWMPListBoxItem;
struct __declspec(uuid("63d9d30f-ae4c-4678-8ca8-5720f4fe4419"))
/* dual interface */ IWMPPlaylistCtrlColumn;
struct __declspec(uuid("cdac14d2-8be4-11d3-bb48-00a0c93ca73a"))
/* dispinterface */ IWMPSliderCtrlEvents;
struct /* coclass */ WMPSliderCtrl;
struct __declspec(uuid("f2bf2c8f-405f-11d3-bb39-00a0c93ca73a"))
/* dual interface */ IWMPSliderCtrl;
struct __declspec(uuid("a85c0477-714c-4a06-b9f6-7c8ca38b45dc"))
/* dispinterface */ IWMPVideoCtrlEvents;
struct /* coclass */ WMPVideoCtrl;
struct __declspec(uuid("61cecf10-fc3a-11d2-a1cd-005004602752"))
/* dual interface */ IWMPVideoCtrl;
struct /* coclass */ WMPEffects;
struct __declspec(uuid("a9efab80-0a60-4c3f-bbd1-4558dd2a9769"))
/* dual interface */ IWMPEffectsCtrl;
struct /* coclass */ WMPEqualizerSettingsCtrl;
struct __declspec(uuid("2bd3716f-a914-49fb-8655-996d5f495498"))
/* dual interface */ IWMPEqualizerSettingsCtrl;
struct /* coclass */ WMPVideoSettingsCtrl;
struct __declspec(uuid("07ec23da-ef73-4bde-a40f-f269e0b7afd6"))
/* dual interface */ IWMPVideoSettingsCtrl;
struct /* coclass */ WMPDolbyDigitalSettingsCtrl;
struct __declspec(uuid("bbd6801a-a1d4-4d05-9f2d-29e0024c3fd9"))
/* dual interface */ IWMPDolbyDigitalSettingsCtrl;
struct /* coclass */ WMPLibraryTreeCtrl;
struct __declspec(uuid("b738fcae-f089-45df-aed6-034b9e7db632"))
/* dual interface */ IWMPLibraryTreeCtrl;
struct /* coclass */ WMPEditCtrl;
struct __declspec(uuid("70e1217c-c617-4cfd-bd8a-69ca2043e70b"))
/* dual interface */ IWMPEditCtrl;
struct /* coclass */ WMPSkinList;
struct __declspec(uuid("8cea03a2-d0c5-4e97-9c38-a676a639a51d"))
/* dual interface */ IWMPSkinList;
struct __declspec(uuid("5d0ad945-289e-45c5-a9c6-f301f0152108"))
/* dual interface */ IWMPPluginUIHost;
struct /* coclass */ WMPMenuCtrl;
struct __declspec(uuid("158a7adc-33da-4039-a553-bddbbe389f5c"))
/* dual interface */ IWMPMenuCtrl;
struct /* coclass */ WMPAutoMenuCtrl;
struct __declspec(uuid("1ad13e0b-4f3a-41df-9be2-f9e6fe0a7875"))
/* dual interface */ IWMPAutoMenuCtrl;
struct /* coclass */ WMPRegionalButtonCtrl;
struct __declspec(uuid("58d507b1-2354-11d3-bd41-00c04f6ea5ae"))
/* dual interface */ IWMPRegionalButtonCtrl;
struct __declspec(uuid("50fc8d31-67ac-11d3-bd4c-00c04f6ea5ae"))
/* dispinterface */ IWMPRegionalButtonEvents;
struct /* coclass */ WMPRegionalButton;
struct __declspec(uuid("58d507b2-2354-11d3-bd41-00c04f6ea5ae"))
/* dual interface */ IWMPRegionalButton;
struct __declspec(uuid("95f45aa4-ed0a-11d2-ba67-0000f80855e6"))
/* dispinterface */ IWMPCustomSliderCtrlEvents;
struct /* coclass */ WMPCustomSliderCtrl;
struct __declspec(uuid("95f45aa2-ed0a-11d2-ba67-0000f80855e6"))
/* dual interface */ IWMPCustomSlider;
struct /* coclass */ WMPTextCtrl;
struct __declspec(uuid("237dac8e-0e32-11d3-a2e2-00c04f79f88e"))
/* dual interface */ IWMPTextCtrl;
struct /* coclass */ WMPPlaylistCtrl;
struct __declspec(uuid("891eadb1-1c45-48b0-b704-49a888da98c4"))
/* dual interface */ ITaskCntrCtrl;
struct __declspec(uuid("d84cca96-cce2-11d2-9ecc-0000f8085981"))
/* dispinterface */ _WMPCoreEvents;
struct /* coclass */ WMPCore;
struct __declspec(uuid("6b550945-018f-11d3-b14a-00c04f79faa6"))
/* dual interface */ IWMPGraphEventHandler;
struct __declspec(uuid("f8578bfa-cd8f-4ce1-a684-5b7e85fca7dc"))
/* dual interface */ IBattery;
struct __declspec(uuid("40c6bde7-9c90-49d4-ad20-bef81a6c5f22"))
/* dual interface */ IBatteryPreset;
struct __declspec(uuid("f85e2d65-207d-48db-84b1-915e1735db17"))
/* dual interface */ IBatteryRandomPreset;
struct __declspec(uuid("876e7208-0172-4ebb-b08b-2e1d30dfe44c"))
/* dual interface */ IBatterySavedPreset;
struct __declspec(uuid("33e9291a-f6a9-11d2-9435-00a0c92a2f2d"))
/* dual interface */ IBarsEffect;
struct __declspec(uuid("e2cc638c-fd2c-409b-a1ea-5ddb72dc8e84"))
/* dual interface */ IWMPExternal;
struct __declspec(uuid("d10ccdff-472d-498c-b5fe-3630e5405e0a"))
/* dual interface */ IWMPExternalColors;
struct __declspec(uuid("54df358e-cf38-4010-99f1-f44b0e9000e5"))
/* dual interface */ IWMPSubscriptionServiceLimited;
struct __declspec(uuid("2e922378-ee70-4ceb-bbab-ce7ce4a04816"))
/* dual interface */ IWMPSubscriptionServiceExternal;
struct __declspec(uuid("e15e9ad1-8f20-4cc4-9ec7-1a328ca86a0d"))
/* dual interface */ IWMPDownloadManager;
struct __declspec(uuid("0a319c7f-85f9-436c-b88e-82fd88000e1c"))
/* dual interface */ IWMPDownloadCollection;
struct __declspec(uuid("9fbb3336-6da3-479d-b8ff-67d46e20a987"))
/* dual interface */ IWMPDownloadItem2;
struct __declspec(uuid("c9470e8e-3f6b-46a9-a0a9-452815c34297"))
/* dual interface */ IWMPDownloadItem;
enum WMPSubscriptionDownloadState;
struct __declspec(uuid("5f0248c1-62b3-42d7-b927-029119e6ad14"))
/* dual interface */ IWMPSubscriptionServicePlayMedia;
struct __declspec(uuid("a915cea2-72df-41e1-a576-ef0bae5e5169"))
/* dual interface */ IWMPDiscoExternal;
struct __declspec(uuid("2d7ef888-1d3c-484a-a906-9f49d99bb344"))
/* dual interface */ IWMPCDDVDWizardExternal;
enum WMP_WRITENAMESEX_TYPE;
struct __declspec(uuid("f81b2a59-02bc-4003-8b2f-c124af66fc66"))
/* dual interface */ IWMPBaseExternal;
struct __declspec(uuid("3148e685-b243-423d-8341-8480d6eff674"))
/* dual interface */ IWMPOfflineExternal;
struct __declspec(uuid("4e195db1-9e29-47fc-9ce1-de9937d32925"))
/* dual interface */ IWMPDMRAVTransportService;
struct __declspec(uuid("fb61cd38-8de7-4479-8b76-a8d097c20c70"))
/* dual interface */ IWMPDMRConnectionManagerService;
struct __declspec(uuid("ff4b1bda-19f0-42cf-8dda-19162950c543"))
/* dual interface */ IWMPDMRRenderingControlService;
#if !defined(_WIN64)
typedef __w64 unsigned long ULONG_PTR;
#else
typedef unsigned __int64 ULONG_PTR;
#endif

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IWMPEvents, __uuidof(IWMPEvents));
_COM_SMARTPTR_TYPEDEF(IWMPSyncDevice, __uuidof(IWMPSyncDevice));
_COM_SMARTPTR_TYPEDEF(IWMPEvents2, __uuidof(IWMPEvents2));
_COM_SMARTPTR_TYPEDEF(IWMPCdromRip, __uuidof(IWMPCdromRip));
_COM_SMARTPTR_TYPEDEF(IWMPStringCollection, __uuidof(IWMPStringCollection));
_COM_SMARTPTR_TYPEDEF(_WMPOCXEvents, __uuidof(_WMPOCXEvents));
_COM_SMARTPTR_TYPEDEF(IWMPSettings, __uuidof(IWMPSettings));
_COM_SMARTPTR_TYPEDEF(IWMPNetwork, __uuidof(IWMPNetwork));
_COM_SMARTPTR_TYPEDEF(IWMPClosedCaption, __uuidof(IWMPClosedCaption));
_COM_SMARTPTR_TYPEDEF(IWMPErrorItem, __uuidof(IWMPErrorItem));
_COM_SMARTPTR_TYPEDEF(IWMPError, __uuidof(IWMPError));
_COM_SMARTPTR_TYPEDEF(IWMPDVD, __uuidof(IWMPDVD));
_COM_SMARTPTR_TYPEDEF(IWMPPlayerApplication, __uuidof(IWMPPlayerApplication));
_COM_SMARTPTR_TYPEDEF(IWMPErrorItem2, __uuidof(IWMPErrorItem2));
_COM_SMARTPTR_TYPEDEF(IWMPMetadataPicture, __uuidof(IWMPMetadataPicture));
_COM_SMARTPTR_TYPEDEF(IWMPMetadataText, __uuidof(IWMPMetadataText));
_COM_SMARTPTR_TYPEDEF(IWMPSettings2, __uuidof(IWMPSettings2));
_COM_SMARTPTR_TYPEDEF(IWMPClosedCaption2, __uuidof(IWMPClosedCaption2));
_COM_SMARTPTR_TYPEDEF(IWMPQuery, __uuidof(IWMPQuery));
_COM_SMARTPTR_TYPEDEF(IWMPStringCollection2, __uuidof(IWMPStringCollection2));
_COM_SMARTPTR_TYPEDEF(IWMPPlayerServices, __uuidof(IWMPPlayerServices));
_COM_SMARTPTR_TYPEDEF(IWMPPlayerServices2, __uuidof(IWMPPlayerServices2));
_COM_SMARTPTR_TYPEDEF(IWMPRemoteMediaServices, __uuidof(IWMPRemoteMediaServices));
_COM_SMARTPTR_TYPEDEF(IWMPSyncServices, __uuidof(IWMPSyncServices));
_COM_SMARTPTR_TYPEDEF(IWMPLibrarySharingServices, __uuidof(IWMPLibrarySharingServices));
_COM_SMARTPTR_TYPEDEF(IWMPFolderMonitorServices, __uuidof(IWMPFolderMonitorServices));
_COM_SMARTPTR_TYPEDEF(IWMPSyncDevice2, __uuidof(IWMPSyncDevice2));
_COM_SMARTPTR_TYPEDEF(IAppDispatch, __uuidof(IAppDispatch));
_COM_SMARTPTR_TYPEDEF(IWMPSafeBrowser, __uuidof(IWMPSafeBrowser));
_COM_SMARTPTR_TYPEDEF(IWMPObjectExtendedProps, __uuidof(IWMPObjectExtendedProps));
_COM_SMARTPTR_TYPEDEF(IWMPLayoutSubView, __uuidof(IWMPLayoutSubView));
_COM_SMARTPTR_TYPEDEF(IWMPLayoutView, __uuidof(IWMPLayoutView));
_COM_SMARTPTR_TYPEDEF(IWMPEventObject, __uuidof(IWMPEventObject));
_COM_SMARTPTR_TYPEDEF(IWMPTheme, __uuidof(IWMPTheme));
_COM_SMARTPTR_TYPEDEF(IWMPLayoutSettingsDispatch, __uuidof(IWMPLayoutSettingsDispatch));
_COM_SMARTPTR_TYPEDEF(IWMPWindow, __uuidof(IWMPWindow));
_COM_SMARTPTR_TYPEDEF(IWMPBrandDispatch, __uuidof(IWMPBrandDispatch));
_COM_SMARTPTR_TYPEDEF(IWMPNowPlayingHelperDispatch, __uuidof(IWMPNowPlayingHelperDispatch));
_COM_SMARTPTR_TYPEDEF(IWMPNowDoingDispatch, __uuidof(IWMPNowDoingDispatch));
_COM_SMARTPTR_TYPEDEF(IWMPHoverPreviewDispatch, __uuidof(IWMPHoverPreviewDispatch));
_COM_SMARTPTR_TYPEDEF(IWMPButtonCtrlEvents, __uuidof(IWMPButtonCtrlEvents));
_COM_SMARTPTR_TYPEDEF(IWMPButtonCtrl, __uuidof(IWMPButtonCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPListBoxCtrl, __uuidof(IWMPListBoxCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPListBoxItem, __uuidof(IWMPListBoxItem));
_COM_SMARTPTR_TYPEDEF(IWMPPlaylistCtrlColumn, __uuidof(IWMPPlaylistCtrlColumn));
_COM_SMARTPTR_TYPEDEF(IWMPSliderCtrlEvents, __uuidof(IWMPSliderCtrlEvents));
_COM_SMARTPTR_TYPEDEF(IWMPSliderCtrl, __uuidof(IWMPSliderCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPVideoCtrlEvents, __uuidof(IWMPVideoCtrlEvents));
_COM_SMARTPTR_TYPEDEF(IWMPVideoCtrl, __uuidof(IWMPVideoCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPEffectsCtrl, __uuidof(IWMPEffectsCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPEqualizerSettingsCtrl, __uuidof(IWMPEqualizerSettingsCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPVideoSettingsCtrl, __uuidof(IWMPVideoSettingsCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPDolbyDigitalSettingsCtrl, __uuidof(IWMPDolbyDigitalSettingsCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPEditCtrl, __uuidof(IWMPEditCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPSkinList, __uuidof(IWMPSkinList));
_COM_SMARTPTR_TYPEDEF(IWMPPluginUIHost, __uuidof(IWMPPluginUIHost));
_COM_SMARTPTR_TYPEDEF(IWMPMenuCtrl, __uuidof(IWMPMenuCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPAutoMenuCtrl, __uuidof(IWMPAutoMenuCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPRegionalButtonCtrl, __uuidof(IWMPRegionalButtonCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPRegionalButtonEvents, __uuidof(IWMPRegionalButtonEvents));
_COM_SMARTPTR_TYPEDEF(IWMPRegionalButton, __uuidof(IWMPRegionalButton));
_COM_SMARTPTR_TYPEDEF(IWMPCustomSliderCtrlEvents, __uuidof(IWMPCustomSliderCtrlEvents));
_COM_SMARTPTR_TYPEDEF(IWMPCustomSlider, __uuidof(IWMPCustomSlider));
_COM_SMARTPTR_TYPEDEF(IWMPTextCtrl, __uuidof(IWMPTextCtrl));
_COM_SMARTPTR_TYPEDEF(ITaskCntrCtrl, __uuidof(ITaskCntrCtrl));
_COM_SMARTPTR_TYPEDEF(_WMPCoreEvents, __uuidof(_WMPCoreEvents));
_COM_SMARTPTR_TYPEDEF(IWMPGraphEventHandler, __uuidof(IWMPGraphEventHandler));
_COM_SMARTPTR_TYPEDEF(IBattery, __uuidof(IBattery));
_COM_SMARTPTR_TYPEDEF(IBatteryPreset, __uuidof(IBatteryPreset));
_COM_SMARTPTR_TYPEDEF(IBatteryRandomPreset, __uuidof(IBatteryRandomPreset));
_COM_SMARTPTR_TYPEDEF(IBatterySavedPreset, __uuidof(IBatterySavedPreset));
_COM_SMARTPTR_TYPEDEF(IBarsEffect, __uuidof(IBarsEffect));
_COM_SMARTPTR_TYPEDEF(IWMPExternal, __uuidof(IWMPExternal));
_COM_SMARTPTR_TYPEDEF(IWMPExternalColors, __uuidof(IWMPExternalColors));
_COM_SMARTPTR_TYPEDEF(IWMPSubscriptionServiceLimited, __uuidof(IWMPSubscriptionServiceLimited));
_COM_SMARTPTR_TYPEDEF(IWMPDownloadItem, __uuidof(IWMPDownloadItem));
_COM_SMARTPTR_TYPEDEF(IWMPDownloadItem2, __uuidof(IWMPDownloadItem2));
_COM_SMARTPTR_TYPEDEF(IWMPDownloadCollection, __uuidof(IWMPDownloadCollection));
_COM_SMARTPTR_TYPEDEF(IWMPDownloadManager, __uuidof(IWMPDownloadManager));
_COM_SMARTPTR_TYPEDEF(IWMPSubscriptionServiceExternal, __uuidof(IWMPSubscriptionServiceExternal));
_COM_SMARTPTR_TYPEDEF(IWMPSubscriptionServicePlayMedia, __uuidof(IWMPSubscriptionServicePlayMedia));
_COM_SMARTPTR_TYPEDEF(IWMPDiscoExternal, __uuidof(IWMPDiscoExternal));
_COM_SMARTPTR_TYPEDEF(IWMPCDDVDWizardExternal, __uuidof(IWMPCDDVDWizardExternal));
_COM_SMARTPTR_TYPEDEF(IWMPBaseExternal, __uuidof(IWMPBaseExternal));
_COM_SMARTPTR_TYPEDEF(IWMPOfflineExternal, __uuidof(IWMPOfflineExternal));
_COM_SMARTPTR_TYPEDEF(IWMPDMRAVTransportService, __uuidof(IWMPDMRAVTransportService));
_COM_SMARTPTR_TYPEDEF(IWMPDMRConnectionManagerService, __uuidof(IWMPDMRConnectionManagerService));
_COM_SMARTPTR_TYPEDEF(IWMPDMRRenderingControlService, __uuidof(IWMPDMRRenderingControlService));
_COM_SMARTPTR_TYPEDEF(IWMPEvents3, __uuidof(IWMPEvents3));
_COM_SMARTPTR_TYPEDEF(IWMPEvents4, __uuidof(IWMPEvents4));
_COM_SMARTPTR_TYPEDEF(IWMPCdromBurn, __uuidof(IWMPCdromBurn));
_COM_SMARTPTR_TYPEDEF(IWMPPlaylist, __uuidof(IWMPPlaylist));
_COM_SMARTPTR_TYPEDEF(IWMPMedia, __uuidof(IWMPMedia));
_COM_SMARTPTR_TYPEDEF(IWMPMediaCollection, __uuidof(IWMPMediaCollection));
_COM_SMARTPTR_TYPEDEF(IWMPLibrary, __uuidof(IWMPLibrary));
_COM_SMARTPTR_TYPEDEF(IWMPControls, __uuidof(IWMPControls));
_COM_SMARTPTR_TYPEDEF(IWMPPlaylistArray, __uuidof(IWMPPlaylistArray));
_COM_SMARTPTR_TYPEDEF(IWMPPlaylistCollection, __uuidof(IWMPPlaylistCollection));
_COM_SMARTPTR_TYPEDEF(IWMPCdrom, __uuidof(IWMPCdrom));
_COM_SMARTPTR_TYPEDEF(IWMPCdromCollection, __uuidof(IWMPCdromCollection));
_COM_SMARTPTR_TYPEDEF(IWMPCore, __uuidof(IWMPCore));
_COM_SMARTPTR_TYPEDEF(IWMPCore2, __uuidof(IWMPCore2));
_COM_SMARTPTR_TYPEDEF(IWMPCore3, __uuidof(IWMPCore3));
_COM_SMARTPTR_TYPEDEF(IWMPPlayer4, __uuidof(IWMPPlayer4));
_COM_SMARTPTR_TYPEDEF(IWMPPlayer3, __uuidof(IWMPPlayer3));
_COM_SMARTPTR_TYPEDEF(IWMPPlayer2, __uuidof(IWMPPlayer2));
_COM_SMARTPTR_TYPEDEF(IWMPPlayer, __uuidof(IWMPPlayer));
_COM_SMARTPTR_TYPEDEF(IWMPControls2, __uuidof(IWMPControls2));
_COM_SMARTPTR_TYPEDEF(IWMPMedia2, __uuidof(IWMPMedia2));
_COM_SMARTPTR_TYPEDEF(IWMPMedia3, __uuidof(IWMPMedia3));
_COM_SMARTPTR_TYPEDEF(IWMPControls3, __uuidof(IWMPControls3));
_COM_SMARTPTR_TYPEDEF(IWMPMediaCollection2, __uuidof(IWMPMediaCollection2));
_COM_SMARTPTR_TYPEDEF(IWMPLibraryServices, __uuidof(IWMPLibraryServices));
_COM_SMARTPTR_TYPEDEF(IWMPLibrary2, __uuidof(IWMPLibrary2));
_COM_SMARTPTR_TYPEDEF(IWMPSyncDevice3, __uuidof(IWMPSyncDevice3));
_COM_SMARTPTR_TYPEDEF(IWMPPlaylistCtrl, __uuidof(IWMPPlaylistCtrl));
_COM_SMARTPTR_TYPEDEF(IWMPLibraryTreeCtrl, __uuidof(IWMPLibraryTreeCtrl));

//
// Type library items
//

enum WMPPlaylistChangeEventType
{
    wmplcUnknown = 0,
    wmplcClear = 1,
    wmplcInfoChange = 2,
    wmplcMove = 3,
    wmplcDelete = 4,
    wmplcInsert = 5,
    wmplcAppend = 6,
    wmplcPrivate = 7,
    wmplcNameChange = 8,
    wmplcMorph = 9,
    wmplcSort = 10,
    wmplcLast = 11
};

struct __declspec(uuid("19a6627b-da9e-47c1-bb23-00b5e668236a"))
IWMPEvents : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual void __stdcall OpenStateChange (
        /*[in]*/ long NewState ) = 0;
      virtual void __stdcall PlayStateChange (
        /*[in]*/ long NewState ) = 0;
      virtual void __stdcall AudioLanguageChange (
        /*[in]*/ long LangID ) = 0;
      virtual void __stdcall StatusChange ( ) = 0;
      virtual void __stdcall ScriptCommand (
        /*[in]*/ BSTR scType,
        /*[in]*/ BSTR Param ) = 0;
      virtual void __stdcall NewStream ( ) = 0;
      virtual void __stdcall Disconnect (
        /*[in]*/ long Result ) = 0;
      virtual void __stdcall Buffering (
        /*[in]*/ VARIANT_BOOL Start ) = 0;
      virtual void __stdcall Error ( ) = 0;
      virtual void __stdcall Warning (
        /*[in]*/ long WarningType,
        /*[in]*/ long Param,
        /*[in]*/ BSTR Description ) = 0;
      virtual void __stdcall EndOfStream (
        /*[in]*/ long Result ) = 0;
      virtual void __stdcall PositionChange (
        /*[in]*/ double oldPosition,
        /*[in]*/ double newPosition ) = 0;
      virtual void __stdcall MarkerHit (
        /*[in]*/ long MarkerNum ) = 0;
      virtual void __stdcall DurationUnitChange (
        /*[in]*/ long NewDurationUnit ) = 0;
      virtual void __stdcall CdromMediaChange (
        /*[in]*/ long CdromNum ) = 0;
      virtual void __stdcall PlaylistChange (
        /*[in]*/ IDispatch * Playlist,
        /*[in]*/ enum WMPPlaylistChangeEventType change ) = 0;
      virtual void __stdcall CurrentPlaylistChange (
        /*[in]*/ enum WMPPlaylistChangeEventType change ) = 0;
      virtual void __stdcall CurrentPlaylistItemAvailable (
        /*[in]*/ BSTR bstrItemName ) = 0;
      virtual void __stdcall MediaChange (
        /*[in]*/ IDispatch * Item ) = 0;
      virtual void __stdcall CurrentMediaItemAvailable (
        /*[in]*/ BSTR bstrItemName ) = 0;
      virtual void __stdcall CurrentItemChange (
        /*[in]*/ IDispatch * pdispMedia ) = 0;
      virtual void __stdcall MediaCollectionChange ( ) = 0;
      virtual void __stdcall MediaCollectionAttributeStringAdded (
        /*[in]*/ BSTR bstrAttribName,
        /*[in]*/ BSTR bstrAttribVal ) = 0;
      virtual void __stdcall MediaCollectionAttributeStringRemoved (
        /*[in]*/ BSTR bstrAttribName,
        /*[in]*/ BSTR bstrAttribVal ) = 0;
      virtual void __stdcall MediaCollectionAttributeStringChanged (
        /*[in]*/ BSTR bstrAttribName,
        /*[in]*/ BSTR bstrOldAttribVal,
        /*[in]*/ BSTR bstrNewAttribVal ) = 0;
      virtual void __stdcall PlaylistCollectionChange ( ) = 0;
      virtual void __stdcall PlaylistCollectionPlaylistAdded (
        /*[in]*/ BSTR bstrPlaylistName ) = 0;
      virtual void __stdcall PlaylistCollectionPlaylistRemoved (
        /*[in]*/ BSTR bstrPlaylistName ) = 0;
      virtual void __stdcall PlaylistCollectionPlaylistSetAsDeleted (
        /*[in]*/ BSTR bstrPlaylistName,
        /*[in]*/ VARIANT_BOOL varfIsDeleted ) = 0;
      virtual void __stdcall ModeChange (
        /*[in]*/ BSTR ModeName,
        /*[in]*/ VARIANT_BOOL NewValue ) = 0;
      virtual void __stdcall MediaError (
        /*[in]*/ IDispatch * pMediaObject ) = 0;
      virtual void __stdcall OpenPlaylistSwitch (
        /*[in]*/ IDispatch * pItem ) = 0;
      virtual void __stdcall DomainChange (
        /*[in]*/ BSTR strDomain ) = 0;
      virtual void __stdcall SwitchedToPlayerApplication ( ) = 0;
      virtual void __stdcall SwitchedToControl ( ) = 0;
      virtual void __stdcall PlayerDockedStateChange ( ) = 0;
      virtual void __stdcall PlayerReconnect ( ) = 0;
      virtual void __stdcall Click (
        /*[in]*/ short nButton,
        /*[in]*/ short nShiftState,
        /*[in]*/ long fX,
        /*[in]*/ long fY ) = 0;
      virtual void __stdcall DoubleClick (
        /*[in]*/ short nButton,
        /*[in]*/ short nShiftState,
        /*[in]*/ long fX,
        /*[in]*/ long fY ) = 0;
      virtual void __stdcall KeyDown (
        /*[in]*/ short nKeyCode,
        /*[in]*/ short nShiftState ) = 0;
      virtual void __stdcall KeyPress (
        /*[in]*/ short nKeyAscii ) = 0;
      virtual void __stdcall KeyUp (
        /*[in]*/ short nKeyCode,
        /*[in]*/ short nShiftState ) = 0;
      virtual void __stdcall MouseDown (
        /*[in]*/ short nButton,
        /*[in]*/ short nShiftState,
        /*[in]*/ long fX,
        /*[in]*/ long fY ) = 0;
      virtual void __stdcall MouseMove (
        /*[in]*/ short nButton,
        /*[in]*/ short nShiftState,
        /*[in]*/ long fX,
        /*[in]*/ long fY ) = 0;
      virtual void __stdcall MouseUp (
        /*[in]*/ short nButton,
        /*[in]*/ short nShiftState,
        /*[in]*/ long fX,
        /*[in]*/ long fY ) = 0;
};

enum WMPDeviceStatus
{
    wmpdsUnknown = 0,
    wmpdsPartnershipExists = 1,
    wmpdsPartnershipDeclined = 2,
    wmpdsPartnershipAnother = 3,
    wmpdsManualDevice = 4,
    wmpdsNewDevice = 5,
    wmpdsLast = 6
};

enum WMPSyncState
{
    wmpssUnknown = 0,
    wmpssSynchronizing = 1,
    wmpssStopped = 2,
    wmpssEstimating = 3,
    wmpssLast = 4
};

struct __declspec(uuid("82a2986c-0293-4fd0-b279-b21b86c058be"))
IWMPSyncDevice : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_friendlyName (
        /*[out,retval]*/ BSTR * pbstrName ) = 0;
      virtual HRESULT __stdcall put_friendlyName (
        /*[in]*/ BSTR pbstrName ) = 0;
      virtual HRESULT __stdcall get_deviceName (
        /*[out,retval]*/ BSTR * pbstrName ) = 0;
      virtual HRESULT __stdcall get_deviceId (
        /*[out,retval]*/ BSTR * pbstrDeviceId ) = 0;
      virtual HRESULT __stdcall get_partnershipIndex (
        /*[out,retval]*/ long * plIndex ) = 0;
      virtual HRESULT __stdcall get_connected (
        /*[out,retval]*/ VARIANT_BOOL * pvbConnected ) = 0;
      virtual HRESULT __stdcall get_status (
        /*[out,retval]*/ enum WMPDeviceStatus * pwmpds ) = 0;
      virtual HRESULT __stdcall get_syncState (
        /*[out,retval]*/ enum WMPSyncState * pwmpss ) = 0;
      virtual HRESULT __stdcall get_progress (
        /*[out,retval]*/ long * plProgress ) = 0;
      virtual HRESULT __stdcall getItemInfo (
        /*[in]*/ BSTR bstrItemName,
        /*[out,retval]*/ BSTR * pbstrVal ) = 0;
      virtual HRESULT __stdcall createPartnership (
        /*[in]*/ VARIANT_BOOL vbShowUI ) = 0;
      virtual HRESULT __stdcall deletePartnership ( ) = 0;
      virtual HRESULT __stdcall Start ( ) = 0;
      virtual HRESULT __stdcall stop ( ) = 0;
      virtual HRESULT __stdcall showSettings ( ) = 0;
      virtual HRESULT __stdcall isIdentical (
        /*[in]*/ struct IWMPSyncDevice * pDevice,
        /*[out,retval]*/ VARIANT_BOOL * pvbool ) = 0;
};

struct __declspec(uuid("1e7601fa-47ea-4107-9ea9-9004ed9684ff"))
IWMPEvents2 : IWMPEvents
{
    //
    // Raw methods provided by interface
    //

      virtual void __stdcall DeviceConnect (
        /*[in]*/ struct IWMPSyncDevice * pDevice ) = 0;
      virtual void __stdcall DeviceDisconnect (
        /*[in]*/ struct IWMPSyncDevice * pDevice ) = 0;
      virtual void __stdcall DeviceStatusChange (
        /*[in]*/ struct IWMPSyncDevice * pDevice,
        /*[in]*/ enum WMPDeviceStatus NewStatus ) = 0;
      virtual void __stdcall DeviceSyncStateChange (
        /*[in]*/ struct IWMPSyncDevice * pDevice,
        /*[in]*/ enum WMPSyncState NewState ) = 0;
      virtual void __stdcall DeviceSyncError (
        /*[in]*/ struct IWMPSyncDevice * pDevice,
        /*[in]*/ IDispatch * pMedia ) = 0;
      virtual void __stdcall CreatePartnershipComplete (
        /*[in]*/ struct IWMPSyncDevice * pDevice,
        /*[in]*/ HRESULT hrResult ) = 0;
};

enum WMPRipState
{
    wmprsUnknown = 0,
    wmprsRipping = 1,
    wmprsStopped = 2
};

struct __declspec(uuid("56e2294f-69ed-4629-a869-aea72c0dcc2c"))
IWMPCdromRip : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ripState (
        /*[out,retval]*/ enum WMPRipState * pwmprs ) = 0;
      virtual HRESULT __stdcall get_ripProgress (
        /*[out,retval]*/ long * plProgress ) = 0;
      virtual HRESULT __stdcall startRip ( ) = 0;
      virtual HRESULT __stdcall stopRip ( ) = 0;
};

enum WMPBurnFormat
{
    wmpbfAudioCD = 0,
    wmpbfDataCD = 1
};

enum WMPBurnState
{
    wmpbsUnknown = 0,
    wmpbsBusy = 1,
    wmpbsReady = 2,
    wmpbsWaitingForDisc = 3,
    wmpbsRefreshStatusPending = 4,
    wmpbsPreparingToBurn = 5,
    wmpbsBurning = 6,
    wmpbsStopped = 7,
    wmpbsErasing = 8,
    wmpbsDownloading = 9
};

enum WMPLibraryType
{
    wmpltUnknown = 0,
    wmpltAll = 1,
    wmpltLocal = 2,
    wmpltRemote = 3,
    wmpltDisc = 4,
    wmpltPortableDevice = 5
};

struct __declspec(uuid("4a976298-8c0d-11d3-b389-00c04f68574b"))
IWMPStringCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_count (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ BSTR * pbstrString ) = 0;
};

enum WMPFolderScanState
{
    wmpfssUnknown = 0,
    wmpfssScanning = 1,
    wmpfssUpdating = 2,
    wmpfssStopped = 3
};

enum WMPStringCollectionChangeEventType
{
    wmpsccetUnknown = 0,
    wmpsccetInsert = 1,
    wmpsccetChange = 2,
    wmpsccetDelete = 3,
    wmpsccetClear = 4,
    wmpsccetBeginUpdates = 5,
    wmpsccetEndUpdates = 6
};

struct __declspec(uuid("6bf52a51-394a-11d3-b153-00c04f79faa6"))
_WMPOCXEvents : IDispatch
{};

struct __declspec(uuid("6bf52a52-394a-11d3-b153-00c04f79faa6"))
WindowsMediaPlayer;
    // [ default ] interface IWMPPlayer4
    // interface IWMPPlayer3
    // interface IWMPPlayer2
    // interface IWMPPlayer
    // interface IWMPControls
    // interface IWMPSettings
    // interface IWMPPlaylist
    // interface IWMPMedia
    // interface IWMPMediaCollection
    // interface IWMPPlaylistCollection
    // interface IWMPCdromCollection
    // interface IWMPError
    // interface IWMPErrorItem
    // interface IWMPErrorItem2
    // interface IWMPClosedCaption
    // interface IWMPDVD
    // interface IWMPControls2
    // interface IWMPMedia2
    // interface IWMPMedia3
    // interface IWMPMetadataPicture
    // interface IWMPMetadataText
    // interface IWMPSettings2
    // interface IWMPControls3
    // interface IWMPClosedCaption2
    // interface IWMPMediaCollection2
    // interface IWMPStringCollection2
    // [ default, source ] dispinterface _WMPOCXEvents

enum WMPOpenState
{
    wmposUndefined = 0,
    wmposPlaylistChanging = 1,
    wmposPlaylistLocating = 2,
    wmposPlaylistConnecting = 3,
    wmposPlaylistLoading = 4,
    wmposPlaylistOpening = 5,
    wmposPlaylistOpenNoMedia = 6,
    wmposPlaylistChanged = 7,
    wmposMediaChanging = 8,
    wmposMediaLocating = 9,
    wmposMediaConnecting = 10,
    wmposMediaLoading = 11,
    wmposMediaOpening = 12,
    wmposMediaOpen = 13,
    wmposBeginCodecAcquisition = 14,
    wmposEndCodecAcquisition = 15,
    wmposBeginLicenseAcquisition = 16,
    wmposEndLicenseAcquisition = 17,
    wmposBeginIndividualization = 18,
    wmposEndIndividualization = 19,
    wmposMediaWaiting = 20,
    wmposOpeningUnknownURL = 21
};

enum WMPPlayState
{
    wmppsUndefined = 0,
    wmppsStopped = 1,
    wmppsPaused = 2,
    wmppsPlaying = 3,
    wmppsScanForward = 4,
    wmppsScanReverse = 5,
    wmppsBuffering = 6,
    wmppsWaiting = 7,
    wmppsMediaEnded = 8,
    wmppsTransitioning = 9,
    wmppsReady = 10,
    wmppsReconnecting = 11,
    wmppsLast = 12
};

struct __declspec(uuid("9104d1ab-80c9-4fed-abf0-2e6417a6df14"))
IWMPSettings : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_isAvailable (
        /*[in]*/ BSTR bstrItem,
        /*[out,retval]*/ VARIANT_BOOL * pIsAvailable ) = 0;
      virtual HRESULT __stdcall get_autoStart (
        /*[out,retval]*/ VARIANT_BOOL * pfAutoStart ) = 0;
      virtual HRESULT __stdcall put_autoStart (
        /*[in]*/ VARIANT_BOOL pfAutoStart ) = 0;
      virtual HRESULT __stdcall get_baseURL (
        /*[out,retval]*/ BSTR * pbstrBaseURL ) = 0;
      virtual HRESULT __stdcall put_baseURL (
        /*[in]*/ BSTR pbstrBaseURL ) = 0;
      virtual HRESULT __stdcall get_defaultFrame (
        /*[out,retval]*/ BSTR * pbstrDefaultFrame ) = 0;
      virtual HRESULT __stdcall put_defaultFrame (
        /*[in]*/ BSTR pbstrDefaultFrame ) = 0;
      virtual HRESULT __stdcall get_invokeURLs (
        /*[out,retval]*/ VARIANT_BOOL * pfInvokeURLs ) = 0;
      virtual HRESULT __stdcall put_invokeURLs (
        /*[in]*/ VARIANT_BOOL pfInvokeURLs ) = 0;
      virtual HRESULT __stdcall get_mute (
        /*[out,retval]*/ VARIANT_BOOL * pfMute ) = 0;
      virtual HRESULT __stdcall put_mute (
        /*[in]*/ VARIANT_BOOL pfMute ) = 0;
      virtual HRESULT __stdcall get_playCount (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall put_playCount (
        /*[in]*/ long plCount ) = 0;
      virtual HRESULT __stdcall get_rate (
        /*[out,retval]*/ double * pdRate ) = 0;
      virtual HRESULT __stdcall put_rate (
        /*[in]*/ double pdRate ) = 0;
      virtual HRESULT __stdcall get_balance (
        /*[out,retval]*/ long * plBalance ) = 0;
      virtual HRESULT __stdcall put_balance (
        /*[in]*/ long plBalance ) = 0;
      virtual HRESULT __stdcall get_volume (
        /*[out,retval]*/ long * plVolume ) = 0;
      virtual HRESULT __stdcall put_volume (
        /*[in]*/ long plVolume ) = 0;
      virtual HRESULT __stdcall getMode (
        /*[in]*/ BSTR bstrMode,
        /*[out,retval]*/ VARIANT_BOOL * pvarfMode ) = 0;
      virtual HRESULT __stdcall setMode (
        /*[in]*/ BSTR bstrMode,
        /*[in]*/ VARIANT_BOOL varfMode ) = 0;
      virtual HRESULT __stdcall get_enableErrorDialogs (
        /*[out,retval]*/ VARIANT_BOOL * pfEnableErrorDialogs ) = 0;
      virtual HRESULT __stdcall put_enableErrorDialogs (
        /*[in]*/ VARIANT_BOOL pfEnableErrorDialogs ) = 0;
};

struct __declspec(uuid("ec21b779-edef-462d-bba4-ad9dde2b29a7"))
IWMPNetwork : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_bandWidth (
        /*[out,retval]*/ long * plBandwidth ) = 0;
      virtual HRESULT __stdcall get_recoveredPackets (
        /*[out,retval]*/ long * plRecoveredPackets ) = 0;
      virtual HRESULT __stdcall get_sourceProtocol (
        /*[out,retval]*/ BSTR * pbstrSourceProtocol ) = 0;
      virtual HRESULT __stdcall get_receivedPackets (
        /*[out,retval]*/ long * plReceivedPackets ) = 0;
      virtual HRESULT __stdcall get_lostPackets (
        /*[out,retval]*/ long * plLostPackets ) = 0;
      virtual HRESULT __stdcall get_receptionQuality (
        /*[out,retval]*/ long * plReceptionQuality ) = 0;
      virtual HRESULT __stdcall get_bufferingCount (
        /*[out,retval]*/ long * plBufferingCount ) = 0;
      virtual HRESULT __stdcall get_bufferingProgress (
        /*[out,retval]*/ long * plBufferingProgress ) = 0;
      virtual HRESULT __stdcall get_bufferingTime (
        /*[out,retval]*/ long * plBufferingTime ) = 0;
      virtual HRESULT __stdcall put_bufferingTime (
        /*[in]*/ long plBufferingTime ) = 0;
      virtual HRESULT __stdcall get_frameRate (
        /*[out,retval]*/ long * plFrameRate ) = 0;
      virtual HRESULT __stdcall get_maxBitRate (
        /*[out,retval]*/ long * plBitRate ) = 0;
      virtual HRESULT __stdcall get_bitRate (
        /*[out,retval]*/ long * plBitRate ) = 0;
      virtual HRESULT __stdcall getProxySettings (
        /*[in]*/ BSTR bstrProtocol,
        /*[out,retval]*/ long * plProxySetting ) = 0;
      virtual HRESULT __stdcall setProxySettings (
        /*[in]*/ BSTR bstrProtocol,
        /*[in]*/ long lProxySetting ) = 0;
      virtual HRESULT __stdcall getProxyName (
        /*[in]*/ BSTR bstrProtocol,
        /*[out,retval]*/ BSTR * pbstrProxyName ) = 0;
      virtual HRESULT __stdcall setProxyName (
        /*[in]*/ BSTR bstrProtocol,
        /*[in]*/ BSTR bstrProxyName ) = 0;
      virtual HRESULT __stdcall getProxyPort (
        /*[in]*/ BSTR bstrProtocol,
        /*[out,retval]*/ long * lProxyPort ) = 0;
      virtual HRESULT __stdcall setProxyPort (
        /*[in]*/ BSTR bstrProtocol,
        /*[in]*/ long lProxyPort ) = 0;
      virtual HRESULT __stdcall getProxyExceptionList (
        /*[in]*/ BSTR bstrProtocol,
        /*[out,retval]*/ BSTR * pbstrExceptionList ) = 0;
      virtual HRESULT __stdcall setProxyExceptionList (
        /*[in]*/ BSTR bstrProtocol,
        /*[in]*/ BSTR pbstrExceptionList ) = 0;
      virtual HRESULT __stdcall getProxyBypassForLocal (
        /*[in]*/ BSTR bstrProtocol,
        /*[out,retval]*/ VARIANT_BOOL * pfBypassForLocal ) = 0;
      virtual HRESULT __stdcall setProxyBypassForLocal (
        /*[in]*/ BSTR bstrProtocol,
        /*[in]*/ VARIANT_BOOL fBypassForLocal ) = 0;
      virtual HRESULT __stdcall get_maxBandwidth (
        /*[out,retval]*/ long * lMaxBandwidth ) = 0;
      virtual HRESULT __stdcall put_maxBandwidth (
        /*[in]*/ long lMaxBandwidth ) = 0;
      virtual HRESULT __stdcall get_downloadProgress (
        /*[out,retval]*/ long * plDownloadProgress ) = 0;
      virtual HRESULT __stdcall get_encodedFrameRate (
        /*[out,retval]*/ long * plFrameRate ) = 0;
      virtual HRESULT __stdcall get_framesSkipped (
        /*[out,retval]*/ long * plFrames ) = 0;
};

struct __declspec(uuid("4f2df574-c588-11d3-9ed0-00c04fb6e937"))
IWMPClosedCaption : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SAMIStyle (
        /*[out,retval]*/ BSTR * pbstrSAMIStyle ) = 0;
      virtual HRESULT __stdcall put_SAMIStyle (
        /*[in]*/ BSTR pbstrSAMIStyle ) = 0;
      virtual HRESULT __stdcall get_SAMILang (
        /*[out,retval]*/ BSTR * pbstrSAMILang ) = 0;
      virtual HRESULT __stdcall put_SAMILang (
        /*[in]*/ BSTR pbstrSAMILang ) = 0;
      virtual HRESULT __stdcall get_SAMIFileName (
        /*[out,retval]*/ BSTR * pbstrSAMIFileName ) = 0;
      virtual HRESULT __stdcall put_SAMIFileName (
        /*[in]*/ BSTR pbstrSAMIFileName ) = 0;
      virtual HRESULT __stdcall get_captioningId (
        /*[out,retval]*/ BSTR * pbstrCaptioningID ) = 0;
      virtual HRESULT __stdcall put_captioningId (
        /*[in]*/ BSTR pbstrCaptioningID ) = 0;
};

struct __declspec(uuid("3614c646-3b3b-4de7-a81e-930e3f2127b3"))
IWMPErrorItem : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_errorCode (
        /*[out,retval]*/ long * phr ) = 0;
      virtual HRESULT __stdcall get_errorDescription (
        /*[out,retval]*/ BSTR * pbstrDescription ) = 0;
      virtual HRESULT __stdcall get_errorContext (
        /*[out,retval]*/ VARIANT * pvarContext ) = 0;
      virtual HRESULT __stdcall get_remedy (
        /*[out,retval]*/ long * plRemedy ) = 0;
      virtual HRESULT __stdcall get_customUrl (
        /*[out,retval]*/ BSTR * pbstrCustomUrl ) = 0;
};

struct __declspec(uuid("a12dcf7d-14ab-4c1b-a8cd-63909f06025b"))
IWMPError : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall clearErrorQueue ( ) = 0;
      virtual HRESULT __stdcall get_errorCount (
        /*[out,retval]*/ long * plNumErrors ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[in]*/ long dwIndex,
        /*[out,retval]*/ struct IWMPErrorItem * * ppErrorItem ) = 0;
      virtual HRESULT __stdcall webHelp ( ) = 0;
};

struct __declspec(uuid("8da61686-4668-4a5c-ae5d-803193293dbe"))
IWMPDVD : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_isAvailable (
        /*[in]*/ BSTR bstrItem,
        /*[out,retval]*/ VARIANT_BOOL * pIsAvailable ) = 0;
      virtual HRESULT __stdcall get_domain (
        /*[out,retval]*/ BSTR * strDomain ) = 0;
      virtual HRESULT __stdcall topMenu ( ) = 0;
      virtual HRESULT __stdcall titleMenu ( ) = 0;
      virtual HRESULT __stdcall back ( ) = 0;
      virtual HRESULT __stdcall resume ( ) = 0;
};

struct __declspec(uuid("40897764-ceab-47be-ad4a-8e28537f9bbf"))
IWMPPlayerApplication : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall switchToPlayerApplication ( ) = 0;
      virtual HRESULT __stdcall switchToControl ( ) = 0;
      virtual HRESULT __stdcall get_playerDocked (
        /*[out,retval]*/ VARIANT_BOOL * pbPlayerDocked ) = 0;
      virtual HRESULT __stdcall get_hasDisplay (
        /*[out,retval]*/ VARIANT_BOOL * pbHasDisplay ) = 0;
};

struct __declspec(uuid("f75ccec0-c67c-475c-931e-8719870bee7d"))
IWMPErrorItem2 : IWMPErrorItem
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_condition (
        /*[out,retval]*/ long * plCondition ) = 0;
};

struct __declspec(uuid("5c29bbe0-f87d-4c45-aa28-a70f0230ffa9"))
IWMPMetadataPicture : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_mimeType (
        /*[out,retval]*/ BSTR * pbstrMimeType ) = 0;
      virtual HRESULT __stdcall get_pictureType (
        /*[out,retval]*/ BSTR * pbstrPictureType ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pbstrDescription ) = 0;
      virtual HRESULT __stdcall get_URL (
        /*[out,retval]*/ BSTR * pbstrURL ) = 0;
};

struct __declspec(uuid("769a72db-13d2-45e2-9c48-53ca9d5b7450"))
IWMPMetadataText : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pbstrDescription ) = 0;
      virtual HRESULT __stdcall get_text (
        /*[out,retval]*/ BSTR * pbstrText ) = 0;
};

struct __declspec(uuid("fda937a4-eece-4da5-a0b6-39bf89ade2c2"))
IWMPSettings2 : IWMPSettings
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_defaultAudioLanguage (
        /*[out,retval]*/ long * plLangID ) = 0;
      virtual HRESULT __stdcall get_mediaAccessRights (
        /*[out,retval]*/ BSTR * pbstrRights ) = 0;
      virtual HRESULT __stdcall requestMediaAccessRights (
        /*[in]*/ BSTR bstrDesiredAccess,
        /*[out,retval]*/ VARIANT_BOOL * pvbAccepted ) = 0;
};

struct __declspec(uuid("350ba78b-6bc8-4113-a5f5-312056934eb6"))
IWMPClosedCaption2 : IWMPClosedCaption
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SAMILangCount (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall getSAMILangName (
        /*[in]*/ long nIndex,
        /*[out,retval]*/ BSTR * pbstrName ) = 0;
      virtual HRESULT __stdcall getSAMILangID (
        /*[in]*/ long nIndex,
        /*[out,retval]*/ long * plLangID ) = 0;
      virtual HRESULT __stdcall get_SAMIStyleCount (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall getSAMIStyleName (
        /*[in]*/ long nIndex,
        /*[out,retval]*/ BSTR * pbstrName ) = 0;
};

struct __declspec(uuid("a00918f3-a6b0-4bfb-9189-fd834c7bc5a5"))
IWMPQuery : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall addCondition (
        /*[in]*/ BSTR bstrAttribute,
        /*[in]*/ BSTR bstrOperator,
        /*[in]*/ BSTR bstrValue ) = 0;
      virtual HRESULT __stdcall beginNextGroup ( ) = 0;
};

struct __declspec(uuid("46ad648d-53f1-4a74-92e2-2a1b68d63fd4"))
IWMPStringCollection2 : IWMPStringCollection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall isIdentical (
        /*[in]*/ struct IWMPStringCollection2 * pIWMPStringCollection2,
        /*[out,retval]*/ VARIANT_BOOL * pvbool ) = 0;
      virtual HRESULT __stdcall getItemInfo (
        /*[in]*/ long lCollectionIndex,
        /*[in]*/ BSTR bstrItemName,
        /*[out,retval]*/ BSTR * pbstrValue ) = 0;
      virtual HRESULT __stdcall getAttributeCountByType (
        /*[in]*/ long lCollectionIndex,
        /*[in]*/ BSTR bstrType,
        /*[in]*/ BSTR bstrLanguage,
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall getItemInfoByType (
        /*[in]*/ long lCollectionIndex,
        /*[in]*/ BSTR bstrType,
        /*[in]*/ BSTR bstrLanguage,
        /*[in]*/ long lAttributeIndex,
        /*[out,retval]*/ VARIANT * pvarValue ) = 0;
};

struct __declspec(uuid("1d01fbdb-ade2-4c8d-9842-c190b95c3306"))
IWMPPlayerServices : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall activateUIPlugin (
        /*[in]*/ BSTR bstrPlugin ) = 0;
      virtual HRESULT __stdcall setTaskPane (
        /*[in]*/ BSTR bstrTaskPane ) = 0;
      virtual HRESULT __stdcall setTaskPaneURL (
        /*[in]*/ BSTR bstrTaskPane,
        /*[in]*/ BSTR bstrURL,
        /*[in]*/ BSTR bstrFriendlyName ) = 0;
};

struct __declspec(uuid("1bb1592f-f040-418a-9f71-17c7512b4d70"))
IWMPPlayerServices2 : IWMPPlayerServices
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall setBackgroundProcessingPriority (
        /*[in]*/ BSTR bstrPriority ) = 0;
};

struct __declspec(uuid("cbb92747-741f-44fe-ab5b-f1a48f3b2a59"))
IWMPRemoteMediaServices : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetServiceType (
        /*[out]*/ BSTR * pbstrType ) = 0;
      virtual HRESULT __stdcall GetApplicationName (
        /*[out]*/ BSTR * pbstrName ) = 0;
      virtual HRESULT __stdcall GetScriptableObject (
        /*[out]*/ BSTR * pbstrName,
        /*[out]*/ IDispatch * * ppDispatch ) = 0;
      virtual HRESULT __stdcall GetCustomUIMode (
        /*[out]*/ BSTR * pbstrFile ) = 0;
};

struct __declspec(uuid("8b5050ff-e0a4-4808-b3a8-893a9e1ed894"))
IWMPSyncServices : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_deviceCount (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall getDevice (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IWMPSyncDevice * * ppDevice ) = 0;
};

struct __declspec(uuid("82cba86b-9f04-474b-a365-d6dd1466e541"))
IWMPLibrarySharingServices : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall isLibraryShared (
        /*[out,retval]*/ VARIANT_BOOL * pvbShared ) = 0;
      virtual HRESULT __stdcall isLibrarySharingEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pvbEnabled ) = 0;
      virtual HRESULT __stdcall showLibrarySharing ( ) = 0;
};

struct __declspec(uuid("788c8743-e57f-439d-a468-5bc77f2e59c6"))
IWMPFolderMonitorServices : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_count (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ BSTR * pbstrFolder ) = 0;
      virtual HRESULT __stdcall add (
        /*[in]*/ BSTR bstrFolder ) = 0;
      virtual HRESULT __stdcall remove (
        /*[in]*/ long lIndex ) = 0;
      virtual HRESULT __stdcall get_scanState (
        /*[out,retval]*/ enum WMPFolderScanState * pwmpfss ) = 0;
      virtual HRESULT __stdcall get_currentFolder (
        /*[out,retval]*/ BSTR * pbstrFolder ) = 0;
      virtual HRESULT __stdcall get_scannedFilesCount (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall get_addedFilesCount (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall get_updateProgress (
        /*[out,retval]*/ long * plProgress ) = 0;
      virtual HRESULT __stdcall startScan ( ) = 0;
      virtual HRESULT __stdcall stopScan ( ) = 0;
};

struct __declspec(uuid("88afb4b2-140a-44d2-91e6-4543da467cd1"))
IWMPSyncDevice2 : IWMPSyncDevice
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall setItemInfo (
        /*[in]*/ BSTR bstrItemName,
        /*[in]*/ BSTR bstrVal ) = 0;
};

struct __declspec(uuid("e41c88dd-2364-4ff7-a0f5-ca9859af783f"))
IAppDispatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_titlebarVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_titlebarVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_titlebarAutoHide (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_titlebarAutoHide (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_currentTask (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_currentTask (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_libraryBasketMode (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_libraryBasketMode (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_libraryBasketWidth (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_breadcrumbItemCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_breadcrumbItemName (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_breadcrumbItemHasMenu (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall breadcrumbItemClick (
        /*[in]*/ long lIndex ) = 0;
      virtual HRESULT __stdcall get_settingsVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_settingsVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_playlistVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_playlistVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall gotoSkinMode ( ) = 0;
      virtual HRESULT __stdcall gotoPlayerMode ( ) = 0;
      virtual HRESULT __stdcall gotoLibraryMode (
        /*[in]*/ long lButton ) = 0;
      virtual HRESULT __stdcall navigatePrevious ( ) = 0;
      virtual HRESULT __stdcall navigateNext ( ) = 0;
      virtual HRESULT __stdcall goFullScreen ( ) = 0;
      virtual HRESULT __stdcall get_fullScreenEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_serviceLoginVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_serviceLoginSignedIn (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall serviceLogin ( ) = 0;
      virtual HRESULT __stdcall serviceLogout ( ) = 0;
      virtual HRESULT __stdcall get_serviceGetInfo (
        /*[in]*/ BSTR bstrItem,
        /*[out,retval]*/ VARIANT * pValue ) = 0;
      virtual HRESULT __stdcall get_navigatePreviousEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_navigateNextEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall navigateToAddress (
        /*[in]*/ BSTR address ) = 0;
      virtual HRESULT __stdcall get_glassEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_inVistaPlus (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall adjustLeft (
        /*[in]*/ long nDistance ) = 0;
      virtual HRESULT __stdcall get_taskbarVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_taskbarVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DPI (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_previousEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_playLibraryItemEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall previous ( ) = 0;
      virtual HRESULT __stdcall get_titlebarCurrentlyVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_menubarCurrentlyVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_bgPluginRunning (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall configurePlugins (
        /*[in]*/ long nType ) = 0;
      virtual HRESULT __stdcall getTimeString (
        /*[in]*/ double dTime,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_maximized (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_top (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_top (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_left (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_left (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_width (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_width (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_height (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_height (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall setWindowPos (
        /*[in]*/ long lTop,
        /*[in]*/ long lLeft,
        /*[in]*/ long lWidth,
        /*[in]*/ long lHeight ) = 0;
      virtual HRESULT __stdcall logData (
        /*[in]*/ BSTR ID,
        /*[in]*/ BSTR data ) = 0;
      virtual HRESULT __stdcall get_powerPersonality (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall navigateNamespace (
        /*[in]*/ BSTR address ) = 0;
      virtual HRESULT __stdcall get_exclusiveService (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_windowText (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("ef870383-83ab-4ea9-be48-56fa4251af10"))
IWMPSafeBrowser : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_URL (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_URL (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_status (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_pendingDownloads (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall showSAMIText (
        /*[in]*/ BSTR samiText ) = 0;
      virtual HRESULT __stdcall showLyrics (
        /*[in]*/ BSTR lyrics ) = 0;
      virtual HRESULT __stdcall loadSpecialPage (
        /*[in]*/ BSTR pageName ) = 0;
      virtual HRESULT __stdcall goBack ( ) = 0;
      virtual HRESULT __stdcall goForward ( ) = 0;
      virtual HRESULT __stdcall stop ( ) = 0;
      virtual HRESULT __stdcall refresh ( ) = 0;
      virtual HRESULT __stdcall get_baseURL (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_fullURL (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_secureLock (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_busy (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall showCert ( ) = 0;
};

struct __declspec(uuid("21d077c1-4baa-11d3-bd45-00c04f6ea5ae"))
IWMPObjectExtendedProps : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_elementType (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_left (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_left (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_top (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_top (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_right (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_right (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_bottom (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_bottom (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_width (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_width (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_height (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_height (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_zIndex (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_zIndex (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_clippingImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_clippingImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_clippingColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_clippingColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_visible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_visible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_enabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_enabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_tabStop (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_tabStop (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_passThrough (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_passThrough (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_horizontalAlignment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_horizontalAlignment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_verticalAlignment (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_verticalAlignment (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall moveTo (
        /*[in]*/ long newX,
        /*[in]*/ long newY,
        /*[in]*/ long moveTime ) = 0;
      virtual HRESULT __stdcall slideTo (
        /*[in]*/ long newX,
        /*[in]*/ long newY,
        /*[in]*/ long moveTime ) = 0;
      virtual HRESULT __stdcall moveSizeTo (
        /*[in]*/ long newX,
        /*[in]*/ long newY,
        /*[in]*/ long newWidth,
        /*[in]*/ long newHeight,
        /*[in]*/ long moveTime,
        /*[in]*/ VARIANT_BOOL fSlide ) = 0;
      virtual HRESULT __stdcall get_alphaBlend (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_alphaBlend (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall alphaBlendTo (
        /*[in]*/ long newVal,
        /*[in]*/ long alphaTime ) = 0;
      virtual HRESULT __stdcall get_accName (
        /*[out,retval]*/ BSTR * pszName ) = 0;
      virtual HRESULT __stdcall put_accName (
        /*[in]*/ BSTR pszName ) = 0;
      virtual HRESULT __stdcall get_accDescription (
        /*[out,retval]*/ BSTR * pszDesc ) = 0;
      virtual HRESULT __stdcall put_accDescription (
        /*[in]*/ BSTR pszDesc ) = 0;
      virtual HRESULT __stdcall get_accKeyboardShortcut (
        /*[out,retval]*/ BSTR * pszShortcut ) = 0;
      virtual HRESULT __stdcall put_accKeyboardShortcut (
        /*[in]*/ BSTR pszShortcut ) = 0;
      virtual HRESULT __stdcall get_resizeImages (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_resizeImages (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_nineGridMargins (
        /*[out,retval]*/ BSTR * pszMargins ) = 0;
      virtual HRESULT __stdcall put_nineGridMargins (
        /*[in]*/ BSTR pszMargins ) = 0;
      virtual HRESULT __stdcall get_resizeOptimize (
        /*[out,retval]*/ BSTR * ppszResizeOptimize ) = 0;
      virtual HRESULT __stdcall put_resizeOptimize (
        /*[in]*/ BSTR ppszResizeOptimize ) = 0;
      virtual HRESULT __stdcall get_rotation (
        /*[out,retval]*/ float * pfVal ) = 0;
      virtual HRESULT __stdcall put_rotation (
        /*[in]*/ float pfVal ) = 0;
};

struct __declspec(uuid("72f486b1-0d43-11d3-bd3f-00c04f6ea5ae"))
IWMPLayoutSubView : IWMPObjectExtendedProps
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_transparencyColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_transparencyColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundTiled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundTiled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundImageHueShift (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundImageHueShift (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundImageSaturation (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundImageSaturation (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_resizeBackgroundImage (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_resizeBackgroundImage (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("172e905d-80d9-4c2f-b7ce-2ccb771787a2"))
IWMPLayoutView : IWMPLayoutSubView
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_title (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_title (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_category (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_category (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_focusObjectID (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_focusObjectID (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_titleBar (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_resizable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_timerInterval (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_timerInterval (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_minWidth (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_minWidth (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_maxWidth (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_maxWidth (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_minHeight (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_minHeight (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_maxHeight (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_maxHeight (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall close ( ) = 0;
      virtual HRESULT __stdcall minimize ( ) = 0;
      virtual HRESULT __stdcall maximize ( ) = 0;
      virtual HRESULT __stdcall restore ( ) = 0;
      virtual HRESULT __stdcall size (
        /*[in]*/ BSTR bstrDirection ) = 0;
      virtual HRESULT __stdcall returnToMediaCenter ( ) = 0;
      virtual HRESULT __stdcall updateWindow ( ) = 0;
      virtual HRESULT __stdcall get_maximized (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_minimized (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("5af0bec1-46aa-11d3-bd45-00c04f6ea5ae"))
IWMPEventObject : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_srcElement (
        /*[out,retval]*/ IDispatch * * p ) = 0;
      virtual HRESULT __stdcall get_altKey (
        /*[out,retval]*/ VARIANT_BOOL * p ) = 0;
      virtual HRESULT __stdcall get_ctrlKey (
        /*[out,retval]*/ VARIANT_BOOL * p ) = 0;
      virtual HRESULT __stdcall get_shiftKey (
        /*[out,retval]*/ VARIANT_BOOL * p ) = 0;
      virtual HRESULT __stdcall get_fromElement (
        /*[out,retval]*/ IDispatch * * p ) = 0;
      virtual HRESULT __stdcall get_toElement (
        /*[out,retval]*/ IDispatch * * p ) = 0;
      virtual HRESULT __stdcall put_keyCode (
        /*[in]*/ long p ) = 0;
      virtual HRESULT __stdcall get_keyCode (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_button (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_x (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_y (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_clientX (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_clientY (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_offsetX (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_offsetY (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_screenX (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_screenY (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_screenWidth (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_screenHeight (
        /*[out,retval]*/ long * p ) = 0;
      virtual HRESULT __stdcall get_penOrTouch (
        /*[out,retval]*/ VARIANT_BOOL * p ) = 0;
};

struct __declspec(uuid("6fcae13d-e492-4584-9c21-d2c052a2a33a"))
IWMPTheme : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_title (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_version (
        /*[out,retval]*/ float * pfVersion ) = 0;
      virtual HRESULT __stdcall get_authorVersion (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_author (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_copyright (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_currentViewID (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_currentViewID (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall showErrorDialog ( ) = 0;
      virtual HRESULT __stdcall logString (
        /*[in]*/ BSTR stringVal ) = 0;
      virtual HRESULT __stdcall openView (
        /*[in]*/ BSTR viewID ) = 0;
      virtual HRESULT __stdcall openViewRelative (
        /*[in]*/ BSTR viewID,
        /*[in]*/ long x,
        /*[in]*/ long y,
        /*[out,retval]*/ IDispatch * * ppView ) = 0;
      virtual HRESULT __stdcall closeView (
        /*[in]*/ BSTR viewID ) = 0;
      virtual HRESULT __stdcall openDialog (
        /*[in]*/ BSTR dialogType,
        /*[in]*/ BSTR parameters,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall loadString (
        /*[in]*/ BSTR bstrString,
        /*[out,retval]*/ BSTR * pbstrReturn ) = 0;
      virtual HRESULT __stdcall loadPreference (
        /*[in]*/ BSTR bstrName,
        /*[out,retval]*/ BSTR * pbstrValue ) = 0;
      virtual HRESULT __stdcall savePreference (
        /*[in]*/ BSTR bstrName,
        /*[in]*/ BSTR bstrValue ) = 0;
      virtual HRESULT __stdcall playSound (
        BSTR bstrFilename ) = 0;
      virtual HRESULT __stdcall openViewRelativeInternal (
        /*[in]*/ BSTR viewID,
        /*[in]*/ long nIndex,
        /*[in]*/ long x,
        /*[in]*/ long y,
        /*[in]*/ long nWidth,
        /*[in]*/ long nHeight,
        /*[in]*/ BSTR bstrHorizontalAlignment,
        /*[in]*/ BSTR bstrVerticalAlignment,
        /*[out,retval]*/ IDispatch * * ppView ) = 0;
      virtual HRESULT __stdcall setViewPosition (
        /*[in]*/ BSTR viewID,
        /*[in]*/ long nIndex,
        /*[in]*/ long x,
        /*[in]*/ long y,
        /*[in]*/ long nWidth,
        /*[in]*/ long nHeight,
        /*[in]*/ BSTR bstrHorizontalAlignment,
        /*[in]*/ BSTR bstrVerticalAlignment ) = 0;
};

struct __declspec(uuid("b2c2d18e-97af-4b6a-a56b-2ffff470fb81"))
IWMPLayoutSettingsDispatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_effectType (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_effectType (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_effectPreset (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_effectPreset (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_settingsView (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_settingsView (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_videoZoom (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_videoZoom (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_videoShrinkToFit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_videoShrinkToFit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_videoStretchToFit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_videoStretchToFit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_userVideoStretchToFit (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_userVideoStretchToFit (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_showCaptions (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_showCaptions (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_showTitles (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_showTitles (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_showEffects (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_showEffects (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_showFullScreenPlaylist (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_showFullScreenPlaylist (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_contrastMode (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall getNamedString (
        /*[in]*/ BSTR bstrName,
        /*[out,retval]*/ BSTR * pbstrVal ) = 0;
      virtual HRESULT __stdcall getDurationStringFromSeconds (
        /*[in]*/ long lDurationVal,
        /*[out,retval]*/ BSTR * pbstrVal ) = 0;
      virtual HRESULT __stdcall get_displayView (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_displayView (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_metadataView (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_metadataView (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_showSettings (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_showSettings (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_showResizeBars (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_showResizeBars (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_showPlaylist (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_showPlaylist (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_showMetadata (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_showMetadata (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_settingsWidth (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_settingsWidth (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_settingsHeight (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_settingsHeight (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_playlistWidth (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_playlistWidth (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_playlistHeight (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_playlistHeight (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_metadataWidth (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_metadataWidth (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_metadataHeight (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_metadataHeight (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_fullScreenAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_fullScreenAvailable (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_fullScreenRequest (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_fullScreenRequest (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_quickHide (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_quickHide (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_displayPreset (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_displayPreset (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_settingsPreset (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_settingsPreset (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_metadataPreset (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_metadataPreset (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_userDisplayView (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_userWMPDisplayView (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_userDisplayPreset (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_userWMPDisplayPreset (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_dynamicRangeControl (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_dynamicRangeControl (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_slowRate (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_slowRate (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_fastRate (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_fastRate (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_buttonHueShift (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_buttonHueShift (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_buttonSaturation (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_buttonSaturation (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_backHueShift (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_backHueShift (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_backSaturation (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_backSaturation (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_vizRequest (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_vizRequest (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_appColorLight (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorMedium (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorDark (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_toolbarButtonHighlight (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_toolbarButtonShadow (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_toolbarButtonFace (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_itemPlayingColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_itemPlayingBackgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_itemErrorColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorLimited (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorBlackBackground (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_appColorBlackBackground (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_appColorVideoBorder (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_appColorVideoBorder (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux1 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux2 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux3 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux4 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux5 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux6 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux7 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux8 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux9 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux10 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux11 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux12 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux13 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux14 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_appColorAux15 (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_status (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_status (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_userWMPSettingsView (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_userWMPSettingsPreset (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_userWMPShowSettings (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_userWMPMetadataView (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_userWMPMetadataPreset (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_userWMPShowMetadata (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_captionsHeight (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_captionsHeight (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_snapToVideo (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_snapToVideo (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_pinFullScreenControls (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_pinFullScreenControls (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_isMultiMon (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_exclusiveHueShift (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_exclusiveHueShift (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_exclusiveSaturation (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_exclusiveSaturation (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_themeBkgColorIsActive (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_themeBkgColorIsActive (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_themeBkgColorActive (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_themeBkgColorInactive (
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("43d5ae92-4332-477c-8883-e0b3b063c5d2"))
IWMPWindow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall setWindowPos (
        /*[in]*/ long x,
        /*[in]*/ long y,
        /*[in]*/ long height,
        /*[in]*/ long width ) = 0;
      virtual HRESULT __stdcall get_frameRate (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_frameRate (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_mouseX (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_mouseY (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_onsizing (
        /*[in]*/ IDispatch * _arg1 ) = 0;
      virtual HRESULT __stdcall openViewAlwaysOnTop (
        BSTR bstrViewID ) = 0;
};

struct __declspec(uuid("98bb02d4-ed74-43cc-ad6a-45888f2e0dcc"))
IWMPBrandDispatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_fullServiceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_friendlyName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_guideButtonText (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_guideButtonTip (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_guideMenuText (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_guideAccText (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_task1ButtonText (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_task1ButtonTip (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_task1MenuText (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_task1AccText (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_guideUrl (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_task1Url (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_imageLargeUrl (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_imageSmallUrl (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_imageMenuUrl (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_infoCenterUrl (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_albumInfoUrl (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_buyCDUrl (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_htmlViewUrl (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_navigateUrl (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_cookieUrl (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_downloadStatusUrl (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_colorPlayer (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_colorPlayerText (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_navigateDispid (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_navigateParams (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_navigatePane (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_selectedPane (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_selectedPane (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall setNavigateProps (
        /*[in]*/ BSTR bstrPane,
        /*[in]*/ long lDispid,
        /*[in]*/ BSTR bstrParams ) = 0;
      virtual HRESULT __stdcall getMediaParams (
        /*[in]*/ IUnknown * pObject,
        /*[in]*/ BSTR bstrURL,
        /*[out,retval]*/ BSTR * pbstrResult ) = 0;
      virtual HRESULT __stdcall put_selectedTask (
        /*[in]*/ long _arg1 ) = 0;
      virtual HRESULT __stdcall get_contentPartnerSelected (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
};

struct __declspec(uuid("504f112e-77cc-4e3c-a073-5371b31d9b36"))
IWMPNowPlayingHelperDispatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_viewFriendlyName (
        /*[in]*/ BSTR bstrView,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_viewPresetCount (
        /*[in]*/ BSTR bstrView,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_viewPresetName (
        /*[in]*/ BSTR bstrView,
        /*[in]*/ long nPresetIndex,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_effectFriendlyName (
        /*[in]*/ BSTR bstrEffect,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_effectPresetName (
        /*[in]*/ BSTR bstrEffect,
        /*[in]*/ long nPresetIndex,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall resolveDisplayView (
        /*[in]*/ VARIANT_BOOL fSafe,
        /*[out,retval]*/ BSTR * pbstrVal ) = 0;
      virtual HRESULT __stdcall isValidDisplayView (
        /*[in]*/ BSTR bstrView,
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall getSkinFile (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_captionsAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_linkAvailable (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_linkRequest (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_linkRequest (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_linkRequestParams (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_linkRequestParams (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall getCurrentArtID (
        /*[in]*/ VARIANT_BOOL fLargeArt,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall getTimeString (
        /*[in]*/ double dTime,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall getCurrentScriptCommand (
        /*[in]*/ BSTR bstrType,
        /*[out,retval]*/ BSTR * pbstrCommand ) = 0;
      virtual HRESULT __stdcall calcLayout (
        /*[in]*/ long lWidth,
        /*[in]*/ long lHeight,
        /*[in]*/ VARIANT_BOOL vbCaptions,
        /*[in]*/ VARIANT_BOOL vbBanner ) = 0;
      virtual HRESULT __stdcall getLayoutSize (
        /*[in]*/ long nProp,
        /*[out,retval]*/ long * plValue ) = 0;
      virtual HRESULT __stdcall getRootPlaylist (
        /*[in]*/ IDispatch * pPlaylist,
        /*[out,retval]*/ IDispatch * * ppRootPlaylist ) = 0;
      virtual HRESULT __stdcall getHTMLViewURL (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_editObj (
        /*[out,retval]*/ IUnknown * * ppVal ) = 0;
      virtual HRESULT __stdcall put_editObj (
        /*[in]*/ IUnknown * ppVal ) = 0;
      virtual HRESULT __stdcall getStatusString (
        /*[in]*/ BSTR bstrStatusId,
        /*[out,retval]*/ BSTR * pbstrStatus ) = 0;
      virtual HRESULT __stdcall getStatusPct (
        /*[in]*/ BSTR bstrStatusId,
        /*[out,retval]*/ long * pvResult ) = 0;
      virtual HRESULT __stdcall getStatusResult (
        /*[in]*/ BSTR bstrStatusId,
        /*[out,retval]*/ long * pvResult ) = 0;
      virtual HRESULT __stdcall getStatusIcon (
        /*[in]*/ BSTR bstrStatusId,
        /*[out,retval]*/ long * pvResult ) = 0;
      virtual HRESULT __stdcall getStatusIdList (
        /*[out,retval]*/ BSTR * pbstrStatus ) = 0;
      virtual HRESULT __stdcall get_notificationString (
        /*[out,retval]*/ BSTR * pbstrNotificationString ) = 0;
      virtual HRESULT __stdcall get_htmlViewBaseURL (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_htmlViewBaseURL (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_htmlViewFullURL (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_htmlViewFullURL (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_htmlViewSecureLock (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_htmlViewSecureLock (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_htmlViewBusy (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_htmlViewBusy (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_htmlViewShowCert (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_htmlViewShowCert (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_previousEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_previousEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_doPreviousNow (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_doPreviousNow (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_DPI (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall clearColors ( ) = 0;
      virtual HRESULT __stdcall get_lastMessage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_lastMessage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_inVistaPlus (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_isBidi (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_isOCX (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_hoverTransportsEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall initRipHelper ( ) = 0;
      virtual HRESULT __stdcall get_isAudioCD (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_isAudioCD (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_canRip (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_canRip (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_isRipping (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_isRipping (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_currentDrive (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_currentDrive (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall startRip ( ) = 0;
      virtual HRESULT __stdcall stopRip ( ) = 0;
      virtual HRESULT __stdcall get_showMMO (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_showMMO (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_MMOVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_suggestionsVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_suggestionsTextColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_fontFace (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_fontSize (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_doubleClickTime (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_playAgain (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_previousPlaylistAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_nextPlaylistAvailable (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall nextPlaylist ( ) = 0;
      virtual HRESULT __stdcall previousPlaylist ( ) = 0;
      virtual HRESULT __stdcall playOffsetMedia (
        /*[in]*/ long iOffset ) = 0;
      virtual HRESULT __stdcall get_basketVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_basketVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_mmoTextColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundEnabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundIndex (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundIndex (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_upNext (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_playbackOverlayVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_remoted (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_glassEnabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_highContrast (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_testHighContrast (
        /*[in]*/ BSTR _arg1 ) = 0;
      virtual HRESULT __stdcall get_sessionPlaylistCount (
        /*[out]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall setGestureStatus (
        /*[in]*/ IDispatch * pObject,
        /*[in]*/ long newVal ) = 0;
      virtual HRESULT __stdcall get_metadataString (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_metadataString (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_albumArtAlpha (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_playerModeAlbumArtSelected (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_inFullScreen (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall syncToAlbumArt (
        /*[in]*/ IDispatch * pObject,
        /*[in]*/ long iOffsetFromCurrentMedia,
        /*[in]*/ BSTR bstrFallbackImage ) = 0;
};

struct __declspec(uuid("2a2e0da3-19fa-4f82-be18-cd7d7a3b977f"))
IWMPNowDoingDispatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall buyContent ( ) = 0;
      virtual HRESULT __stdcall hideBasket ( ) = 0;
      virtual HRESULT __stdcall burnNavigateToStatus ( ) = 0;
      virtual HRESULT __stdcall syncNavigateToStatus ( ) = 0;
      virtual HRESULT __stdcall get_DPI (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_mode (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_burn_selectedDrive (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_burn_selectedDrive (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_sync_selectedDevice (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_sync_selectedDevice (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_burn_numDiscsSpanned (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_editPlaylist (
        /*[out,retval]*/ IDispatch * * ppEditPlaylist ) = 0;
      virtual HRESULT __stdcall get_basketPlaylistName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_isHighContrastMode (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_allowRating (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_allowShop (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall get_burn_mediaType (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_burn_contentType (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_burn_freeSpace (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_burn_totalSpace (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_burn_driveName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_burn_numDevices (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_burn_spaceToUse (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_burn_percentComplete (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_sync_spaceToUse (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_sync_spaceUsed (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_sync_totalSpace (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_sync_deviceName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_sync_numDevices (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_sync_oemName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_sync_percentComplete (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall logData (
        /*[in]*/ BSTR ID,
        /*[in]*/ BSTR data ) = 0;
      virtual HRESULT __stdcall formatTime (
        /*[in]*/ long value,
        /*[out,retval]*/ BSTR * pbstrReturn ) = 0;
};

struct __declspec(uuid("946b023e-044c-4473-8018-74954f09dc7e"))
IWMPHoverPreviewDispatch : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_title (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_album (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_URL (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_image (
        /*[in]*/ IDispatch * _arg1 ) = 0;
      virtual HRESULT __stdcall put_autoClick (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall put_previewClick (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall dismiss ( ) = 0;
};

struct __declspec(uuid("bb17fff7-1692-4555-918a-6af7bfacedd2"))
IWMPButtonCtrlEvents : IDispatch
{};

struct __declspec(uuid("87291b51-0c8e-11d3-bb2a-00a0c93ca73a"))
WMPButtonCtrl;
    // [ default ] interface IWMPButtonCtrl
    // [ default, source ] dispinterface IWMPButtonCtrlEvents

struct __declspec(uuid("87291b50-0c8e-11d3-bb2a-00a0c93ca73a"))
IWMPButtonCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_image (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_image (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_hoverImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_hoverImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_downImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_downImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_disabledImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_disabledImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_hoverDownImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_hoverDownImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_tiled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_tiled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_transparencyColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_transparencyColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_down (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_down (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_sticky (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_sticky (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_upToolTip (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_upToolTip (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_downToolTip (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_downToolTip (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_cursor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_cursor (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("fc1880cf-83b9-43a7-a066-c44ce8c82583"))
WMPListBoxCtrl;
    // [ default ] interface IWMPListBoxCtrl

struct __declspec(uuid("fc1880ce-83b9-43a7-a066-c44ce8c82583"))
IWMPListBoxCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_selectedItem (
        /*[out,retval]*/ long * pnPos ) = 0;
      virtual HRESULT __stdcall put_selectedItem (
        /*[in]*/ long pnPos ) = 0;
      virtual HRESULT __stdcall get_sorted (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_sorted (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_multiselect (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_multiselect (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_readOnly (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_readOnly (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_foregroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_foregroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_fontSize (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_fontSize (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_fontStyle (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_fontStyle (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_fontFace (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_fontFace (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_itemCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_firstVisibleItem (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_firstVisibleItem (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall put_popUp (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall get_focusItem (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_focusItem (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_border (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_border (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall getItem (
        /*[in]*/ long nPos,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall insertItem (
        /*[in]*/ long nPos,
        /*[in]*/ BSTR newVal ) = 0;
      virtual HRESULT __stdcall appendItem (
        /*[in]*/ BSTR newVal ) = 0;
      virtual HRESULT __stdcall replaceItem (
        /*[in]*/ long nPos,
        /*[in]*/ BSTR newVal ) = 0;
      virtual HRESULT __stdcall deleteItem (
        /*[in]*/ long nPos ) = 0;
      virtual HRESULT __stdcall deleteAll ( ) = 0;
      virtual HRESULT __stdcall findItem (
        /*[in]*/ long nStartIndex,
        /*[in]*/ BSTR newVal,
        /*[out,retval]*/ long * pnPos ) = 0;
      virtual HRESULT __stdcall getNextSelectedItem (
        /*[in]*/ long nStartIndex,
        /*[out,retval]*/ long * pnSelected ) = 0;
      virtual HRESULT __stdcall setSelectedState (
        /*[in]*/ long nPos,
        /*[in]*/ VARIANT_BOOL vbSelected ) = 0;
      virtual HRESULT __stdcall show ( ) = 0;
      virtual HRESULT __stdcall dismiss ( ) = 0;
};

struct __declspec(uuid("d255dfb8-c22a-42cf-b8b7-f15d7bcf65d6"))
IWMPListBoxItem : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_value (
        /*[in]*/ BSTR _arg1 ) = 0;
};

struct __declspec(uuid("63d9d30f-ae4c-4678-8ca8-5720f4fe4419"))
IWMPPlaylistCtrlColumn : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_columnName (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_columnName (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_columnID (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_columnID (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_columnResizeMode (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_columnResizeMode (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_columnWidth (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_columnWidth (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("cdac14d2-8be4-11d3-bb48-00a0c93ca73a"))
IWMPSliderCtrlEvents : IDispatch
{};

struct __declspec(uuid("f2bf2c90-405f-11d3-bb39-00a0c93ca73a"))
WMPSliderCtrl;
    // [ default ] interface IWMPSliderCtrl
    // [ default, source ] dispinterface IWMPSliderCtrlEvents

struct __declspec(uuid("f2bf2c8f-405f-11d3-bb39-00a0c93ca73a"))
IWMPSliderCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_direction (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_direction (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_slide (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_slide (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_tiled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_tiled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_foregroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_foregroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_foregroundEndColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_foregroundEndColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundEndColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundEndColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_disabledColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_disabledColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_transparencyColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_transparencyColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_foregroundImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_foregroundImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundHoverImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundHoverImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_disabledImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_disabledImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_thumbImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_thumbImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_thumbHoverImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_thumbHoverImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_thumbDownImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_thumbDownImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_thumbDisabledImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_thumbDisabledImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_min (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_min (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_max (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_max (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_value (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_value (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_toolTip (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_toolTip (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_cursor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_cursor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_borderSize (
        /*[out,retval]*/ int * pVal ) = 0;
      virtual HRESULT __stdcall put_borderSize (
        /*[in]*/ int pVal ) = 0;
      virtual HRESULT __stdcall get_foregroundHoverImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_foregroundHoverImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_foregroundProgress (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_foregroundProgress (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_useForegroundProgress (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_useForegroundProgress (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("a85c0477-714c-4a06-b9f6-7c8ca38b45dc"))
IWMPVideoCtrlEvents : IDispatch
{};

struct __declspec(uuid("61cecf11-fc3a-11d2-a1cd-005004602752"))
WMPVideoCtrl;
    // [ default ] interface IWMPVideoCtrl
    // [ default, source ] dispinterface IWMPVideoCtrlEvents

struct __declspec(uuid("61cecf10-fc3a-11d2-a1cd-005004602752"))
IWMPVideoCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_windowless (
        /*[in]*/ VARIANT_BOOL pbClipped ) = 0;
      virtual HRESULT __stdcall get_windowless (
        /*[out,retval]*/ VARIANT_BOOL * pbClipped ) = 0;
      virtual HRESULT __stdcall put_cursor (
        /*[in]*/ BSTR pbstrCursor ) = 0;
      virtual HRESULT __stdcall get_cursor (
        /*[out,retval]*/ BSTR * pbstrCursor ) = 0;
      virtual HRESULT __stdcall put_backgroundColor (
        /*[in]*/ BSTR pbstrColor ) = 0;
      virtual HRESULT __stdcall get_backgroundColor (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_maintainAspectRatio (
        /*[in]*/ VARIANT_BOOL pbMaintainAspectRatio ) = 0;
      virtual HRESULT __stdcall get_maintainAspectRatio (
        /*[out,retval]*/ VARIANT_BOOL * pbMaintainAspectRatio ) = 0;
      virtual HRESULT __stdcall put_toolTip (
        /*[in]*/ BSTR bstrToolTip ) = 0;
      virtual HRESULT __stdcall get_toolTip (
        /*[out,retval]*/ BSTR * bstrToolTip ) = 0;
      virtual HRESULT __stdcall get_fullScreen (
        /*[out,retval]*/ VARIANT_BOOL * pbFullScreen ) = 0;
      virtual HRESULT __stdcall put_fullScreen (
        /*[in]*/ VARIANT_BOOL pbFullScreen ) = 0;
      virtual HRESULT __stdcall put_shrinkToFit (
        /*[in]*/ VARIANT_BOOL pbShrinkToFit ) = 0;
      virtual HRESULT __stdcall get_shrinkToFit (
        /*[out,retval]*/ VARIANT_BOOL * pbShrinkToFit ) = 0;
      virtual HRESULT __stdcall put_stretchToFit (
        /*[in]*/ VARIANT_BOOL pbStretchToFit ) = 0;
      virtual HRESULT __stdcall get_stretchToFit (
        /*[out,retval]*/ VARIANT_BOOL * pbStretchToFit ) = 0;
      virtual HRESULT __stdcall put_zoom (
        /*[in]*/ long pzoom ) = 0;
      virtual HRESULT __stdcall get_zoom (
        /*[out,retval]*/ long * pzoom ) = 0;
};

struct __declspec(uuid("47dea830-d619-4154-b8d8-6b74845d6a2d"))
WMPEffects;
    // [ default ] interface IWMPEffectsCtrl

struct __declspec(uuid("a9efab80-0a60-4c3f-bbd1-4558dd2a9769"))
IWMPEffectsCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_windowed (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_windowed (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_allowAll (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_allowAll (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall put_currentEffectType (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_currentEffectType (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_currentEffectTitle (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall next ( ) = 0;
      virtual HRESULT __stdcall previous ( ) = 0;
      virtual HRESULT __stdcall settings ( ) = 0;
      virtual HRESULT __stdcall get_currentEffect (
        /*[out,retval]*/ IDispatch * * p ) = 0;
      virtual HRESULT __stdcall put_currentEffect (
        /*[in]*/ IDispatch * p ) = 0;
      virtual HRESULT __stdcall nextEffect ( ) = 0;
      virtual HRESULT __stdcall previousEffect ( ) = 0;
      virtual HRESULT __stdcall nextPreset ( ) = 0;
      virtual HRESULT __stdcall previousPreset ( ) = 0;
      virtual HRESULT __stdcall get_currentPreset (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_currentPreset (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_currentPresetTitle (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_currentEffectPresetCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_fullScreen (
        /*[out,retval]*/ VARIANT_BOOL * pbFullScreen ) = 0;
      virtual HRESULT __stdcall put_fullScreen (
        /*[in]*/ VARIANT_BOOL pbFullScreen ) = 0;
      virtual HRESULT __stdcall get_effectCanGoFullScreen (
        /*[out,retval]*/ VARIANT_BOOL * pbFullScreen ) = 0;
      virtual HRESULT __stdcall get_effectHasPropertyPage (
        /*[out,retval]*/ VARIANT_BOOL * pbPropertyPage ) = 0;
      virtual HRESULT __stdcall get_effectCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_effectTitle (
        /*[in]*/ long index,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_effectType (
        /*[in]*/ long index,
        /*[out,retval]*/ BSTR * pVal ) = 0;
};

struct __declspec(uuid("93eb32f5-87b1-45ad-acc6-0f2483db83bb"))
WMPEqualizerSettingsCtrl;
    // [ default ] interface IWMPEqualizerSettingsCtrl

struct __declspec(uuid("2bd3716f-a914-49fb-8655-996d5f495498"))
IWMPEqualizerSettingsCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_bypass (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_bypass (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_gainLevel1 (
        /*[out,retval]*/ float * pflLevel ) = 0;
      virtual HRESULT __stdcall put_gainLevel1 (
        /*[in]*/ float pflLevel ) = 0;
      virtual HRESULT __stdcall get_gainLevel2 (
        /*[out,retval]*/ float * pflLevel ) = 0;
      virtual HRESULT __stdcall put_gainLevel2 (
        /*[in]*/ float pflLevel ) = 0;
      virtual HRESULT __stdcall get_gainLevel3 (
        /*[out,retval]*/ float * pflLevel ) = 0;
      virtual HRESULT __stdcall put_gainLevel3 (
        /*[in]*/ float pflLevel ) = 0;
      virtual HRESULT __stdcall get_gainLevel4 (
        /*[out,retval]*/ float * pflLevel ) = 0;
      virtual HRESULT __stdcall put_gainLevel4 (
        /*[in]*/ float pflLevel ) = 0;
      virtual HRESULT __stdcall get_gainLevel5 (
        /*[out,retval]*/ float * pflLevel ) = 0;
      virtual HRESULT __stdcall put_gainLevel5 (
        /*[in]*/ float pflLevel ) = 0;
      virtual HRESULT __stdcall get_gainLevel6 (
        /*[out,retval]*/ float * pflLevel ) = 0;
      virtual HRESULT __stdcall put_gainLevel6 (
        /*[in]*/ float pflLevel ) = 0;
      virtual HRESULT __stdcall get_gainLevel7 (
        /*[out,retval]*/ float * pflLevel ) = 0;
      virtual HRESULT __stdcall put_gainLevel7 (
        /*[in]*/ float pflLevel ) = 0;
      virtual HRESULT __stdcall get_gainLevel8 (
        /*[out,retval]*/ float * pflLevel ) = 0;
      virtual HRESULT __stdcall put_gainLevel8 (
        /*[in]*/ float pflLevel ) = 0;
      virtual HRESULT __stdcall get_gainLevel9 (
        /*[out,retval]*/ float * pflLevel ) = 0;
      virtual HRESULT __stdcall put_gainLevel9 (
        /*[in]*/ float pflLevel ) = 0;
      virtual HRESULT __stdcall get_gainLevel10 (
        /*[out,retval]*/ float * pflLevel ) = 0;
      virtual HRESULT __stdcall put_gainLevel10 (
        /*[in]*/ float pflLevel ) = 0;
      virtual HRESULT __stdcall get_gainLevels (
        /*[in]*/ long iIndex,
        /*[out,retval]*/ float * pflLevel ) = 0;
      virtual HRESULT __stdcall put_gainLevels (
        /*[in]*/ long iIndex,
        /*[in]*/ float pflLevel ) = 0;
      virtual HRESULT __stdcall reset ( ) = 0;
      virtual HRESULT __stdcall get_bands (
        /*[out,retval]*/ long * pbands ) = 0;
      virtual HRESULT __stdcall nextPreset ( ) = 0;
      virtual HRESULT __stdcall previousPreset ( ) = 0;
      virtual HRESULT __stdcall get_currentPreset (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_currentPreset (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_currentPresetTitle (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_presetCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_enhancedAudio (
        /*[out,retval]*/ VARIANT_BOOL * pfVal ) = 0;
      virtual HRESULT __stdcall put_enhancedAudio (
        /*[in]*/ VARIANT_BOOL pfVal ) = 0;
      virtual HRESULT __stdcall get_speakerSize (
        /*[out,retval]*/ long * plVal ) = 0;
      virtual HRESULT __stdcall put_speakerSize (
        /*[in]*/ long plVal ) = 0;
      virtual HRESULT __stdcall get_currentSpeakerName (
        /*[out,retval]*/ BSTR * pbstrName ) = 0;
      virtual HRESULT __stdcall get_truBassLevel (
        /*[out,retval]*/ long * plTruBassLevel ) = 0;
      virtual HRESULT __stdcall put_truBassLevel (
        /*[in]*/ long plTruBassLevel ) = 0;
      virtual HRESULT __stdcall get_wowLevel (
        /*[out,retval]*/ long * plWowLevel ) = 0;
      virtual HRESULT __stdcall put_wowLevel (
        /*[in]*/ long plWowLevel ) = 0;
      virtual HRESULT __stdcall get_splineTension (
        /*[out,retval]*/ float * pflSplineTension ) = 0;
      virtual HRESULT __stdcall put_splineTension (
        /*[in]*/ float pflSplineTension ) = 0;
      virtual HRESULT __stdcall get_enableSplineTension (
        /*[out,retval]*/ VARIANT_BOOL * pfEnableSplineTension ) = 0;
      virtual HRESULT __stdcall put_enableSplineTension (
        /*[in]*/ VARIANT_BOOL pfEnableSplineTension ) = 0;
      virtual HRESULT __stdcall get_presetTitle (
        /*[in]*/ long iIndex,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_normalization (
        /*[out,retval]*/ VARIANT_BOOL * pfVal ) = 0;
      virtual HRESULT __stdcall put_normalization (
        /*[in]*/ VARIANT_BOOL pfVal ) = 0;
      virtual HRESULT __stdcall get_normalizationAverage (
        /*[out,retval]*/ float * pflAverage ) = 0;
      virtual HRESULT __stdcall get_normalizationPeak (
        /*[out,retval]*/ float * pflPeak ) = 0;
      virtual HRESULT __stdcall get_crossFade (
        /*[out,retval]*/ VARIANT_BOOL * pfVal ) = 0;
      virtual HRESULT __stdcall put_crossFade (
        /*[in]*/ VARIANT_BOOL pfVal ) = 0;
      virtual HRESULT __stdcall get_crossFadeWindow (
        /*[out,retval]*/ long * plWindow ) = 0;
      virtual HRESULT __stdcall put_crossFadeWindow (
        /*[in]*/ long plWindow ) = 0;
};

struct __declspec(uuid("ae7bfafe-dcc8-4a73-92c8-cc300ca88859"))
WMPVideoSettingsCtrl;
    // [ default ] interface IWMPVideoSettingsCtrl

struct __declspec(uuid("07ec23da-ef73-4bde-a40f-f269e0b7afd6"))
IWMPVideoSettingsCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_brightness (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_brightness (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_contrast (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_contrast (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_hue (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_hue (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_saturation (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_saturation (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall reset ( ) = 0;
};

struct __declspec(uuid("1ea16d11-dcb1-41fe-bc17-42cdfbef8f53"))
WMPDolbyDigitalSettingsCtrl;
    // [ default ] interface IWMPDolbyDigitalSettingsCtrl

struct __declspec(uuid("bbd6801a-a1d4-4d05-9f2d-29e0024c3fd9"))
IWMPDolbyDigitalSettingsCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall reset ( ) = 0;
      virtual HRESULT __stdcall get_currentPreset (
        /*[out,retval]*/ long * plCurrentPreset ) = 0;
      virtual HRESULT __stdcall put_currentPreset (
        /*[in]*/ long plCurrentPreset ) = 0;
};

struct __declspec(uuid("d9de732a-aee9-4503-9d11-5605589977a8"))
WMPLibraryTreeCtrl;
    // [ default ] interface IWMPLibraryTreeCtrl

struct __declspec(uuid("6342fced-25ea-4033-bddb-d049a14382d3"))
WMPEditCtrl;
    // [ default ] interface IWMPEditCtrl

struct __declspec(uuid("70e1217c-c617-4cfd-bd8a-69ca2043e70b"))
IWMPEditCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_value (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_value (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_border (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_border (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_justification (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_justification (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_editStyle (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_editStyle (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_wordWrap (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_wordWrap (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_readOnly (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_readOnly (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_foregroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_foregroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_fontSize (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_fontSize (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_fontStyle (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_fontStyle (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_fontFace (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_fontFace (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_textLimit (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_textLimit (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_lineCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall getLine (
        /*[in]*/ long nIndex,
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall getSelectionStart (
        /*[out,retval]*/ long * pnStart ) = 0;
      virtual HRESULT __stdcall getSelectionEnd (
        /*[out,retval]*/ long * pnEnd ) = 0;
      virtual HRESULT __stdcall setSelection (
        /*[in]*/ long nStart,
        /*[in]*/ long nEnd ) = 0;
      virtual HRESULT __stdcall replaceSelection (
        /*[in]*/ BSTR newVal ) = 0;
      virtual HRESULT __stdcall getLineIndex (
        /*[in]*/ long nIndex,
        /*[out,retval]*/ long * pnPosition ) = 0;
      virtual HRESULT __stdcall getLineFromChar (
        /*[in]*/ long nPosition,
        /*[out,retval]*/ long * pnLine ) = 0;
};

struct __declspec(uuid("a8a55fac-82ea-4bd7-bd7b-11586a4d99e4"))
WMPSkinList;
    // [ default ] interface IWMPSkinList

struct __declspec(uuid("8cea03a2-d0c5-4e97-9c38-a676a639a51d"))
IWMPSkinList : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall updateBasketColumns ( ) = 0;
      virtual HRESULT __stdcall highContrastChange ( ) = 0;
};

struct __declspec(uuid("5d0ad945-289e-45c5-a9c6-f301f0152108"))
IWMPPluginUIHost : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_backgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_objectID (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_objectID (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall getProperty (
        /*[in]*/ BSTR bstrName,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall setProperty (
        /*[in]*/ BSTR bstrName,
        /*[in]*/ VARIANT newVal ) = 0;
};

struct __declspec(uuid("bab3768b-8883-4aec-9f9b-e14c947913ef"))
WMPMenuCtrl;
    // [ default ] interface IWMPMenuCtrl

struct __declspec(uuid("158a7adc-33da-4039-a553-bddbbe389f5c"))
IWMPMenuCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall deleteAllItems ( ) = 0;
      virtual HRESULT __stdcall appendItem (
        /*[in]*/ long nID,
        /*[in]*/ BSTR bstrItem ) = 0;
      virtual HRESULT __stdcall appendSeparator ( ) = 0;
      virtual HRESULT __stdcall enableItem (
        /*[in]*/ long nID,
        /*[in]*/ VARIANT_BOOL newVal ) = 0;
      virtual HRESULT __stdcall checkItem (
        /*[in]*/ long nID,
        /*[in]*/ VARIANT_BOOL newVal ) = 0;
      virtual HRESULT __stdcall checkRadioItem (
        /*[in]*/ long nID,
        /*[in]*/ VARIANT_BOOL newVal ) = 0;
      virtual HRESULT __stdcall get_showFlags (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_showFlags (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall show (
        /*[out,retval]*/ long * pnID ) = 0;
      virtual HRESULT __stdcall showEx (
        /*[in]*/ long nID ) = 0;
};

struct __declspec(uuid("6b28f900-8d64-4b80-9963-cc52ddd1fbb4"))
WMPAutoMenuCtrl;
    // [ default ] interface IWMPAutoMenuCtrl

struct __declspec(uuid("1ad13e0b-4f3a-41df-9be2-f9e6fe0a7875"))
IWMPAutoMenuCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall show (
        /*[in]*/ BSTR newVal ) = 0;
};

struct __declspec(uuid("ae3b6831-25a9-11d3-bd41-00c04f6ea5ae"))
WMPRegionalButtonCtrl;
    // [ default ] interface IWMPRegionalButtonCtrl

struct __declspec(uuid("58d507b1-2354-11d3-bd41-00c04f6ea5ae"))
IWMPRegionalButtonCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_image (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_image (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_hoverImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_hoverImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_downImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_downImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_hoverDownImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_hoverDownImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_hoverHoverImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_hoverHoverImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_disabledImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_disabledImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_mappingImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_mappingImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_transparencyColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_transparencyColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_cursor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_cursor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_showBackground (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_showBackground (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_radio (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_radio (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_buttonCount (
        /*[out,retval]*/ long * nButtons ) = 0;
      virtual HRESULT __stdcall createButton (
        /*[out,retval]*/ IDispatch * * pButton ) = 0;
      virtual HRESULT __stdcall getButton (
        /*[in]*/ long nButton,
        /*[out,retval]*/ IDispatch * * pButton ) = 0;
      virtual HRESULT __stdcall Click (
        /*[in]*/ long nButton ) = 0;
      virtual HRESULT __stdcall get_hueShift (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_hueShift (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_saturation (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_saturation (
        /*[in]*/ float pVal ) = 0;
};

struct __declspec(uuid("50fc8d31-67ac-11d3-bd4c-00c04f6ea5ae"))
IWMPRegionalButtonEvents : IDispatch
{};

struct __declspec(uuid("09aeff11-69ef-11d3-bd4d-00c04f6ea5ae"))
WMPRegionalButton;
    // [ default ] interface IWMPRegionalButton
    // [ default, source ] dispinterface IWMPRegionalButtonEvents

struct __declspec(uuid("58d507b2-2354-11d3-bd41-00c04f6ea5ae"))
IWMPRegionalButton : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_upToolTip (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_upToolTip (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_downToolTip (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_downToolTip (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_mappingColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_mappingColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_enabled (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_enabled (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_sticky (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_sticky (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_down (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_down (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_index (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_tabStop (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_tabStop (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_cursor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_cursor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall Click ( ) = 0;
      virtual HRESULT __stdcall get_accName (
        /*[out,retval]*/ BSTR * pszName ) = 0;
      virtual HRESULT __stdcall put_accName (
        /*[in]*/ BSTR pszName ) = 0;
      virtual HRESULT __stdcall get_accDescription (
        /*[out,retval]*/ BSTR * pszDescription ) = 0;
      virtual HRESULT __stdcall put_accDescription (
        /*[in]*/ BSTR pszDescription ) = 0;
      virtual HRESULT __stdcall get_accKeyboardShortcut (
        /*[out,retval]*/ BSTR * pszShortcut ) = 0;
      virtual HRESULT __stdcall put_accKeyboardShortcut (
        /*[in]*/ BSTR pszShortcut ) = 0;
};

struct __declspec(uuid("95f45aa4-ed0a-11d2-ba67-0000f80855e6"))
IWMPCustomSliderCtrlEvents : IDispatch
{};

struct __declspec(uuid("95f45aa3-ed0a-11d2-ba67-0000f80855e6"))
WMPCustomSliderCtrl;
    // [ default ] interface IWMPCustomSlider
    // [ default, source ] dispinterface IWMPCustomSliderCtrlEvents

struct __declspec(uuid("95f45aa2-ed0a-11d2-ba67-0000f80855e6"))
IWMPCustomSlider : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_cursor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_cursor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_min (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_min (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_max (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_max (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_value (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_value (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_toolTip (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_toolTip (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_positionImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_positionImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_image (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_image (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_hoverImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_hoverImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_disabledImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_disabledImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_downImage (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_downImage (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_transparencyColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_transparencyColor (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("ddda102e-0e17-11d3-a2e2-00c04f79f88e"))
WMPTextCtrl;
    // [ default ] interface IWMPTextCtrl

struct __declspec(uuid("237dac8e-0e32-11d3-a2e2-00c04f79f88e"))
IWMPTextCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_backgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_fontFace (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_fontFace (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_fontStyle (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_fontStyle (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_fontSize (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_fontSize (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_foregroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_foregroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_hoverBackgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_hoverBackgroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_hoverForegroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_hoverForegroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_hoverFontStyle (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_hoverFontStyle (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_value (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_value (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_toolTip (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_toolTip (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_disabledFontStyle (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_disabledFontStyle (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_disabledForegroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_disabledForegroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_disabledBackgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_disabledBackgroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_fontSmoothing (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_fontSmoothing (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_justification (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_justification (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_wordWrap (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_wordWrap (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_cursor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_cursor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_scrolling (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_scrolling (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_scrollingDirection (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_scrollingDirection (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_scrollingDelay (
        /*[out,retval]*/ int * pVal ) = 0;
      virtual HRESULT __stdcall put_scrollingDelay (
        /*[in]*/ int pVal ) = 0;
      virtual HRESULT __stdcall get_scrollingAmount (
        /*[out,retval]*/ int * pVal ) = 0;
      virtual HRESULT __stdcall put_scrollingAmount (
        /*[in]*/ int pVal ) = 0;
      virtual HRESULT __stdcall get_textWidth (
        /*[out,retval]*/ int * pVal ) = 0;
      virtual HRESULT __stdcall get_onGlass (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_onGlass (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_disableGlassBlurBackground (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_disableGlassBlurBackground (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("5f9cfd93-8cad-11d3-9a7e-00c04f8efb70"))
WMPPlaylistCtrl;
    // [ default ] interface IWMPPlaylistCtrl

struct __declspec(uuid("891eadb1-1c45-48b0-b704-49a888da98c4"))
ITaskCntrCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CurrentContainer (
        /*[out,retval]*/ IUnknown * * ppUnk ) = 0;
      virtual HRESULT __stdcall put_CurrentContainer (
        /*[in]*/ IUnknown * ppUnk ) = 0;
      virtual HRESULT __stdcall Activate ( ) = 0;
};

struct __declspec(uuid("d84cca96-cce2-11d2-9ecc-0000f8085981"))
_WMPCoreEvents : IDispatch
{};

struct __declspec(uuid("09428d37-e0b9-11d2-b147-00c04f79faa6"))
WMPCore;
    // [ default ] interface IWMPCore3
    // interface IWMPCore2
    // interface IWMPCore
    // interface IWMPControls
    // interface IWMPPlaylist
    // interface IWMPSettings
    // interface IWMPMedia
    // interface IWMPStringCollection
    // interface IWMPMediaCollection
    // interface IWMPPlaylistCollection
    // interface IWMPCdromCollection
    // interface IWMPCdrom
    // interface IWMPErrorItem
    // interface IWMPClosedCaption
    // interface IWMPError
    // interface IWMPDVD
    // interface IWMPControls2
    // interface IWMPMedia2
    // interface IWMPMedia3
    // interface IWMPMetadataPicture
    // interface IWMPMetadataText
    // interface IWMPSettings2
    // interface IWMPControls3
    // interface IWMPClosedCaption2
    // [ default, source ] dispinterface _WMPCoreEvents

struct __declspec(uuid("6b550945-018f-11d3-b14a-00c04f79faa6"))
IWMPGraphEventHandler : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall NotifyGraphStateChange (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ long lGraphState ) = 0;
      virtual HRESULT __stdcall AsyncNotifyGraphStateChange (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ long lGraphState ) = 0;
      virtual HRESULT __stdcall NotifyRateChange (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ double dRate ) = 0;
      virtual HRESULT __stdcall NotifyPlaybackEnd (
        /*[in]*/ ULONG_PTR punkGraph,
        BSTR bstrQueuedUrl,
        ULONG_PTR dwCurrentContext ) = 0;
      virtual HRESULT __stdcall NotifyStreamEnd (
        /*[in]*/ ULONG_PTR punkGraph ) = 0;
      virtual HRESULT __stdcall NotifyScriptCommand (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ BSTR bstrCommand,
        /*[in]*/ BSTR bstrParam ) = 0;
      virtual HRESULT __stdcall NotifyEarlyScriptCommand (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ BSTR bstrCommand,
        /*[in]*/ BSTR bstrParam,
        /*[in]*/ double dTime ) = 0;
      virtual HRESULT __stdcall NotifyMarkerHit (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ long lMarker ) = 0;
      virtual HRESULT __stdcall NotifyGraphError (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ long lErrMajor,
        /*[in]*/ long lErrMinor,
        /*[in]*/ long lCondition,
        /*[in]*/ BSTR bstrInfo,
        /*[in]*/ IUnknown * punkGraphData ) = 0;
      virtual HRESULT __stdcall NotifyAcquireCredentials (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ BSTR bstrRealm,
        /*[in]*/ BSTR bstrSite,
        /*[in,out]*/ BSTR bstrUser,
        /*[in,out]*/ BSTR bstrPassword,
        /*[in,out]*/ unsigned long * pdwFlags,
        /*[out]*/ VARIANT_BOOL * pfCancel ) = 0;
      virtual HRESULT __stdcall NotifyUntrustedLicense (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ BSTR bstrURL,
        /*[out]*/ VARIANT_BOOL * pfCancel ) = 0;
      virtual HRESULT __stdcall NotifyLicenseDialog (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ BSTR bstrURL,
        /*[in]*/ BSTR bstrContent,
        /*[in]*/ unsigned char * pPostData,
        /*[in]*/ unsigned long dwPostDataSize,
        /*[in]*/ long lResult ) = 0;
      virtual HRESULT __stdcall NotifyNeedsIndividualization (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[out]*/ VARIANT_BOOL * pfResult ) = 0;
      virtual HRESULT __stdcall NotifyNewMetadata (
        /*[in]*/ ULONG_PTR punkGraph ) = 0;
      virtual HRESULT __stdcall NotifyNewMediaCaps (
        /*[in]*/ ULONG_PTR punkGraph ) = 0;
      virtual HRESULT __stdcall NotifyDisconnect (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ long lResult ) = 0;
      virtual HRESULT __stdcall NotifySave (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ long fStarted,
        /*[in]*/ long lResult ) = 0;
      virtual HRESULT __stdcall NotifyDelayClose (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ VARIANT_BOOL fDelay ) = 0;
      virtual HRESULT __stdcall NotifyDVD (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ long lEventCode,
        /*[in]*/ long lParam1,
        /*[in]*/ long lParam2 ) = 0;
      virtual HRESULT __stdcall NotifyRequestAppThreadAction (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ unsigned long dwAction ) = 0;
      virtual HRESULT __stdcall NotifyPrerollReady (
        /*[in]*/ ULONG_PTR punkGraph ) = 0;
      virtual HRESULT __stdcall NotifyNewIcons (
        /*[in]*/ ULONG_PTR punkGraph ) = 0;
      virtual HRESULT __stdcall NotifyStepComplete (
        /*[in]*/ ULONG_PTR punkGraph ) = 0;
      virtual HRESULT __stdcall NotifyNewBitrate (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ unsigned long dwBitrate ) = 0;
      virtual HRESULT __stdcall NotifyGraphCreationPreRender (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ ULONG_PTR punkFilterGraph,
        /*[in]*/ ULONG_PTR punkCardeaEncConfig,
        /*[in]*/ ULONG_PTR phrContinue,
        /*[in]*/ ULONG_PTR hEventToSet ) = 0;
      virtual HRESULT __stdcall NotifyGraphCreationPostRender (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ ULONG_PTR punkFilterGraph,
        /*[in]*/ ULONG_PTR phrContinue,
        /*[in]*/ ULONG_PTR hEventToSet ) = 0;
      virtual HRESULT __stdcall NotifyGraphUserEvent (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ long EventCode ) = 0;
      virtual HRESULT __stdcall NotifyRevocation (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[out]*/ VARIANT_BOOL * pfResult ) = 0;
      virtual HRESULT __stdcall NotifyNeedsWMGraphIndividualization (
        /*[in]*/ ULONG_PTR punkGraph,
        /*[in]*/ ULONG_PTR phWnd,
        /*[in]*/ ULONG_PTR hIndivEvent,
        /*[out]*/ VARIANT_BOOL * pfCancel,
        /*[out]*/ VARIANT_BOOL * pfResult ) = 0;
      virtual HRESULT __stdcall NotifyNeedsFullscreen (
        /*[in]*/ ULONG_PTR punkGraph ) = 0;
};

struct __declspec(uuid("f8578bfa-cd8f-4ce1-a684-5b7e85fca7dc"))
IBattery : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_presetCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_preset (
        /*[in]*/ long nIndex,
        /*[out,retval]*/ IDispatch * * ppDispatch ) = 0;
};

struct __declspec(uuid("40c6bde7-9c90-49d4-ad20-bef81a6c5f22"))
IBatteryPreset : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_title (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_title (
        /*[in]*/ BSTR pVal ) = 0;
};

struct __declspec(uuid("f85e2d65-207d-48db-84b1-915e1735db17"))
IBatteryRandomPreset : IBatteryPreset
{};

struct __declspec(uuid("876e7208-0172-4ebb-b08b-2e1d30dfe44c"))
IBatterySavedPreset : IBatteryPreset
{};

struct __declspec(uuid("33e9291a-f6a9-11d2-9435-00a0c92a2f2d"))
IBarsEffect : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_displayMode (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_displayMode (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_showPeaks (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_showPeaks (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_peakHangTime (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_peakHangTime (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_peakFallbackAcceleration (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_peakFallbackAcceleration (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_peakFallbackSpeed (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_peakFallbackSpeed (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_levelFallbackAcceleration (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_levelFallbackAcceleration (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_levelFallbackSpeed (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_levelFallbackSpeed (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_levelColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_levelColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_peakColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_peakColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_horizontalSpacing (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_horizontalSpacing (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_levelWidth (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_levelWidth (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_levelScale (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_levelScale (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_fadeRate (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_fadeRate (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_fadeMode (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_fadeMode (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_transparent (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_transparent (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
};

struct __declspec(uuid("e2cc638c-fd2c-409b-a1ea-5ddb72dc8e84"))
IWMPExternal : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_version (
        /*[out,retval]*/ BSTR * pBSTR ) = 0;
      virtual HRESULT __stdcall get_appColorLight (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_OnColorChange (
        /*[in]*/ IDispatch * _arg1 ) = 0;
};

struct __declspec(uuid("d10ccdff-472d-498c-b5fe-3630e5405e0a"))
IWMPExternalColors : IWMPExternal
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_appColorMedium (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall get_appColorDark (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall get_appColorButtonHighlight (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall get_appColorButtonShadow (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall get_appColorButtonHoverFace (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
};

struct __declspec(uuid("54df358e-cf38-4010-99f1-f44b0e9000e5"))
IWMPSubscriptionServiceLimited : IWMPExternalColors
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall NavigateTaskPaneURL (
        /*[in]*/ BSTR bstrKeyName,
        /*[in]*/ BSTR bstrTaskPane,
        /*[in]*/ BSTR bstrParams ) = 0;
      virtual HRESULT __stdcall put_SelectedTaskPane (
        /*[in]*/ BSTR bstrTaskPane ) = 0;
      virtual HRESULT __stdcall get_SelectedTaskPane (
        /*[out,retval]*/ BSTR * bstrTaskPane ) = 0;
};

enum WMPSubscriptionDownloadState
{
    wmpsdlsDownloading = 0,
    wmpsdlsPaused = 1,
    wmpsdlsProcessing = 2,
    wmpsdlsCompleted = 3,
    wmpsdlsCancelled = 4
};

struct __declspec(uuid("c9470e8e-3f6b-46a9-a0a9-452815c34297"))
IWMPDownloadItem : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_sourceURL (
        /*[out,retval]*/ BSTR * pbstrURL ) = 0;
      virtual HRESULT __stdcall get_size (
        /*[out,retval]*/ long * plSize ) = 0;
      virtual HRESULT __stdcall get_type (
        /*[out,retval]*/ BSTR * pbstrType ) = 0;
      virtual HRESULT __stdcall get_progress (
        /*[out,retval]*/ long * plProgress ) = 0;
      virtual HRESULT __stdcall get_downloadState (
        /*[out,retval]*/ enum WMPSubscriptionDownloadState * pwmpsdls ) = 0;
      virtual HRESULT __stdcall pause ( ) = 0;
      virtual HRESULT __stdcall resume ( ) = 0;
      virtual HRESULT __stdcall cancel ( ) = 0;
};

struct __declspec(uuid("9fbb3336-6da3-479d-b8ff-67d46e20a987"))
IWMPDownloadItem2 : IWMPDownloadItem
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall getItemInfo (
        /*[in]*/ BSTR bstrItemName,
        /*[out,retval]*/ BSTR * pbstrVal ) = 0;
};

struct __declspec(uuid("0a319c7f-85f9-436c-b88e-82fd88000e1c"))
IWMPDownloadCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ long * plId ) = 0;
      virtual HRESULT __stdcall get_count (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long lItem,
        /*[out,retval]*/ struct IWMPDownloadItem2 * * ppDownload ) = 0;
      virtual HRESULT __stdcall startDownload (
        /*[in]*/ BSTR bstrSourceURL,
        /*[in]*/ BSTR bstrType,
        /*[out,retval]*/ struct IWMPDownloadItem2 * * ppDownload ) = 0;
      virtual HRESULT __stdcall removeItem (
        /*[in]*/ long lItem ) = 0;
      virtual HRESULT __stdcall clear ( ) = 0;
};

struct __declspec(uuid("e15e9ad1-8f20-4cc4-9ec7-1a328ca86a0d"))
IWMPDownloadManager : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall getDownloadCollection (
        /*[in]*/ long lCollectionId,
        /*[out,retval]*/ struct IWMPDownloadCollection * * ppCollection ) = 0;
      virtual HRESULT __stdcall createDownloadCollection (
        /*[out,retval]*/ struct IWMPDownloadCollection * * ppCollection ) = 0;
};

struct __declspec(uuid("2e922378-ee70-4ceb-bbab-ce7ce4a04816"))
IWMPSubscriptionServiceExternal : IWMPSubscriptionServiceLimited
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DownloadManager (
        /*[out,retval]*/ struct IWMPDownloadManager * * ppDownloadMgr ) = 0;
};

struct __declspec(uuid("5f0248c1-62b3-42d7-b927-029119e6ad14"))
IWMPSubscriptionServicePlayMedia : IWMPSubscriptionServiceLimited
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall playMedia (
        /*[in]*/ BSTR bstrURL ) = 0;
};

struct __declspec(uuid("a915cea2-72df-41e1-a576-ef0bae5e5169"))
IWMPDiscoExternal : IWMPSubscriptionServiceExternal
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall put_OnLoginChange (
        /*[in]*/ IDispatch * _arg1 ) = 0;
      virtual HRESULT __stdcall get_userLoggedIn (
        /*[out,retval]*/ VARIANT_BOOL * pvbLoggedIn ) = 0;
      virtual HRESULT __stdcall attemptLogin ( ) = 0;
      virtual HRESULT __stdcall get_accountType (
        /*[out,retval]*/ BSTR * pbstrAcctType ) = 0;
      virtual HRESULT __stdcall put_OnViewChange (
        /*[in]*/ IDispatch * _arg1 ) = 0;
      virtual HRESULT __stdcall changeView (
        /*[in]*/ BSTR bstrLibraryLocationType,
        /*[in]*/ BSTR bstrLibraryLocationID,
        /*[in]*/ BSTR bstrFilter,
        /*[in]*/ BSTR bstrViewParams ) = 0;
      virtual HRESULT __stdcall changeViewOnlineList (
        /*[in]*/ BSTR bstrLibraryLocationType,
        /*[in]*/ BSTR bstrLibraryLocationID,
        /*[in]*/ BSTR bstrParams,
        /*[in]*/ BSTR bstrFriendlyName,
        /*[in]*/ BSTR bstrListType,
        /*[in]*/ BSTR bstrViewMode ) = 0;
      virtual HRESULT __stdcall get_libraryLocationType (
        /*[out,retval]*/ BSTR * pbstrLibraryLocationType ) = 0;
      virtual HRESULT __stdcall get_libraryLocationID (
        /*[out,retval]*/ BSTR * pbstrLibraryLocationID ) = 0;
      virtual HRESULT __stdcall get_selectedItemType (
        /*[out,retval]*/ BSTR * pbstrSelectedItemType ) = 0;
      virtual HRESULT __stdcall get_selectedItemID (
        /*[out,retval]*/ BSTR * pbstrLibraryLocationID ) = 0;
      virtual HRESULT __stdcall get_filter (
        /*[out,retval]*/ BSTR * pbstrFilter ) = 0;
      virtual HRESULT __stdcall get_task (
        /*[out,retval]*/ BSTR * pbstrTask ) = 0;
      virtual HRESULT __stdcall get_viewParameters (
        /*[out,retval]*/ BSTR * pbstrViewParameters ) = 0;
      virtual HRESULT __stdcall cancelNavigate ( ) = 0;
      virtual HRESULT __stdcall showPopup (
        /*[in]*/ long lPopupIndex,
        /*[in]*/ BSTR bstrParameters ) = 0;
      virtual HRESULT __stdcall addToBasket (
        /*[in]*/ BSTR bstrViewType,
        /*[in]*/ BSTR bstrViewIDs ) = 0;
      virtual HRESULT __stdcall get_basketTitle (
        /*[out,retval]*/ BSTR * bstrParams ) = 0;
      virtual HRESULT __stdcall play (
        /*[in]*/ BSTR bstrLibraryLocationType,
        /*[in]*/ BSTR bstrLibraryLocationIDs ) = 0;
      virtual HRESULT __stdcall download (
        /*[in]*/ BSTR bstrViewType,
        /*[in]*/ BSTR bstrViewIDs ) = 0;
      virtual HRESULT __stdcall buy (
        /*[in]*/ BSTR bstrViewType,
        /*[in]*/ BSTR bstrViewIDs ) = 0;
      virtual HRESULT __stdcall saveCurrentViewToLibrary (
        /*[in]*/ BSTR bstrFriendlyListType,
        /*[in]*/ VARIANT_BOOL fDynamic ) = 0;
      virtual HRESULT __stdcall authenticate (
        /*[in]*/ long lAuthenticationIndex ) = 0;
      virtual HRESULT __stdcall sendMessage (
        /*[in]*/ BSTR bstrMsg,
        /*[in]*/ BSTR bstrParam ) = 0;
      virtual HRESULT __stdcall put_OnSendMessageComplete (
        /*[in]*/ IDispatch * _arg1 ) = 0;
      virtual HRESULT __stdcall put_ignoreIEHistory (
        /*[in]*/ VARIANT_BOOL _arg1 ) = 0;
      virtual HRESULT __stdcall get_pluginRunning (
        /*[out,retval]*/ VARIANT_BOOL * pfPluginRunning ) = 0;
      virtual HRESULT __stdcall get_templateBeingDisplayedInLocalLibrary (
        /*[out,retval]*/ VARIANT_BOOL * pfTemplateDisplayed ) = 0;
      virtual HRESULT __stdcall put_OnChangeViewError (
        /*[in]*/ IDispatch * _arg1 ) = 0;
      virtual HRESULT __stdcall put_OnChangeViewOnlineListError (
        /*[in]*/ IDispatch * _arg1 ) = 0;
};

enum WMP_WRITENAMESEX_TYPE
{
    WMP_WRITENAMES_TYPE_CD_BY_TOC = 0,
    WMP_WRITENAMES_TYPE_CD_BY_CONTENT_ID = 1,
    WMP_WRITENAMES_TYPE_CD_BY_MDQCD = 2,
    WMP_WRITENAMES_TYPE_DVD_BY_DVDID = 3
};

struct __declspec(uuid("2d7ef888-1d3c-484a-a906-9f49d99bb344"))
IWMPCDDVDWizardExternal : IWMPExternalColors
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall WriteNames (
        /*[in]*/ BSTR bstrTOC,
        /*[in]*/ BSTR bstrMetadata ) = 0;
      virtual HRESULT __stdcall ReturnToMainTask ( ) = 0;
      virtual HRESULT __stdcall WriteNamesEx (
        /*[in]*/ enum WMP_WRITENAMESEX_TYPE type,
        /*[in]*/ BSTR bstrTypeId,
        /*[in]*/ BSTR bstrMetadata,
        /*[in]*/ VARIANT_BOOL fRenameRegroupFiles ) = 0;
      virtual HRESULT __stdcall GetMDQByRequestID (
        /*[in]*/ BSTR bstrRequestID,
        /*[out,retval]*/ BSTR * pbstrMDQ ) = 0;
      virtual HRESULT __stdcall EditMetadata ( ) = 0;
      virtual HRESULT __stdcall IsMetadataAvailableForEdit (
        /*[out,retval]*/ VARIANT_BOOL * pbIsAvailable ) = 0;
      virtual HRESULT __stdcall BuyCD (
        /*[in]*/ BSTR bstrTitle,
        /*[in]*/ BSTR bstrArtist,
        /*[in]*/ BSTR bstrAlbum,
        /*[in]*/ BSTR bstrUFID,
        /*[in]*/ BSTR bstrWMID ) = 0;
};

struct __declspec(uuid("f81b2a59-02bc-4003-8b2f-c124af66fc66"))
IWMPBaseExternal : IWMPExternal
{};

struct __declspec(uuid("3148e685-b243-423d-8341-8480d6eff674"))
IWMPOfflineExternal : IWMPExternal
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall forceOnline ( ) = 0;
};

struct __declspec(uuid("4e195db1-9e29-47fc-9ce1-de9937d32925"))
IWMPDMRAVTransportService : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_TransportState (
        /*[out,retval]*/ BSTR * pbstrTransportState ) = 0;
      virtual HRESULT __stdcall get_TransportStatus (
        /*[out,retval]*/ BSTR * pbstrTransportStatus ) = 0;
      virtual HRESULT __stdcall get_PlaybackStorageMedium (
        /*[out,retval]*/ BSTR * pbstrPlaybackStorageMedium ) = 0;
      virtual HRESULT __stdcall get_RecordStorageMedium (
        /*[out,retval]*/ BSTR * pbstrRecordStorageMedium ) = 0;
      virtual HRESULT __stdcall get_PossiblePlaybackStorageMedia (
        /*[out,retval]*/ BSTR * pbstrPossiblePlaybackStorageMedia ) = 0;
      virtual HRESULT __stdcall get_PossibleRecordStorageMedia (
        /*[out,retval]*/ BSTR * pbstrPossibleRecordStorageMedia ) = 0;
      virtual HRESULT __stdcall get_CurrentPlayMode (
        /*[out,retval]*/ BSTR * pbstrCurrentPlayMode ) = 0;
      virtual HRESULT __stdcall get_TransportPlaySpeed (
        /*[out,retval]*/ BSTR * pbstrTransportPlaySpeed ) = 0;
      virtual HRESULT __stdcall get_RecordMediumWriteStatus (
        /*[out,retval]*/ BSTR * pbstrRecordMediumWriteStatus ) = 0;
      virtual HRESULT __stdcall get_CurrentRecordQualityMode (
        /*[out,retval]*/ BSTR * pbstrCurrentRecordQualityMode ) = 0;
      virtual HRESULT __stdcall get_PossibleRecordQualityModes (
        /*[out,retval]*/ BSTR * pbstrPossibleRecordQualityModes ) = 0;
      virtual HRESULT __stdcall get_NumberOfTracks (
        /*[out,retval]*/ unsigned long * pulNumberOfTracks ) = 0;
      virtual HRESULT __stdcall get_CurrentTrack (
        /*[out,retval]*/ unsigned long * pulCurrentTrack ) = 0;
      virtual HRESULT __stdcall get_CurrentTrackDuration (
        /*[out,retval]*/ BSTR * pbstrCurrentTrackDuration ) = 0;
      virtual HRESULT __stdcall get_CurrentMediaDuration (
        /*[out,retval]*/ BSTR * pbstrCurrentMediaDuration ) = 0;
      virtual HRESULT __stdcall get_CurrentTrackMetaData (
        /*[out,retval]*/ BSTR * pbstrCurrentTrackMetaData ) = 0;
      virtual HRESULT __stdcall get_CurrentTrackURI (
        /*[out,retval]*/ BSTR * pbstrCurrentTrackURI ) = 0;
      virtual HRESULT __stdcall get_AVTransportURI (
        /*[out,retval]*/ BSTR * pbstrAVTransportURI ) = 0;
      virtual HRESULT __stdcall get_AVTransportURIMetaData (
        /*[out,retval]*/ BSTR * pbstrAVTransportURIMetaData ) = 0;
      virtual HRESULT __stdcall get_NextAVTransportURI (
        /*[out,retval]*/ BSTR * pbstrNextAVTransportURI ) = 0;
      virtual HRESULT __stdcall get_NextAVTransportURIMetaData (
        /*[out,retval]*/ BSTR * pbstrNextAVTransportURIMetaData ) = 0;
      virtual HRESULT __stdcall get_RelativeTimePosition (
        /*[out,retval]*/ BSTR * pRelativeTimePosition ) = 0;
      virtual HRESULT __stdcall get_AbsoluteTimePosition (
        /*[out,retval]*/ BSTR * pbstrAbsoluteTimePosition ) = 0;
      virtual HRESULT __stdcall get_RelativeCounterPosition (
        /*[out,retval]*/ long * plRelativeCounterPosition ) = 0;
      virtual HRESULT __stdcall get_AbsoluteCounterPosition (
        /*[out,retval]*/ long * plAbsoluteCounterPosition ) = 0;
      virtual HRESULT __stdcall get_CurrentTransportActions (
        /*[out,retval]*/ BSTR * pbstrCurrentTransportActions ) = 0;
      virtual HRESULT __stdcall get_LastChange (
        /*[out,retval]*/ BSTR * pbstrLastChange ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_SeekMode (
        /*[out,retval]*/ BSTR * pbstrSeekMode ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_SeekTarget (
        /*[out,retval]*/ BSTR * pbstrSeekTarget ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_InstanceID (
        /*[out,retval]*/ unsigned long * pulInstanceID ) = 0;
      virtual HRESULT __stdcall get_CurrentProtocolInfo (
        /*[out,retval]*/ BSTR * pstrProtocolInfo ) = 0;
      virtual HRESULT __stdcall SetAVTransportURI (
        /*[in]*/ IUnknown * punkRemoteEndpointInfo,
        /*[in]*/ unsigned long ulInstanceID,
        /*[in]*/ BSTR bstrCurrentURI,
        /*[in]*/ BSTR bstrCurrentURIMetaData ) = 0;
      virtual HRESULT __stdcall GetMediaInfo (
        /*[in]*/ unsigned long ulInstanceID,
        /*[out]*/ unsigned long * pulNumTracks,
        /*[out]*/ BSTR * pbstrMediaDuration,
        /*[out]*/ BSTR * pbstrCurrentURI,
        /*[out]*/ BSTR * pbstrCurrentURIMetaData,
        /*[out]*/ BSTR * pbstrNextURI,
        /*[out]*/ BSTR * pNextURIMetaData,
        /*[out]*/ BSTR * pbstrPlayMedium,
        /*[out]*/ BSTR * pbstrRecordMedium,
        /*[out]*/ BSTR * pbstrWriteStatus ) = 0;
      virtual HRESULT __stdcall GetTransportInfo (
        /*[in]*/ unsigned long ulInstanceID,
        /*[out]*/ BSTR * pbstrCurrentTransportState,
        /*[out]*/ BSTR * pbstrCurrentTransportStatus,
        /*[out]*/ BSTR * pbstrCurrentSpeed ) = 0;
      virtual HRESULT __stdcall GetPositionInfo (
        /*[in]*/ unsigned long ulInstanceID,
        /*[out]*/ unsigned long * pTrack,
        /*[out]*/ BSTR * pbstrTrackDuration,
        /*[out]*/ BSTR * pbstrTrackMetaData,
        /*[out]*/ BSTR * pbstrTrackURI,
        /*[out]*/ BSTR * pbstrRelTime,
        /*[out]*/ BSTR * pbstrAbsTime,
        /*[out]*/ long * plRelCount,
        /*[out]*/ long * plAbsCount ) = 0;
      virtual HRESULT __stdcall GetDeviceCapabilities (
        /*[in]*/ unsigned long ulInstanceID,
        /*[out]*/ BSTR * pbstrPlayMedia,
        /*[out]*/ BSTR * pbstrRecMedia,
        /*[out]*/ BSTR * pbstrRecQualityModes ) = 0;
      virtual HRESULT __stdcall GetTransportSettings (
        /*[in]*/ unsigned long ulInstanceID,
        /*[out]*/ BSTR * pbstrPlayMode,
        /*[out]*/ BSTR * pbstrRecQualityMode ) = 0;
      virtual HRESULT __stdcall stop (
        /*[in]*/ unsigned long ulInstanceID ) = 0;
      virtual HRESULT __stdcall play (
        /*[in]*/ unsigned long ulInstanceID,
        /*[in]*/ BSTR bstrSpeed ) = 0;
      virtual HRESULT __stdcall pause (
        /*[in]*/ unsigned long ulInstanceID ) = 0;
      virtual HRESULT __stdcall Seek (
        /*[in]*/ unsigned long ulInstanceID,
        /*[in]*/ BSTR bstrUnit,
        /*[in]*/ BSTR bstrTarget ) = 0;
      virtual HRESULT __stdcall next (
        /*[in]*/ unsigned long ulInstanceID ) = 0;
      virtual HRESULT __stdcall previous (
        /*[in]*/ unsigned long ulInstanceID ) = 0;
      virtual HRESULT __stdcall GetCurrentTransportActions (
        /*[in]*/ unsigned long ulInstanceID,
        /*[in,out]*/ BSTR * pbstrActions ) = 0;
};

struct __declspec(uuid("fb61cd38-8de7-4479-8b76-a8d097c20c70"))
IWMPDMRConnectionManagerService : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_SourceProtocolInfo (
        /*[out,retval]*/ BSTR * pbstrSourceProtocolInfo ) = 0;
      virtual HRESULT __stdcall get_SinkProtocolInfo (
        /*[out,retval]*/ BSTR * pbstrSinkProtocolInfo ) = 0;
      virtual HRESULT __stdcall get_CurrentConnectionIDs (
        /*[out,retval]*/ BSTR * pbstrCurrentConnectionIDs ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_ConnectionStatus (
        /*[out,retval]*/ BSTR * pbstrA_ARG_TYPE_ConnectionStatus ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_ConnectionManager (
        /*[out,retval]*/ BSTR * pbstrA_ARG_TYPE_ConnectionManager ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_Direction (
        /*[out,retval]*/ BSTR * pbstrA_ARG_TYPE_Direction ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_ProtocolInfo (
        /*[out,retval]*/ BSTR * pbstrA_ARG_TYPE_ProtocolInfo ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_ConnectionID (
        /*[out,retval]*/ long * plA_ARG_TYPE_ConnectionID ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_AVTransportID (
        /*[out,retval]*/ long * plA_ARG_TYPE_AVTransportID ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_RcsID (
        /*[out,retval]*/ long * plA_ARG_TYPE_RcsID ) = 0;
      virtual HRESULT __stdcall GetProtocolInfo (
        /*[in,out]*/ BSTR * pbstrSource,
        /*[in,out]*/ BSTR * pbstrSink ) = 0;
      virtual HRESULT __stdcall GetCurrentConnectionIDs (
        /*[in,out]*/ BSTR * pbstrConnectionIDs ) = 0;
      virtual HRESULT __stdcall GetCurrentConnectionInfo (
        /*[in]*/ long lConnectionID,
        /*[in,out]*/ long * plResID,
        /*[in,out]*/ long * plAVTransportID,
        /*[in,out]*/ BSTR * pbstrProtocolInfo,
        /*[in,out]*/ BSTR * pbstrPeerConnectionManager,
        /*[in,out]*/ long * plPeerConnectionID,
        /*[in,out]*/ BSTR * pbstrDirection,
        /*[in,out]*/ BSTR * pbstrStatus ) = 0;
};

struct __declspec(uuid("ff4b1bda-19f0-42cf-8dda-19162950c543"))
IWMPDMRRenderingControlService : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_LastChange (
        /*[out,retval]*/ BSTR * pbstrLastChange ) = 0;
      virtual HRESULT __stdcall get_PresetNameList (
        /*[out,retval]*/ BSTR * pbstrPresetNameList ) = 0;
      virtual HRESULT __stdcall get_mute (
        /*[out,retval]*/ VARIANT_BOOL * pbMute ) = 0;
      virtual HRESULT __stdcall get_volume (
        /*[out,retval]*/ unsigned short * puiVolume ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_Channel (
        /*[out,retval]*/ BSTR * pbstrA_ARG_TYPE_Channel ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_InstanceID (
        /*[out,retval]*/ unsigned long * pulA_ARG_TYPE_InstanceID ) = 0;
      virtual HRESULT __stdcall get_A_ARG_TYPE_PresetName (
        /*[out,retval]*/ BSTR * pbstrA_ARG_TYPE_PresetName ) = 0;
      virtual HRESULT __stdcall ListPresets (
        /*[in]*/ unsigned long ulInstanceID,
        /*[in,out]*/ BSTR * pbstrCurrentPresetList ) = 0;
      virtual HRESULT __stdcall SelectPreset (
        /*[in]*/ unsigned long ulInstanceID,
        /*[in]*/ BSTR bstrPresetName ) = 0;
      virtual HRESULT __stdcall GetMute (
        /*[in]*/ unsigned long ulInstanceID,
        /*[in]*/ BSTR bstrChannel,
        /*[in,out]*/ VARIANT_BOOL * pbCurrentMute ) = 0;
      virtual HRESULT __stdcall SetMute (
        /*[in]*/ unsigned long ulInstanceID,
        /*[in]*/ BSTR bstrChannel,
        /*[in]*/ VARIANT_BOOL bDesiredMute ) = 0;
      virtual HRESULT __stdcall GetVolume (
        /*[in]*/ unsigned long ulInstanceID,
        /*[in]*/ BSTR bstrChannel,
        /*[in,out]*/ unsigned short * puiCurrentVolume ) = 0;
      virtual HRESULT __stdcall SetVolume (
        /*[in]*/ unsigned long ulInstanceID,
        /*[in]*/ BSTR bstrChannel,
        /*[in]*/ unsigned short uiDesiredVolume ) = 0;
};

struct __declspec(uuid("1f504270-a66b-4223-8e96-26a06c63d69f"))
IWMPEvents3 : IWMPEvents2
{
    //
    // Raw methods provided by interface
    //

      virtual void __stdcall CdromRipStateChange (
        /*[in]*/ struct IWMPCdromRip * pCdromRip,
        /*[in]*/ enum WMPRipState wmprs ) = 0;
      virtual void __stdcall CdromRipMediaError (
        /*[in]*/ struct IWMPCdromRip * pCdromRip,
        /*[in]*/ IDispatch * pMedia ) = 0;
      virtual void __stdcall CdromBurnStateChange (
        /*[in]*/ struct IWMPCdromBurn * pCdromBurn,
        /*[in]*/ enum WMPBurnState wmpbs ) = 0;
      virtual void __stdcall CdromBurnMediaError (
        /*[in]*/ struct IWMPCdromBurn * pCdromBurn,
        /*[in]*/ IDispatch * pMedia ) = 0;
      virtual void __stdcall CdromBurnError (
        /*[in]*/ struct IWMPCdromBurn * pCdromBurn,
        /*[in]*/ HRESULT hrError ) = 0;
      virtual void __stdcall LibraryConnect (
        /*[in]*/ struct IWMPLibrary * pLibrary ) = 0;
      virtual void __stdcall LibraryDisconnect (
        /*[in]*/ struct IWMPLibrary * pLibrary ) = 0;
      virtual void __stdcall FolderScanStateChange (
        /*[in]*/ enum WMPFolderScanState wmpfss ) = 0;
      virtual void __stdcall StringCollectionChange (
        /*[in]*/ IDispatch * pdispStringCollection,
        /*[in]*/ enum WMPStringCollectionChangeEventType change,
        /*[in]*/ long lCollectionIndex ) = 0;
      virtual void __stdcall MediaCollectionMediaAdded (
        /*[in]*/ IDispatch * pdispMedia ) = 0;
      virtual void __stdcall MediaCollectionMediaRemoved (
        /*[in]*/ IDispatch * pdispMedia ) = 0;
};

struct __declspec(uuid("26dabcfa-306b-404d-9a6f-630a8405048d"))
IWMPEvents4 : IWMPEvents3
{
    //
    // Raw methods provided by interface
    //

      virtual void __stdcall DeviceEstimation (
        /*[in]*/ struct IWMPSyncDevice * pDevice,
        /*[in]*/ HRESULT hrResult,
        /*[in]*/ __int64 qwEstimatedUsedSpace,
        /*[in]*/ __int64 qwEstimatedSpace ) = 0;
};

struct __declspec(uuid("bd94dbeb-417f-4928-aa06-087d56ed9b59"))
IWMPCdromBurn : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall isAvailable (
        /*[in]*/ BSTR bstrItem,
        /*[out,retval]*/ VARIANT_BOOL * pIsAvailable ) = 0;
      virtual HRESULT __stdcall getItemInfo (
        /*[in]*/ BSTR bstrItem,
        /*[out,retval]*/ BSTR * pbstrVal ) = 0;
      virtual HRESULT __stdcall get_label (
        /*[out,retval]*/ BSTR * pbstrLabel ) = 0;
      virtual HRESULT __stdcall put_label (
        /*[in]*/ BSTR pbstrLabel ) = 0;
      virtual HRESULT __stdcall get_burnFormat (
        /*[out,retval]*/ enum WMPBurnFormat * pwmpbf ) = 0;
      virtual HRESULT __stdcall put_burnFormat (
        /*[in]*/ enum WMPBurnFormat pwmpbf ) = 0;
      virtual HRESULT __stdcall get_burnPlaylist (
        /*[out,retval]*/ struct IWMPPlaylist * * ppPlaylist ) = 0;
      virtual HRESULT __stdcall put_burnPlaylist (
        /*[in]*/ struct IWMPPlaylist * ppPlaylist ) = 0;
      virtual HRESULT __stdcall refreshStatus ( ) = 0;
      virtual HRESULT __stdcall get_burnState (
        /*[out,retval]*/ enum WMPBurnState * pwmpbs ) = 0;
      virtual HRESULT __stdcall get_burnProgress (
        /*[out,retval]*/ long * plProgress ) = 0;
      virtual HRESULT __stdcall startBurn ( ) = 0;
      virtual HRESULT __stdcall stopBurn ( ) = 0;
      virtual HRESULT __stdcall erase ( ) = 0;
};

struct __declspec(uuid("d5f0f4f1-130c-11d3-b14e-00c04f79faa6"))
IWMPPlaylist : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_count (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall get_name (
        /*[out,retval]*/ BSTR * pbstrName ) = 0;
      virtual HRESULT __stdcall put_name (
        /*[in]*/ BSTR pbstrName ) = 0;
      virtual HRESULT __stdcall get_attributeCount (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall get_attributeName (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ BSTR * pbstrAttributeName ) = 0;
      virtual HRESULT __stdcall get_Item (
        long lIndex,
        /*[out,retval]*/ struct IWMPMedia * * ppIWMPMedia ) = 0;
      virtual HRESULT __stdcall getItemInfo (
        /*[in]*/ BSTR bstrName,
        /*[out,retval]*/ BSTR * pbstrVal ) = 0;
      virtual HRESULT __stdcall setItemInfo (
        /*[in]*/ BSTR bstrName,
        /*[in]*/ BSTR bstrValue ) = 0;
      virtual HRESULT __stdcall get_isIdentical (
        /*[in]*/ struct IWMPPlaylist * pIWMPPlaylist,
        /*[out,retval]*/ VARIANT_BOOL * pvbool ) = 0;
      virtual HRESULT __stdcall clear ( ) = 0;
      virtual HRESULT __stdcall insertItem (
        /*[in]*/ long lIndex,
        /*[in]*/ struct IWMPMedia * pIWMPMedia ) = 0;
      virtual HRESULT __stdcall appendItem (
        /*[in]*/ struct IWMPMedia * pIWMPMedia ) = 0;
      virtual HRESULT __stdcall removeItem (
        /*[in]*/ struct IWMPMedia * pIWMPMedia ) = 0;
      virtual HRESULT __stdcall moveItem (
        long lIndexOld,
        long lIndexNew ) = 0;
};

struct __declspec(uuid("94d55e95-3fac-11d3-b155-00c04f79faa6"))
IWMPMedia : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_isIdentical (
        /*[in]*/ struct IWMPMedia * pIWMPMedia,
        /*[out,retval]*/ VARIANT_BOOL * pvbool ) = 0;
      virtual HRESULT __stdcall get_sourceURL (
        /*[out,retval]*/ BSTR * pbstrSourceURL ) = 0;
      virtual HRESULT __stdcall get_name (
        /*[out,retval]*/ BSTR * pbstrName ) = 0;
      virtual HRESULT __stdcall put_name (
        /*[in]*/ BSTR pbstrName ) = 0;
      virtual HRESULT __stdcall get_imageSourceWidth (
        /*[out,retval]*/ long * pWidth ) = 0;
      virtual HRESULT __stdcall get_imageSourceHeight (
        /*[out,retval]*/ long * pHeight ) = 0;
      virtual HRESULT __stdcall get_markerCount (
        /*[out,retval]*/ long * pMarkerCount ) = 0;
      virtual HRESULT __stdcall getMarkerTime (
        /*[in]*/ long MarkerNum,
        /*[out,retval]*/ double * pMarkerTime ) = 0;
      virtual HRESULT __stdcall getMarkerName (
        /*[in]*/ long MarkerNum,
        /*[out,retval]*/ BSTR * pbstrMarkerName ) = 0;
      virtual HRESULT __stdcall get_duration (
        /*[out,retval]*/ double * pDuration ) = 0;
      virtual HRESULT __stdcall get_durationString (
        /*[out,retval]*/ BSTR * pbstrDuration ) = 0;
      virtual HRESULT __stdcall get_attributeCount (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall getAttributeName (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ BSTR * pbstrItemName ) = 0;
      virtual HRESULT __stdcall getItemInfo (
        /*[in]*/ BSTR bstrItemName,
        /*[out,retval]*/ BSTR * pbstrVal ) = 0;
      virtual HRESULT __stdcall setItemInfo (
        /*[in]*/ BSTR bstrItemName,
        /*[in]*/ BSTR bstrVal ) = 0;
      virtual HRESULT __stdcall getItemInfoByAtom (
        /*[in]*/ long lAtom,
        /*[out,retval]*/ BSTR * pbstrVal ) = 0;
      virtual HRESULT __stdcall isMemberOf (
        /*[in]*/ struct IWMPPlaylist * pPlaylist,
        /*[out,retval]*/ VARIANT_BOOL * pvarfIsMemberOf ) = 0;
      virtual HRESULT __stdcall isReadOnlyItem (
        /*[in]*/ BSTR bstrItemName,
        /*[out,retval]*/ VARIANT_BOOL * pvarfIsReadOnly ) = 0;
};

struct __declspec(uuid("8363bc22-b4b4-4b19-989d-1cd765749dd1"))
IWMPMediaCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall add (
        /*[in]*/ BSTR bstrURL,
        /*[out,retval]*/ struct IWMPMedia * * ppItem ) = 0;
      virtual HRESULT __stdcall getAll (
        /*[out,retval]*/ struct IWMPPlaylist * * ppMediaItems ) = 0;
      virtual HRESULT __stdcall getByName (
        /*[in]*/ BSTR bstrName,
        /*[out,retval]*/ struct IWMPPlaylist * * ppMediaItems ) = 0;
      virtual HRESULT __stdcall getByGenre (
        /*[in]*/ BSTR bstrGenre,
        /*[out,retval]*/ struct IWMPPlaylist * * ppMediaItems ) = 0;
      virtual HRESULT __stdcall getByAuthor (
        /*[in]*/ BSTR bstrAuthor,
        /*[out,retval]*/ struct IWMPPlaylist * * ppMediaItems ) = 0;
      virtual HRESULT __stdcall getByAlbum (
        /*[in]*/ BSTR bstrAlbum,
        /*[out,retval]*/ struct IWMPPlaylist * * ppMediaItems ) = 0;
      virtual HRESULT __stdcall getByAttribute (
        /*[in]*/ BSTR bstrAttribute,
        /*[in]*/ BSTR bstrValue,
        /*[out,retval]*/ struct IWMPPlaylist * * ppMediaItems ) = 0;
      virtual HRESULT __stdcall remove (
        /*[in]*/ struct IWMPMedia * pItem,
        /*[in]*/ VARIANT_BOOL varfDeleteFile ) = 0;
      virtual HRESULT __stdcall getAttributeStringCollection (
        /*[in]*/ BSTR bstrAttribute,
        /*[in]*/ BSTR bstrMediaType,
        /*[out,retval]*/ struct IWMPStringCollection * * ppStringCollection ) = 0;
      virtual HRESULT __stdcall getMediaAtom (
        /*[in]*/ BSTR bstrItemName,
        /*[out,retval]*/ long * plAtom ) = 0;
      virtual HRESULT __stdcall setDeleted (
        /*[in]*/ struct IWMPMedia * pItem,
        /*[in]*/ VARIANT_BOOL varfIsDeleted ) = 0;
      virtual HRESULT __stdcall isDeleted (
        /*[in]*/ struct IWMPMedia * pItem,
        /*[out,retval]*/ VARIANT_BOOL * pvarfIsDeleted ) = 0;
};

struct __declspec(uuid("3df47861-7df1-4c1f-a81b-4c26f0f7a7c6"))
IWMPLibrary : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_name (
        /*[out,retval]*/ BSTR * pbstrName ) = 0;
      virtual HRESULT __stdcall get_type (
        /*[out,retval]*/ enum WMPLibraryType * pwmplt ) = 0;
      virtual HRESULT __stdcall get_mediaCollection (
        /*[out,retval]*/ struct IWMPMediaCollection * * ppIWMPMediaCollection ) = 0;
      virtual HRESULT __stdcall isIdentical (
        /*[in]*/ struct IWMPLibrary * pIWMPLibrary,
        /*[out,retval]*/ VARIANT_BOOL * pvbool ) = 0;
};

struct __declspec(uuid("74c09e02-f828-11d2-a74b-00a0c905f36e"))
IWMPControls : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_isAvailable (
        /*[in]*/ BSTR bstrItem,
        /*[out,retval]*/ VARIANT_BOOL * pIsAvailable ) = 0;
      virtual HRESULT __stdcall play ( ) = 0;
      virtual HRESULT __stdcall stop ( ) = 0;
      virtual HRESULT __stdcall pause ( ) = 0;
      virtual HRESULT __stdcall fastForward ( ) = 0;
      virtual HRESULT __stdcall fastReverse ( ) = 0;
      virtual HRESULT __stdcall get_currentPosition (
        /*[out,retval]*/ double * pdCurrentPosition ) = 0;
      virtual HRESULT __stdcall put_currentPosition (
        /*[in]*/ double pdCurrentPosition ) = 0;
      virtual HRESULT __stdcall get_currentPositionString (
        /*[out,retval]*/ BSTR * pbstrCurrentPosition ) = 0;
      virtual HRESULT __stdcall next ( ) = 0;
      virtual HRESULT __stdcall previous ( ) = 0;
      virtual HRESULT __stdcall get_currentItem (
        /*[out,retval]*/ struct IWMPMedia * * ppIWMPMedia ) = 0;
      virtual HRESULT __stdcall put_currentItem (
        /*[in]*/ struct IWMPMedia * ppIWMPMedia ) = 0;
      virtual HRESULT __stdcall get_currentMarker (
        /*[out,retval]*/ long * plMarker ) = 0;
      virtual HRESULT __stdcall put_currentMarker (
        /*[in]*/ long plMarker ) = 0;
      virtual HRESULT __stdcall playItem (
        /*[in]*/ struct IWMPMedia * pIWMPMedia ) = 0;
};

struct __declspec(uuid("679409c0-99f7-11d3-9fb7-00105aa620bb"))
IWMPPlaylistArray : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_count (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IWMPPlaylist * * ppItem ) = 0;
};

struct __declspec(uuid("10a13217-23a7-439b-b1c0-d847c79b7774"))
IWMPPlaylistCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall newPlaylist (
        /*[in]*/ BSTR bstrName,
        /*[out,retval]*/ struct IWMPPlaylist * * ppItem ) = 0;
      virtual HRESULT __stdcall getAll (
        /*[out,retval]*/ struct IWMPPlaylistArray * * ppPlaylistArray ) = 0;
      virtual HRESULT __stdcall getByName (
        /*[in]*/ BSTR bstrName,
        /*[out,retval]*/ struct IWMPPlaylistArray * * ppPlaylistArray ) = 0;
      virtual HRESULT __stdcall remove (
        /*[in]*/ struct IWMPPlaylist * pItem ) = 0;
      virtual HRESULT __stdcall setDeleted (
        /*[in]*/ struct IWMPPlaylist * pItem,
        /*[in]*/ VARIANT_BOOL varfIsDeleted ) = 0;
      virtual HRESULT __stdcall isDeleted (
        /*[in]*/ struct IWMPPlaylist * pItem,
        /*[out,retval]*/ VARIANT_BOOL * pvarfIsDeleted ) = 0;
      virtual HRESULT __stdcall importPlaylist (
        /*[in]*/ struct IWMPPlaylist * pItem,
        /*[out,retval]*/ struct IWMPPlaylist * * ppImportedItem ) = 0;
};

struct __declspec(uuid("cfab6e98-8730-11d3-b388-00c04f68574b"))
IWMPCdrom : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_driveSpecifier (
        /*[out,retval]*/ BSTR * pbstrDrive ) = 0;
      virtual HRESULT __stdcall get_Playlist (
        /*[out,retval]*/ struct IWMPPlaylist * * ppPlaylist ) = 0;
      virtual HRESULT __stdcall eject ( ) = 0;
};

struct __declspec(uuid("ee4c8fe2-34b2-11d3-a3bf-006097c9b344"))
IWMPCdromCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_count (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall Item (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IWMPCdrom * * ppItem ) = 0;
      virtual HRESULT __stdcall getByDriveSpecifier (
        /*[in]*/ BSTR bstrDriveSpecifier,
        /*[out,retval]*/ struct IWMPCdrom * * ppCdrom ) = 0;
};

struct __declspec(uuid("d84cca99-cce2-11d2-9ecc-0000f8085981"))
IWMPCore : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall close ( ) = 0;
      virtual HRESULT __stdcall get_URL (
        /*[out,retval]*/ BSTR * pbstrURL ) = 0;
      virtual HRESULT __stdcall put_URL (
        /*[in]*/ BSTR pbstrURL ) = 0;
      virtual HRESULT __stdcall get_openState (
        /*[out,retval]*/ enum WMPOpenState * pwmpos ) = 0;
      virtual HRESULT __stdcall get_playState (
        /*[out,retval]*/ enum WMPPlayState * pwmpps ) = 0;
      virtual HRESULT __stdcall get_controls (
        /*[out,retval]*/ struct IWMPControls * * ppControl ) = 0;
      virtual HRESULT __stdcall get_settings (
        /*[out,retval]*/ struct IWMPSettings * * ppSettings ) = 0;
      virtual HRESULT __stdcall get_currentMedia (
        /*[out,retval]*/ struct IWMPMedia * * ppMedia ) = 0;
      virtual HRESULT __stdcall put_currentMedia (
        /*[in]*/ struct IWMPMedia * ppMedia ) = 0;
      virtual HRESULT __stdcall get_mediaCollection (
        /*[out,retval]*/ struct IWMPMediaCollection * * ppMediaCollection ) = 0;
      virtual HRESULT __stdcall get_playlistCollection (
        /*[out,retval]*/ struct IWMPPlaylistCollection * * ppPlaylistCollection ) = 0;
      virtual HRESULT __stdcall get_versionInfo (
        /*[out,retval]*/ BSTR * pbstrVersionInfo ) = 0;
      virtual HRESULT __stdcall launchURL (
        /*[in]*/ BSTR bstrURL ) = 0;
      virtual HRESULT __stdcall get_network (
        /*[out,retval]*/ struct IWMPNetwork * * ppQNI ) = 0;
      virtual HRESULT __stdcall get_currentPlaylist (
        /*[out,retval]*/ struct IWMPPlaylist * * ppPL ) = 0;
      virtual HRESULT __stdcall put_currentPlaylist (
        /*[in]*/ struct IWMPPlaylist * ppPL ) = 0;
      virtual HRESULT __stdcall get_cdromCollection (
        /*[out,retval]*/ struct IWMPCdromCollection * * ppCdromCollection ) = 0;
      virtual HRESULT __stdcall get_closedCaption (
        /*[out,retval]*/ struct IWMPClosedCaption * * ppClosedCaption ) = 0;
      virtual HRESULT __stdcall get_isOnline (
        /*[out,retval]*/ VARIANT_BOOL * pfOnline ) = 0;
      virtual HRESULT __stdcall get_Error (
        /*[out,retval]*/ struct IWMPError * * ppError ) = 0;
      virtual HRESULT __stdcall get_status (
        /*[out,retval]*/ BSTR * pbstrStatus ) = 0;
};

struct __declspec(uuid("bc17e5b7-7561-4c18-bb90-17d485775659"))
IWMPCore2 : IWMPCore
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_dvd (
        /*[out,retval]*/ struct IWMPDVD * * ppDVD ) = 0;
};

struct __declspec(uuid("7587c667-628f-499f-88e7-6a6f4e888464"))
IWMPCore3 : IWMPCore2
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall newPlaylist (
        /*[in]*/ BSTR bstrName,
        /*[in]*/ BSTR bstrURL,
        /*[out,retval]*/ struct IWMPPlaylist * * ppPlaylist ) = 0;
      virtual HRESULT __stdcall newMedia (
        /*[in]*/ BSTR bstrURL,
        /*[out,retval]*/ struct IWMPMedia * * ppMedia ) = 0;
};

struct __declspec(uuid("6c497d62-8919-413c-82db-e935fb3ec584"))
IWMPPlayer4 : IWMPCore3
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_enabled (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_enabled (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_fullScreen (
        /*[out,retval]*/ VARIANT_BOOL * pbFullScreen ) = 0;
      virtual HRESULT __stdcall put_fullScreen (
        VARIANT_BOOL pbFullScreen ) = 0;
      virtual HRESULT __stdcall get_enableContextMenu (
        /*[out,retval]*/ VARIANT_BOOL * pbEnableContextMenu ) = 0;
      virtual HRESULT __stdcall put_enableContextMenu (
        VARIANT_BOOL pbEnableContextMenu ) = 0;
      virtual HRESULT __stdcall put_uiMode (
        /*[in]*/ BSTR pbstrMode ) = 0;
      virtual HRESULT __stdcall get_uiMode (
        /*[out,retval]*/ BSTR * pbstrMode ) = 0;
      virtual HRESULT __stdcall get_stretchToFit (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_stretchToFit (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_windowlessVideo (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_windowlessVideo (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_isRemote (
        /*[out,retval]*/ VARIANT_BOOL * pvarfIsRemote ) = 0;
      virtual HRESULT __stdcall get_playerApplication (
        /*[out,retval]*/ struct IWMPPlayerApplication * * ppIWMPPlayerApplication ) = 0;
      virtual HRESULT __stdcall openPlayer (
        /*[in]*/ BSTR bstrURL ) = 0;
};

struct __declspec(uuid("54062b68-052a-4c25-a39f-8b63346511d4"))
IWMPPlayer3 : IWMPCore2
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_enabled (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_enabled (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_fullScreen (
        /*[out,retval]*/ VARIANT_BOOL * pbFullScreen ) = 0;
      virtual HRESULT __stdcall put_fullScreen (
        VARIANT_BOOL pbFullScreen ) = 0;
      virtual HRESULT __stdcall get_enableContextMenu (
        /*[out,retval]*/ VARIANT_BOOL * pbEnableContextMenu ) = 0;
      virtual HRESULT __stdcall put_enableContextMenu (
        VARIANT_BOOL pbEnableContextMenu ) = 0;
      virtual HRESULT __stdcall put_uiMode (
        /*[in]*/ BSTR pbstrMode ) = 0;
      virtual HRESULT __stdcall get_uiMode (
        /*[out,retval]*/ BSTR * pbstrMode ) = 0;
      virtual HRESULT __stdcall get_stretchToFit (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_stretchToFit (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_windowlessVideo (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_windowlessVideo (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
};

struct __declspec(uuid("0e6b01d1-d407-4c85-bf5f-1c01f6150280"))
IWMPPlayer2 : IWMPCore
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_enabled (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_enabled (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_fullScreen (
        /*[out,retval]*/ VARIANT_BOOL * pbFullScreen ) = 0;
      virtual HRESULT __stdcall put_fullScreen (
        VARIANT_BOOL pbFullScreen ) = 0;
      virtual HRESULT __stdcall get_enableContextMenu (
        /*[out,retval]*/ VARIANT_BOOL * pbEnableContextMenu ) = 0;
      virtual HRESULT __stdcall put_enableContextMenu (
        VARIANT_BOOL pbEnableContextMenu ) = 0;
      virtual HRESULT __stdcall put_uiMode (
        /*[in]*/ BSTR pbstrMode ) = 0;
      virtual HRESULT __stdcall get_uiMode (
        /*[out,retval]*/ BSTR * pbstrMode ) = 0;
      virtual HRESULT __stdcall get_stretchToFit (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_stretchToFit (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_windowlessVideo (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_windowlessVideo (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
};

struct __declspec(uuid("6bf52a4f-394a-11d3-b153-00c04f79faa6"))
IWMPPlayer : IWMPCore
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_enabled (
        /*[out,retval]*/ VARIANT_BOOL * pbEnabled ) = 0;
      virtual HRESULT __stdcall put_enabled (
        /*[in]*/ VARIANT_BOOL pbEnabled ) = 0;
      virtual HRESULT __stdcall get_fullScreen (
        /*[out,retval]*/ VARIANT_BOOL * pbFullScreen ) = 0;
      virtual HRESULT __stdcall put_fullScreen (
        VARIANT_BOOL pbFullScreen ) = 0;
      virtual HRESULT __stdcall get_enableContextMenu (
        /*[out,retval]*/ VARIANT_BOOL * pbEnableContextMenu ) = 0;
      virtual HRESULT __stdcall put_enableContextMenu (
        VARIANT_BOOL pbEnableContextMenu ) = 0;
      virtual HRESULT __stdcall put_uiMode (
        /*[in]*/ BSTR pbstrMode ) = 0;
      virtual HRESULT __stdcall get_uiMode (
        /*[out,retval]*/ BSTR * pbstrMode ) = 0;
};

struct __declspec(uuid("6f030d25-0890-480f-9775-1f7e40ab5b8e"))
IWMPControls2 : IWMPControls
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall step (
        /*[in]*/ long lStep ) = 0;
};

struct __declspec(uuid("ab7c88bb-143e-4ea4-acc3-e4350b2106c3"))
IWMPMedia2 : IWMPMedia
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Error (
        /*[out,retval]*/ struct IWMPErrorItem * * ppIWMPErrorItem ) = 0;
};

struct __declspec(uuid("f118efc7-f03a-4fb4-99c9-1c02a5c1065b"))
IWMPMedia3 : IWMPMedia2
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall getAttributeCountByType (
        /*[in]*/ BSTR bstrType,
        /*[in]*/ BSTR bstrLanguage,
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall getItemInfoByType (
        /*[in]*/ BSTR bstrType,
        /*[in]*/ BSTR bstrLanguage,
        /*[in]*/ long lIndex,
        /*[out,retval]*/ VARIANT * pvarValue ) = 0;
};

struct __declspec(uuid("a1d1110e-d545-476a-9a78-ac3e4cb1e6bd"))
IWMPControls3 : IWMPControls2
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_audioLanguageCount (
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall getAudioLanguageID (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ long * plLangID ) = 0;
      virtual HRESULT __stdcall getAudioLanguageDescription (
        /*[in]*/ long lIndex,
        /*[out,retval]*/ BSTR * pbstrLangDesc ) = 0;
      virtual HRESULT __stdcall get_currentAudioLanguage (
        /*[out,retval]*/ long * plLangID ) = 0;
      virtual HRESULT __stdcall put_currentAudioLanguage (
        /*[in]*/ long plLangID ) = 0;
      virtual HRESULT __stdcall get_currentAudioLanguageIndex (
        /*[out,retval]*/ long * plIndex ) = 0;
      virtual HRESULT __stdcall put_currentAudioLanguageIndex (
        /*[in]*/ long plIndex ) = 0;
      virtual HRESULT __stdcall getLanguageName (
        /*[in]*/ long lLangID,
        /*[out,retval]*/ BSTR * pbstrLangName ) = 0;
      virtual HRESULT __stdcall get_currentPositionTimecode (
        /*[out,retval]*/ BSTR * bstrTimecode ) = 0;
      virtual HRESULT __stdcall put_currentPositionTimecode (
        /*[in]*/ BSTR bstrTimecode ) = 0;
};

struct __declspec(uuid("8ba957f5-fd8c-4791-b82d-f840401ee474"))
IWMPMediaCollection2 : IWMPMediaCollection
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall createQuery (
        /*[out,retval]*/ struct IWMPQuery * * ppQuery ) = 0;
      virtual HRESULT __stdcall getPlaylistByQuery (
        /*[in]*/ struct IWMPQuery * pQuery,
        /*[in]*/ BSTR bstrMediaType,
        /*[in]*/ BSTR bstrSortAttribute,
        /*[in]*/ VARIANT_BOOL fSortAscending,
        /*[out,retval]*/ struct IWMPPlaylist * * ppPlaylist ) = 0;
      virtual HRESULT __stdcall getStringCollectionByQuery (
        /*[in]*/ BSTR bstrAttribute,
        /*[in]*/ struct IWMPQuery * pQuery,
        /*[in]*/ BSTR bstrMediaType,
        /*[in]*/ BSTR bstrSortAttribute,
        /*[in]*/ VARIANT_BOOL fSortAscending,
        /*[out,retval]*/ struct IWMPStringCollection * * ppStringCollection ) = 0;
      virtual HRESULT __stdcall getByAttributeAndMediaType (
        /*[in]*/ BSTR bstrAttribute,
        /*[in]*/ BSTR bstrValue,
        /*[in]*/ BSTR bstrMediaType,
        /*[out,retval]*/ struct IWMPPlaylist * * ppMediaItems ) = 0;
};

struct __declspec(uuid("39c2f8d5-1cf2-4d5e-ae09-d73492cf9eaa"))
IWMPLibraryServices : IUnknown
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall getCountByType (
        /*[in]*/ enum WMPLibraryType wmplt,
        /*[out,retval]*/ long * plCount ) = 0;
      virtual HRESULT __stdcall getLibraryByType (
        /*[in]*/ enum WMPLibraryType wmplt,
        /*[in]*/ long lIndex,
        /*[out,retval]*/ struct IWMPLibrary * * ppIWMPLibrary ) = 0;
};

struct __declspec(uuid("dd578a4e-79b1-426c-bf8f-3add9072500b"))
IWMPLibrary2 : IWMPLibrary
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall getItemInfo (
        /*[in]*/ BSTR bstrItemName,
        /*[out,retval]*/ BSTR * pbstrVal ) = 0;
};

struct __declspec(uuid("b22c85f9-263c-4372-a0da-b518db9b4098"))
IWMPSyncDevice3 : IWMPSyncDevice2
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall estimateSyncSize (
        /*[in]*/ struct IWMPPlaylist * pNonRulePlaylist,
        /*[in]*/ struct IWMPPlaylist * pRulesPlaylist ) = 0;
      virtual HRESULT __stdcall cancelEstimation ( ) = 0;
};

struct __declspec(uuid("5f9cfd92-8cad-11d3-9a7e-00c04f8efb70"))
IWMPPlaylistCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Playlist (
        /*[out,retval]*/ struct IWMPPlaylist * * ppdispPlaylist ) = 0;
      virtual HRESULT __stdcall put_Playlist (
        /*[in]*/ struct IWMPPlaylist * ppdispPlaylist ) = 0;
      virtual HRESULT __stdcall get_columns (
        /*[out,retval]*/ BSTR * pbstrColumns ) = 0;
      virtual HRESULT __stdcall put_columns (
        /*[in]*/ BSTR pbstrColumns ) = 0;
      virtual HRESULT __stdcall get_columnCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall get_columnOrder (
        /*[out,retval]*/ BSTR * pbstrColumnOrder ) = 0;
      virtual HRESULT __stdcall put_columnOrder (
        /*[in]*/ BSTR pbstrColumnOrder ) = 0;
      virtual HRESULT __stdcall get_columnsVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_columnsVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_dropDownVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_dropDownVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_playlistItemsVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_playlistItemsVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_checkboxesVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_checkboxesVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundColor (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_backgroundColor (
        /*[in]*/ BSTR pbstrColor ) = 0;
      virtual HRESULT __stdcall get_foregroundColor (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_foregroundColor (
        /*[in]*/ BSTR pbstrColor ) = 0;
      virtual HRESULT __stdcall get_disabledItemColor (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_disabledItemColor (
        /*[in]*/ BSTR pbstrColor ) = 0;
      virtual HRESULT __stdcall get_itemPlayingColor (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_itemPlayingColor (
        /*[in]*/ BSTR pbstrColor ) = 0;
      virtual HRESULT __stdcall get_itemPlayingBackgroundColor (
        /*[out,retval]*/ BSTR * pbstrBackgroundColor ) = 0;
      virtual HRESULT __stdcall put_itemPlayingBackgroundColor (
        /*[in]*/ BSTR pbstrBackgroundColor ) = 0;
      virtual HRESULT __stdcall get_backgroundImage (
        /*[out,retval]*/ BSTR * pbstrImage ) = 0;
      virtual HRESULT __stdcall put_backgroundImage (
        /*[in]*/ BSTR pbstrImage ) = 0;
      virtual HRESULT __stdcall get_allowItemEditing (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_allowItemEditing (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_allowColumnSorting (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_allowColumnSorting (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_dropDownList (
        /*[out,retval]*/ BSTR * pbstrList ) = 0;
      virtual HRESULT __stdcall put_dropDownList (
        /*[in]*/ BSTR pbstrList ) = 0;
      virtual HRESULT __stdcall get_dropDownToolTip (
        /*[out,retval]*/ BSTR * pbstrToolTip ) = 0;
      virtual HRESULT __stdcall put_dropDownToolTip (
        /*[in]*/ BSTR pbstrToolTip ) = 0;
      virtual HRESULT __stdcall get_copying (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_copying (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall copy ( ) = 0;
      virtual HRESULT __stdcall abortCopy ( ) = 0;
      virtual HRESULT __stdcall deleteSelected ( ) = 0;
      virtual HRESULT __stdcall deleteSelectedFromLibrary ( ) = 0;
      virtual HRESULT __stdcall moveSelectedUp ( ) = 0;
      virtual HRESULT __stdcall moveSelectedDown ( ) = 0;
      virtual HRESULT __stdcall addSelectedToPlaylist (
        /*[in]*/ struct IWMPPlaylist * pdispPlaylist ) = 0;
      virtual HRESULT __stdcall getNextSelectedItem (
        /*[in]*/ long nStartIndex,
        /*[out,retval]*/ long * pnSelected ) = 0;
      virtual HRESULT __stdcall getNextCheckedItem (
        /*[in]*/ long nStartIndex,
        /*[out,retval]*/ long * pnChecked ) = 0;
      virtual HRESULT __stdcall setSelectedState (
        /*[in]*/ long nIndex,
        /*[in]*/ VARIANT_BOOL vbSelected ) = 0;
      virtual HRESULT __stdcall setCheckedState (
        /*[in]*/ long nIndex,
        /*[in]*/ VARIANT_BOOL vbChecked ) = 0;
      virtual HRESULT __stdcall sortColumn (
        /*[in]*/ long nIndex ) = 0;
      virtual HRESULT __stdcall setColumnResizeMode (
        /*[in]*/ long nIndex,
        /*[in]*/ BSTR newMode ) = 0;
      virtual HRESULT __stdcall setColumnWidth (
        /*[in]*/ long nIndex,
        /*[in]*/ long nWidth ) = 0;
      virtual HRESULT __stdcall get_itemErrorColor (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_itemErrorColor (
        /*[in]*/ BSTR pbstrColor ) = 0;
      virtual HRESULT __stdcall get_itemCount (
        /*[out,retval]*/ long * pnItemCount ) = 0;
      virtual HRESULT __stdcall get_itemMedia (
        /*[in]*/ long nIndex,
        /*[out,retval]*/ struct IWMPMedia * * ppMedia ) = 0;
      virtual HRESULT __stdcall get_itemPlaylist (
        /*[in]*/ long nIndex,
        /*[out,retval]*/ struct IWMPPlaylist * * ppPlaylist ) = 0;
      virtual HRESULT __stdcall getNextSelectedItem2 (
        /*[in]*/ long nStartIndex,
        /*[out,retval]*/ long * pnSelected ) = 0;
      virtual HRESULT __stdcall getNextCheckedItem2 (
        /*[in]*/ long nStartIndex,
        /*[out,retval]*/ long * pnChecked ) = 0;
      virtual HRESULT __stdcall setSelectedState2 (
        /*[in]*/ long nIndex,
        /*[in]*/ VARIANT_BOOL vbSelected ) = 0;
      virtual HRESULT __stdcall setCheckedState2 (
        /*[in]*/ long nIndex,
        /*[in]*/ VARIANT_BOOL vbChecked ) = 0;
      virtual HRESULT __stdcall get_leftStatus (
        /*[out,retval]*/ BSTR * pbstrStatus ) = 0;
      virtual HRESULT __stdcall put_leftStatus (
        /*[in]*/ BSTR pbstrStatus ) = 0;
      virtual HRESULT __stdcall get_rightStatus (
        /*[out,retval]*/ BSTR * pbstrStatus ) = 0;
      virtual HRESULT __stdcall put_rightStatus (
        /*[in]*/ BSTR pbstrStatus ) = 0;
      virtual HRESULT __stdcall get_editButtonVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_editButtonVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_dropDownImage (
        /*[out,retval]*/ BSTR * pbstrImage ) = 0;
      virtual HRESULT __stdcall put_dropDownImage (
        /*[in]*/ BSTR pbstrImage ) = 0;
      virtual HRESULT __stdcall get_dropDownBackgroundImage (
        /*[out,retval]*/ BSTR * pbstrImage ) = 0;
      virtual HRESULT __stdcall put_dropDownBackgroundImage (
        /*[in]*/ BSTR pbstrImage ) = 0;
      virtual HRESULT __stdcall get_hueShift (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_hueShift (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_saturation (
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_saturation (
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_statusColor (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_statusColor (
        /*[in]*/ BSTR pbstrColor ) = 0;
      virtual HRESULT __stdcall get_toolbarVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_toolbarVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_itemSelectedColor (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_itemSelectedColor (
        /*[in]*/ BSTR pbstrColor ) = 0;
      virtual HRESULT __stdcall get_itemSelectedFocusLostColor (
        /*[out,retval]*/ BSTR * pbstrFocusLostColor ) = 0;
      virtual HRESULT __stdcall put_itemSelectedFocusLostColor (
        /*[in]*/ BSTR pbstrFocusLostColor ) = 0;
      virtual HRESULT __stdcall get_itemSelectedBackgroundColor (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_itemSelectedBackgroundColor (
        /*[in]*/ BSTR pbstrColor ) = 0;
      virtual HRESULT __stdcall get_itemSelectedBackgroundFocusLostColor (
        /*[out,retval]*/ BSTR * pbstrFocusLostColor ) = 0;
      virtual HRESULT __stdcall put_itemSelectedBackgroundFocusLostColor (
        /*[in]*/ BSTR pbstrFocusLostColor ) = 0;
      virtual HRESULT __stdcall get_backgroundSplitColor (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_backgroundSplitColor (
        /*[in]*/ BSTR pbstrColor ) = 0;
      virtual HRESULT __stdcall get_statusTextColor (
        /*[out,retval]*/ BSTR * pbstrColor ) = 0;
      virtual HRESULT __stdcall put_statusTextColor (
        /*[in]*/ BSTR pbstrColor ) = 0;
};

struct __declspec(uuid("b738fcae-f089-45df-aed6-034b9e7db632"))
IWMPLibraryTreeCtrl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_dropDownVisible (
        /*[out,retval]*/ VARIANT_BOOL * pVal ) = 0;
      virtual HRESULT __stdcall put_dropDownVisible (
        /*[in]*/ VARIANT_BOOL pVal ) = 0;
      virtual HRESULT __stdcall get_foregroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_foregroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_backgroundColor (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_backgroundColor (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_fontSize (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_fontSize (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_fontStyle (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_fontStyle (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_fontFace (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_fontFace (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_filter (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_filter (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_expandState (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_expandState (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Playlist (
        /*[out,retval]*/ struct IWMPPlaylist * * ppPlaylist ) = 0;
      virtual HRESULT __stdcall put_Playlist (
        /*[in]*/ struct IWMPPlaylist * ppPlaylist ) = 0;
      virtual HRESULT __stdcall get_selectedPlaylist (
        /*[out,retval]*/ struct IWMPPlaylist * * ppPlaylist ) = 0;
      virtual HRESULT __stdcall get_selectedMedia (
        /*[out,retval]*/ struct IWMPMedia * * ppMedia ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_WMPLib =
    {0x6bf52a50,0x394a,0x11d3,{0xb1,0x53,0x00,0xc0,0x4f,0x79,0xfa,0xa6}};
extern "C" const GUID __declspec(selectany) IID_IWMPEvents =
    {0x19a6627b,0xda9e,0x47c1,{0xbb,0x23,0x00,0xb5,0xe6,0x68,0x23,0x6a}};
extern "C" const GUID __declspec(selectany) IID_IWMPSyncDevice =
    {0x82a2986c,0x0293,0x4fd0,{0xb2,0x79,0xb2,0x1b,0x86,0xc0,0x58,0xbe}};
extern "C" const GUID __declspec(selectany) IID_IWMPEvents2 =
    {0x1e7601fa,0x47ea,0x4107,{0x9e,0xa9,0x90,0x04,0xed,0x96,0x84,0xff}};
extern "C" const GUID __declspec(selectany) IID_IWMPCdromRip =
    {0x56e2294f,0x69ed,0x4629,{0xa8,0x69,0xae,0xa7,0x2c,0x0d,0xcc,0x2c}};
extern "C" const GUID __declspec(selectany) IID_IWMPStringCollection =
    {0x4a976298,0x8c0d,0x11d3,{0xb3,0x89,0x00,0xc0,0x4f,0x68,0x57,0x4b}};
extern "C" const GUID __declspec(selectany) DIID__WMPOCXEvents =
    {0x6bf52a51,0x394a,0x11d3,{0xb1,0x53,0x00,0xc0,0x4f,0x79,0xfa,0xa6}};
extern "C" const GUID __declspec(selectany) CLSID_WindowsMediaPlayer =
    {0x6bf52a52,0x394a,0x11d3,{0xb1,0x53,0x00,0xc0,0x4f,0x79,0xfa,0xa6}};
extern "C" const GUID __declspec(selectany) IID_IWMPSettings =
    {0x9104d1ab,0x80c9,0x4fed,{0xab,0xf0,0x2e,0x64,0x17,0xa6,0xdf,0x14}};
extern "C" const GUID __declspec(selectany) IID_IWMPNetwork =
    {0xec21b779,0xedef,0x462d,{0xbb,0xa4,0xad,0x9d,0xde,0x2b,0x29,0xa7}};
extern "C" const GUID __declspec(selectany) IID_IWMPClosedCaption =
    {0x4f2df574,0xc588,0x11d3,{0x9e,0xd0,0x00,0xc0,0x4f,0xb6,0xe9,0x37}};
extern "C" const GUID __declspec(selectany) IID_IWMPErrorItem =
    {0x3614c646,0x3b3b,0x4de7,{0xa8,0x1e,0x93,0x0e,0x3f,0x21,0x27,0xb3}};
extern "C" const GUID __declspec(selectany) IID_IWMPError =
    {0xa12dcf7d,0x14ab,0x4c1b,{0xa8,0xcd,0x63,0x90,0x9f,0x06,0x02,0x5b}};
extern "C" const GUID __declspec(selectany) IID_IWMPDVD =
    {0x8da61686,0x4668,0x4a5c,{0xae,0x5d,0x80,0x31,0x93,0x29,0x3d,0xbe}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlayerApplication =
    {0x40897764,0xceab,0x47be,{0xad,0x4a,0x8e,0x28,0x53,0x7f,0x9b,0xbf}};
extern "C" const GUID __declspec(selectany) IID_IWMPErrorItem2 =
    {0xf75ccec0,0xc67c,0x475c,{0x93,0x1e,0x87,0x19,0x87,0x0b,0xee,0x7d}};
extern "C" const GUID __declspec(selectany) IID_IWMPMetadataPicture =
    {0x5c29bbe0,0xf87d,0x4c45,{0xaa,0x28,0xa7,0x0f,0x02,0x30,0xff,0xa9}};
extern "C" const GUID __declspec(selectany) IID_IWMPMetadataText =
    {0x769a72db,0x13d2,0x45e2,{0x9c,0x48,0x53,0xca,0x9d,0x5b,0x74,0x50}};
extern "C" const GUID __declspec(selectany) IID_IWMPSettings2 =
    {0xfda937a4,0xeece,0x4da5,{0xa0,0xb6,0x39,0xbf,0x89,0xad,0xe2,0xc2}};
extern "C" const GUID __declspec(selectany) IID_IWMPClosedCaption2 =
    {0x350ba78b,0x6bc8,0x4113,{0xa5,0xf5,0x31,0x20,0x56,0x93,0x4e,0xb6}};
extern "C" const GUID __declspec(selectany) IID_IWMPQuery =
    {0xa00918f3,0xa6b0,0x4bfb,{0x91,0x89,0xfd,0x83,0x4c,0x7b,0xc5,0xa5}};
extern "C" const GUID __declspec(selectany) IID_IWMPStringCollection2 =
    {0x46ad648d,0x53f1,0x4a74,{0x92,0xe2,0x2a,0x1b,0x68,0xd6,0x3f,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlayerServices =
    {0x1d01fbdb,0xade2,0x4c8d,{0x98,0x42,0xc1,0x90,0xb9,0x5c,0x33,0x06}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlayerServices2 =
    {0x1bb1592f,0xf040,0x418a,{0x9f,0x71,0x17,0xc7,0x51,0x2b,0x4d,0x70}};
extern "C" const GUID __declspec(selectany) IID_IWMPRemoteMediaServices =
    {0xcbb92747,0x741f,0x44fe,{0xab,0x5b,0xf1,0xa4,0x8f,0x3b,0x2a,0x59}};
extern "C" const GUID __declspec(selectany) IID_IWMPSyncServices =
    {0x8b5050ff,0xe0a4,0x4808,{0xb3,0xa8,0x89,0x3a,0x9e,0x1e,0xd8,0x94}};
extern "C" const GUID __declspec(selectany) IID_IWMPLibrarySharingServices =
    {0x82cba86b,0x9f04,0x474b,{0xa3,0x65,0xd6,0xdd,0x14,0x66,0xe5,0x41}};
extern "C" const GUID __declspec(selectany) IID_IWMPFolderMonitorServices =
    {0x788c8743,0xe57f,0x439d,{0xa4,0x68,0x5b,0xc7,0x7f,0x2e,0x59,0xc6}};
extern "C" const GUID __declspec(selectany) IID_IWMPSyncDevice2 =
    {0x88afb4b2,0x140a,0x44d2,{0x91,0xe6,0x45,0x43,0xda,0x46,0x7c,0xd1}};
extern "C" const GUID __declspec(selectany) IID_IAppDispatch =
    {0xe41c88dd,0x2364,0x4ff7,{0xa0,0xf5,0xca,0x98,0x59,0xaf,0x78,0x3f}};
extern "C" const GUID __declspec(selectany) IID_IWMPSafeBrowser =
    {0xef870383,0x83ab,0x4ea9,{0xbe,0x48,0x56,0xfa,0x42,0x51,0xaf,0x10}};
extern "C" const GUID __declspec(selectany) IID_IWMPObjectExtendedProps =
    {0x21d077c1,0x4baa,0x11d3,{0xbd,0x45,0x00,0xc0,0x4f,0x6e,0xa5,0xae}};
extern "C" const GUID __declspec(selectany) IID_IWMPLayoutSubView =
    {0x72f486b1,0x0d43,0x11d3,{0xbd,0x3f,0x00,0xc0,0x4f,0x6e,0xa5,0xae}};
extern "C" const GUID __declspec(selectany) IID_IWMPLayoutView =
    {0x172e905d,0x80d9,0x4c2f,{0xb7,0xce,0x2c,0xcb,0x77,0x17,0x87,0xa2}};
extern "C" const GUID __declspec(selectany) IID_IWMPEventObject =
    {0x5af0bec1,0x46aa,0x11d3,{0xbd,0x45,0x00,0xc0,0x4f,0x6e,0xa5,0xae}};
extern "C" const GUID __declspec(selectany) IID_IWMPTheme =
    {0x6fcae13d,0xe492,0x4584,{0x9c,0x21,0xd2,0xc0,0x52,0xa2,0xa3,0x3a}};
extern "C" const GUID __declspec(selectany) IID_IWMPLayoutSettingsDispatch =
    {0xb2c2d18e,0x97af,0x4b6a,{0xa5,0x6b,0x2f,0xff,0xf4,0x70,0xfb,0x81}};
extern "C" const GUID __declspec(selectany) IID_IWMPWindow =
    {0x43d5ae92,0x4332,0x477c,{0x88,0x83,0xe0,0xb3,0xb0,0x63,0xc5,0xd2}};
extern "C" const GUID __declspec(selectany) IID_IWMPBrandDispatch =
    {0x98bb02d4,0xed74,0x43cc,{0xad,0x6a,0x45,0x88,0x8f,0x2e,0x0d,0xcc}};
extern "C" const GUID __declspec(selectany) IID_IWMPNowPlayingHelperDispatch =
    {0x504f112e,0x77cc,0x4e3c,{0xa0,0x73,0x53,0x71,0xb3,0x1d,0x9b,0x36}};
extern "C" const GUID __declspec(selectany) IID_IWMPNowDoingDispatch =
    {0x2a2e0da3,0x19fa,0x4f82,{0xbe,0x18,0xcd,0x7d,0x7a,0x3b,0x97,0x7f}};
extern "C" const GUID __declspec(selectany) IID_IWMPHoverPreviewDispatch =
    {0x946b023e,0x044c,0x4473,{0x80,0x18,0x74,0x95,0x4f,0x09,0xdc,0x7e}};
extern "C" const GUID __declspec(selectany) DIID_IWMPButtonCtrlEvents =
    {0xbb17fff7,0x1692,0x4555,{0x91,0x8a,0x6a,0xf7,0xbf,0xac,0xed,0xd2}};
extern "C" const GUID __declspec(selectany) CLSID_WMPButtonCtrl =
    {0x87291b51,0x0c8e,0x11d3,{0xbb,0x2a,0x00,0xa0,0xc9,0x3c,0xa7,0x3a}};
extern "C" const GUID __declspec(selectany) IID_IWMPButtonCtrl =
    {0x87291b50,0x0c8e,0x11d3,{0xbb,0x2a,0x00,0xa0,0xc9,0x3c,0xa7,0x3a}};
extern "C" const GUID __declspec(selectany) CLSID_WMPListBoxCtrl =
    {0xfc1880cf,0x83b9,0x43a7,{0xa0,0x66,0xc4,0x4c,0xe8,0xc8,0x25,0x83}};
extern "C" const GUID __declspec(selectany) IID_IWMPListBoxCtrl =
    {0xfc1880ce,0x83b9,0x43a7,{0xa0,0x66,0xc4,0x4c,0xe8,0xc8,0x25,0x83}};
extern "C" const GUID __declspec(selectany) IID_IWMPListBoxItem =
    {0xd255dfb8,0xc22a,0x42cf,{0xb8,0xb7,0xf1,0x5d,0x7b,0xcf,0x65,0xd6}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlaylistCtrlColumn =
    {0x63d9d30f,0xae4c,0x4678,{0x8c,0xa8,0x57,0x20,0xf4,0xfe,0x44,0x19}};
extern "C" const GUID __declspec(selectany) DIID_IWMPSliderCtrlEvents =
    {0xcdac14d2,0x8be4,0x11d3,{0xbb,0x48,0x00,0xa0,0xc9,0x3c,0xa7,0x3a}};
extern "C" const GUID __declspec(selectany) CLSID_WMPSliderCtrl =
    {0xf2bf2c90,0x405f,0x11d3,{0xbb,0x39,0x00,0xa0,0xc9,0x3c,0xa7,0x3a}};
extern "C" const GUID __declspec(selectany) IID_IWMPSliderCtrl =
    {0xf2bf2c8f,0x405f,0x11d3,{0xbb,0x39,0x00,0xa0,0xc9,0x3c,0xa7,0x3a}};
extern "C" const GUID __declspec(selectany) DIID_IWMPVideoCtrlEvents =
    {0xa85c0477,0x714c,0x4a06,{0xb9,0xf6,0x7c,0x8c,0xa3,0x8b,0x45,0xdc}};
extern "C" const GUID __declspec(selectany) CLSID_WMPVideoCtrl =
    {0x61cecf11,0xfc3a,0x11d2,{0xa1,0xcd,0x00,0x50,0x04,0x60,0x27,0x52}};
extern "C" const GUID __declspec(selectany) IID_IWMPVideoCtrl =
    {0x61cecf10,0xfc3a,0x11d2,{0xa1,0xcd,0x00,0x50,0x04,0x60,0x27,0x52}};
extern "C" const GUID __declspec(selectany) CLSID_WMPEffects =
    {0x47dea830,0xd619,0x4154,{0xb8,0xd8,0x6b,0x74,0x84,0x5d,0x6a,0x2d}};
extern "C" const GUID __declspec(selectany) IID_IWMPEffectsCtrl =
    {0xa9efab80,0x0a60,0x4c3f,{0xbb,0xd1,0x45,0x58,0xdd,0x2a,0x97,0x69}};
extern "C" const GUID __declspec(selectany) CLSID_WMPEqualizerSettingsCtrl =
    {0x93eb32f5,0x87b1,0x45ad,{0xac,0xc6,0x0f,0x24,0x83,0xdb,0x83,0xbb}};
extern "C" const GUID __declspec(selectany) IID_IWMPEqualizerSettingsCtrl =
    {0x2bd3716f,0xa914,0x49fb,{0x86,0x55,0x99,0x6d,0x5f,0x49,0x54,0x98}};
extern "C" const GUID __declspec(selectany) CLSID_WMPVideoSettingsCtrl =
    {0xae7bfafe,0xdcc8,0x4a73,{0x92,0xc8,0xcc,0x30,0x0c,0xa8,0x88,0x59}};
extern "C" const GUID __declspec(selectany) IID_IWMPVideoSettingsCtrl =
    {0x07ec23da,0xef73,0x4bde,{0xa4,0x0f,0xf2,0x69,0xe0,0xb7,0xaf,0xd6}};
extern "C" const GUID __declspec(selectany) CLSID_WMPDolbyDigitalSettingsCtrl =
    {0x1ea16d11,0xdcb1,0x41fe,{0xbc,0x17,0x42,0xcd,0xfb,0xef,0x8f,0x53}};
extern "C" const GUID __declspec(selectany) IID_IWMPDolbyDigitalSettingsCtrl =
    {0xbbd6801a,0xa1d4,0x4d05,{0x9f,0x2d,0x29,0xe0,0x02,0x4c,0x3f,0xd9}};
extern "C" const GUID __declspec(selectany) CLSID_WMPLibraryTreeCtrl =
    {0xd9de732a,0xaee9,0x4503,{0x9d,0x11,0x56,0x05,0x58,0x99,0x77,0xa8}};
extern "C" const GUID __declspec(selectany) CLSID_WMPEditCtrl =
    {0x6342fced,0x25ea,0x4033,{0xbd,0xdb,0xd0,0x49,0xa1,0x43,0x82,0xd3}};
extern "C" const GUID __declspec(selectany) IID_IWMPEditCtrl =
    {0x70e1217c,0xc617,0x4cfd,{0xbd,0x8a,0x69,0xca,0x20,0x43,0xe7,0x0b}};
extern "C" const GUID __declspec(selectany) CLSID_WMPSkinList =
    {0xa8a55fac,0x82ea,0x4bd7,{0xbd,0x7b,0x11,0x58,0x6a,0x4d,0x99,0xe4}};
extern "C" const GUID __declspec(selectany) IID_IWMPSkinList =
    {0x8cea03a2,0xd0c5,0x4e97,{0x9c,0x38,0xa6,0x76,0xa6,0x39,0xa5,0x1d}};
extern "C" const GUID __declspec(selectany) IID_IWMPPluginUIHost =
    {0x5d0ad945,0x289e,0x45c5,{0xa9,0xc6,0xf3,0x01,0xf0,0x15,0x21,0x08}};
extern "C" const GUID __declspec(selectany) CLSID_WMPMenuCtrl =
    {0xbab3768b,0x8883,0x4aec,{0x9f,0x9b,0xe1,0x4c,0x94,0x79,0x13,0xef}};
extern "C" const GUID __declspec(selectany) IID_IWMPMenuCtrl =
    {0x158a7adc,0x33da,0x4039,{0xa5,0x53,0xbd,0xdb,0xbe,0x38,0x9f,0x5c}};
extern "C" const GUID __declspec(selectany) CLSID_WMPAutoMenuCtrl =
    {0x6b28f900,0x8d64,0x4b80,{0x99,0x63,0xcc,0x52,0xdd,0xd1,0xfb,0xb4}};
extern "C" const GUID __declspec(selectany) IID_IWMPAutoMenuCtrl =
    {0x1ad13e0b,0x4f3a,0x41df,{0x9b,0xe2,0xf9,0xe6,0xfe,0x0a,0x78,0x75}};
extern "C" const GUID __declspec(selectany) CLSID_WMPRegionalButtonCtrl =
    {0xae3b6831,0x25a9,0x11d3,{0xbd,0x41,0x00,0xc0,0x4f,0x6e,0xa5,0xae}};
extern "C" const GUID __declspec(selectany) IID_IWMPRegionalButtonCtrl =
    {0x58d507b1,0x2354,0x11d3,{0xbd,0x41,0x00,0xc0,0x4f,0x6e,0xa5,0xae}};
extern "C" const GUID __declspec(selectany) DIID_IWMPRegionalButtonEvents =
    {0x50fc8d31,0x67ac,0x11d3,{0xbd,0x4c,0x00,0xc0,0x4f,0x6e,0xa5,0xae}};
extern "C" const GUID __declspec(selectany) CLSID_WMPRegionalButton =
    {0x09aeff11,0x69ef,0x11d3,{0xbd,0x4d,0x00,0xc0,0x4f,0x6e,0xa5,0xae}};
extern "C" const GUID __declspec(selectany) IID_IWMPRegionalButton =
    {0x58d507b2,0x2354,0x11d3,{0xbd,0x41,0x00,0xc0,0x4f,0x6e,0xa5,0xae}};
extern "C" const GUID __declspec(selectany) DIID_IWMPCustomSliderCtrlEvents =
    {0x95f45aa4,0xed0a,0x11d2,{0xba,0x67,0x00,0x00,0xf8,0x08,0x55,0xe6}};
extern "C" const GUID __declspec(selectany) CLSID_WMPCustomSliderCtrl =
    {0x95f45aa3,0xed0a,0x11d2,{0xba,0x67,0x00,0x00,0xf8,0x08,0x55,0xe6}};
extern "C" const GUID __declspec(selectany) IID_IWMPCustomSlider =
    {0x95f45aa2,0xed0a,0x11d2,{0xba,0x67,0x00,0x00,0xf8,0x08,0x55,0xe6}};
extern "C" const GUID __declspec(selectany) CLSID_WMPTextCtrl =
    {0xddda102e,0x0e17,0x11d3,{0xa2,0xe2,0x00,0xc0,0x4f,0x79,0xf8,0x8e}};
extern "C" const GUID __declspec(selectany) IID_IWMPTextCtrl =
    {0x237dac8e,0x0e32,0x11d3,{0xa2,0xe2,0x00,0xc0,0x4f,0x79,0xf8,0x8e}};
extern "C" const GUID __declspec(selectany) CLSID_WMPPlaylistCtrl =
    {0x5f9cfd93,0x8cad,0x11d3,{0x9a,0x7e,0x00,0xc0,0x4f,0x8e,0xfb,0x70}};
extern "C" const GUID __declspec(selectany) IID_ITaskCntrCtrl =
    {0x891eadb1,0x1c45,0x48b0,{0xb7,0x04,0x49,0xa8,0x88,0xda,0x98,0xc4}};
extern "C" const GUID __declspec(selectany) DIID__WMPCoreEvents =
    {0xd84cca96,0xcce2,0x11d2,{0x9e,0xcc,0x00,0x00,0xf8,0x08,0x59,0x81}};
extern "C" const GUID __declspec(selectany) CLSID_WMPCore =
    {0x09428d37,0xe0b9,0x11d2,{0xb1,0x47,0x00,0xc0,0x4f,0x79,0xfa,0xa6}};
extern "C" const GUID __declspec(selectany) IID_IWMPGraphEventHandler =
    {0x6b550945,0x018f,0x11d3,{0xb1,0x4a,0x00,0xc0,0x4f,0x79,0xfa,0xa6}};
extern "C" const GUID __declspec(selectany) IID_IBattery =
    {0xf8578bfa,0xcd8f,0x4ce1,{0xa6,0x84,0x5b,0x7e,0x85,0xfc,0xa7,0xdc}};
extern "C" const GUID __declspec(selectany) IID_IBatteryPreset =
    {0x40c6bde7,0x9c90,0x49d4,{0xad,0x20,0xbe,0xf8,0x1a,0x6c,0x5f,0x22}};
extern "C" const GUID __declspec(selectany) IID_IBatteryRandomPreset =
    {0xf85e2d65,0x207d,0x48db,{0x84,0xb1,0x91,0x5e,0x17,0x35,0xdb,0x17}};
extern "C" const GUID __declspec(selectany) IID_IBatterySavedPreset =
    {0x876e7208,0x0172,0x4ebb,{0xb0,0x8b,0x2e,0x1d,0x30,0xdf,0xe4,0x4c}};
extern "C" const GUID __declspec(selectany) IID_IBarsEffect =
    {0x33e9291a,0xf6a9,0x11d2,{0x94,0x35,0x00,0xa0,0xc9,0x2a,0x2f,0x2d}};
extern "C" const GUID __declspec(selectany) IID_IWMPExternal =
    {0xe2cc638c,0xfd2c,0x409b,{0xa1,0xea,0x5d,0xdb,0x72,0xdc,0x8e,0x84}};
extern "C" const GUID __declspec(selectany) IID_IWMPExternalColors =
    {0xd10ccdff,0x472d,0x498c,{0xb5,0xfe,0x36,0x30,0xe5,0x40,0x5e,0x0a}};
extern "C" const GUID __declspec(selectany) IID_IWMPSubscriptionServiceLimited =
    {0x54df358e,0xcf38,0x4010,{0x99,0xf1,0xf4,0x4b,0x0e,0x90,0x00,0xe5}};
extern "C" const GUID __declspec(selectany) IID_IWMPDownloadItem =
    {0xc9470e8e,0x3f6b,0x46a9,{0xa0,0xa9,0x45,0x28,0x15,0xc3,0x42,0x97}};
extern "C" const GUID __declspec(selectany) IID_IWMPDownloadItem2 =
    {0x9fbb3336,0x6da3,0x479d,{0xb8,0xff,0x67,0xd4,0x6e,0x20,0xa9,0x87}};
extern "C" const GUID __declspec(selectany) IID_IWMPDownloadCollection =
    {0x0a319c7f,0x85f9,0x436c,{0xb8,0x8e,0x82,0xfd,0x88,0x00,0x0e,0x1c}};
extern "C" const GUID __declspec(selectany) IID_IWMPDownloadManager =
    {0xe15e9ad1,0x8f20,0x4cc4,{0x9e,0xc7,0x1a,0x32,0x8c,0xa8,0x6a,0x0d}};
extern "C" const GUID __declspec(selectany) IID_IWMPSubscriptionServiceExternal =
    {0x2e922378,0xee70,0x4ceb,{0xbb,0xab,0xce,0x7c,0xe4,0xa0,0x48,0x16}};
extern "C" const GUID __declspec(selectany) IID_IWMPSubscriptionServicePlayMedia =
    {0x5f0248c1,0x62b3,0x42d7,{0xb9,0x27,0x02,0x91,0x19,0xe6,0xad,0x14}};
extern "C" const GUID __declspec(selectany) IID_IWMPDiscoExternal =
    {0xa915cea2,0x72df,0x41e1,{0xa5,0x76,0xef,0x0b,0xae,0x5e,0x51,0x69}};
extern "C" const GUID __declspec(selectany) IID_IWMPCDDVDWizardExternal =
    {0x2d7ef888,0x1d3c,0x484a,{0xa9,0x06,0x9f,0x49,0xd9,0x9b,0xb3,0x44}};
extern "C" const GUID __declspec(selectany) IID_IWMPBaseExternal =
    {0xf81b2a59,0x02bc,0x4003,{0x8b,0x2f,0xc1,0x24,0xaf,0x66,0xfc,0x66}};
extern "C" const GUID __declspec(selectany) IID_IWMPOfflineExternal =
    {0x3148e685,0xb243,0x423d,{0x83,0x41,0x84,0x80,0xd6,0xef,0xf6,0x74}};
extern "C" const GUID __declspec(selectany) IID_IWMPDMRAVTransportService =
    {0x4e195db1,0x9e29,0x47fc,{0x9c,0xe1,0xde,0x99,0x37,0xd3,0x29,0x25}};
extern "C" const GUID __declspec(selectany) IID_IWMPDMRConnectionManagerService =
    {0xfb61cd38,0x8de7,0x4479,{0x8b,0x76,0xa8,0xd0,0x97,0xc2,0x0c,0x70}};
extern "C" const GUID __declspec(selectany) IID_IWMPDMRRenderingControlService =
    {0xff4b1bda,0x19f0,0x42cf,{0x8d,0xda,0x19,0x16,0x29,0x50,0xc5,0x43}};
extern "C" const GUID __declspec(selectany) IID_IWMPEvents3 =
    {0x1f504270,0xa66b,0x4223,{0x8e,0x96,0x26,0xa0,0x6c,0x63,0xd6,0x9f}};
extern "C" const GUID __declspec(selectany) IID_IWMPEvents4 =
    {0x26dabcfa,0x306b,0x404d,{0x9a,0x6f,0x63,0x0a,0x84,0x05,0x04,0x8d}};
extern "C" const GUID __declspec(selectany) IID_IWMPCdromBurn =
    {0xbd94dbeb,0x417f,0x4928,{0xaa,0x06,0x08,0x7d,0x56,0xed,0x9b,0x59}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlaylist =
    {0xd5f0f4f1,0x130c,0x11d3,{0xb1,0x4e,0x00,0xc0,0x4f,0x79,0xfa,0xa6}};
extern "C" const GUID __declspec(selectany) IID_IWMPMedia =
    {0x94d55e95,0x3fac,0x11d3,{0xb1,0x55,0x00,0xc0,0x4f,0x79,0xfa,0xa6}};
extern "C" const GUID __declspec(selectany) IID_IWMPMediaCollection =
    {0x8363bc22,0xb4b4,0x4b19,{0x98,0x9d,0x1c,0xd7,0x65,0x74,0x9d,0xd1}};
extern "C" const GUID __declspec(selectany) IID_IWMPLibrary =
    {0x3df47861,0x7df1,0x4c1f,{0xa8,0x1b,0x4c,0x26,0xf0,0xf7,0xa7,0xc6}};
extern "C" const GUID __declspec(selectany) IID_IWMPControls =
    {0x74c09e02,0xf828,0x11d2,{0xa7,0x4b,0x00,0xa0,0xc9,0x05,0xf3,0x6e}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlaylistArray =
    {0x679409c0,0x99f7,0x11d3,{0x9f,0xb7,0x00,0x10,0x5a,0xa6,0x20,0xbb}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlaylistCollection =
    {0x10a13217,0x23a7,0x439b,{0xb1,0xc0,0xd8,0x47,0xc7,0x9b,0x77,0x74}};
extern "C" const GUID __declspec(selectany) IID_IWMPCdrom =
    {0xcfab6e98,0x8730,0x11d3,{0xb3,0x88,0x00,0xc0,0x4f,0x68,0x57,0x4b}};
extern "C" const GUID __declspec(selectany) IID_IWMPCdromCollection =
    {0xee4c8fe2,0x34b2,0x11d3,{0xa3,0xbf,0x00,0x60,0x97,0xc9,0xb3,0x44}};
extern "C" const GUID __declspec(selectany) IID_IWMPCore =
    {0xd84cca99,0xcce2,0x11d2,{0x9e,0xcc,0x00,0x00,0xf8,0x08,0x59,0x81}};
extern "C" const GUID __declspec(selectany) IID_IWMPCore2 =
    {0xbc17e5b7,0x7561,0x4c18,{0xbb,0x90,0x17,0xd4,0x85,0x77,0x56,0x59}};
extern "C" const GUID __declspec(selectany) IID_IWMPCore3 =
    {0x7587c667,0x628f,0x499f,{0x88,0xe7,0x6a,0x6f,0x4e,0x88,0x84,0x64}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlayer4 =
    {0x6c497d62,0x8919,0x413c,{0x82,0xdb,0xe9,0x35,0xfb,0x3e,0xc5,0x84}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlayer3 =
    {0x54062b68,0x052a,0x4c25,{0xa3,0x9f,0x8b,0x63,0x34,0x65,0x11,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlayer2 =
    {0x0e6b01d1,0xd407,0x4c85,{0xbf,0x5f,0x1c,0x01,0xf6,0x15,0x02,0x80}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlayer =
    {0x6bf52a4f,0x394a,0x11d3,{0xb1,0x53,0x00,0xc0,0x4f,0x79,0xfa,0xa6}};
extern "C" const GUID __declspec(selectany) IID_IWMPControls2 =
    {0x6f030d25,0x0890,0x480f,{0x97,0x75,0x1f,0x7e,0x40,0xab,0x5b,0x8e}};
extern "C" const GUID __declspec(selectany) IID_IWMPMedia2 =
    {0xab7c88bb,0x143e,0x4ea4,{0xac,0xc3,0xe4,0x35,0x0b,0x21,0x06,0xc3}};
extern "C" const GUID __declspec(selectany) IID_IWMPMedia3 =
    {0xf118efc7,0xf03a,0x4fb4,{0x99,0xc9,0x1c,0x02,0xa5,0xc1,0x06,0x5b}};
extern "C" const GUID __declspec(selectany) IID_IWMPControls3 =
    {0xa1d1110e,0xd545,0x476a,{0x9a,0x78,0xac,0x3e,0x4c,0xb1,0xe6,0xbd}};
extern "C" const GUID __declspec(selectany) IID_IWMPMediaCollection2 =
    {0x8ba957f5,0xfd8c,0x4791,{0xb8,0x2d,0xf8,0x40,0x40,0x1e,0xe4,0x74}};
extern "C" const GUID __declspec(selectany) IID_IWMPLibraryServices =
    {0x39c2f8d5,0x1cf2,0x4d5e,{0xae,0x09,0xd7,0x34,0x92,0xcf,0x9e,0xaa}};
extern "C" const GUID __declspec(selectany) IID_IWMPLibrary2 =
    {0xdd578a4e,0x79b1,0x426c,{0xbf,0x8f,0x3a,0xdd,0x90,0x72,0x50,0x0b}};
extern "C" const GUID __declspec(selectany) IID_IWMPSyncDevice3 =
    {0xb22c85f9,0x263c,0x4372,{0xa0,0xda,0xb5,0x18,0xdb,0x9b,0x40,0x98}};
extern "C" const GUID __declspec(selectany) IID_IWMPPlaylistCtrl =
    {0x5f9cfd92,0x8cad,0x11d3,{0x9a,0x7e,0x00,0xc0,0x4f,0x8e,0xfb,0x70}};
extern "C" const GUID __declspec(selectany) IID_IWMPLibraryTreeCtrl =
    {0xb738fcae,0xf089,0x45df,{0xae,0xd6,0x03,0x4b,0x9e,0x7d,0xb6,0x32}};

#pragma pack(pop)
